// Generated by Bisonc++ V4.09.02 on Wed, 24 Feb 2016 10:59:36 +0330

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "Parserbase.h"
// $insert scanner.h
#include "./Scanner.h"

#include "../perception/model.hpp"

#undef Parser
class Parser: public ParserBase {
        // $insert scannerobject

    public:
        Parser(std::istream& in,
               std::ostream& out,
               u2d::model_t& model):
            d_scanner(in, out),
            _model(model) {
        }
        int parse();

    private:
        Scanner d_scanner;
        u2d::model_t& _model;
        void error(char const* msg);    // called on (syntax) errors
        int lex();                      // returns the next token from the
        // lexical scanner.
        void print();                   // use, e.g., d_token, d_loc

        // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup(bool recovery);
        void nextToken();
        void print__();
        void exceptionHandler__(std::exception const& exc);
};


#endif






