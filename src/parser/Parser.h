// Generated by Bisonc++ V4.01.00 on Mon, 30 Jul 2012 21:33:18 +0430

#ifndef Parser_h_included
#define Parser_h_included

// $insert baseclass
#include "Parserbase.h"
// $insert scanner.h
#include "./Scanner.h"

#include <sstream>

class Agent;

#undef Parser
class Parser: public ParserBase
{
    // $insert scannerobject
    Scanner* d_scanner;
        
    public:
        int parse();
        void setParent(Agent* _parent){this->parent = _parent;}
        void setIstream(std::istream& ss){this->d_scanner = new Scanner(ss,std::cout);}
    private:
        void error(char const *msg);    // called on (syntax) errors
        int lex();                      // returns the next token from the
                                        // lexical scanner. 
        void print();                   // use, e.g., d_token, d_loc

    // support functions for parse():
        void executeAction(int ruleNr);
        void errorRecovery();
        int lookup(bool recovery);
        void nextToken();
        void print__();
        Agent* parent;
};


#endif
