// Generated by Bisonc++ V4.01.00 on Wed, 08 Aug 2012 16:35:53 +0430

// $insert class.ih
#include "Parser.ih"

// The FIRST element of SR arrays shown below uses `d_type', defining the
// state's type, and `d_lastIdx' containing the last element's index. If
// d_lastIdx contains the REQ_TOKEN bitflag (see below) then the state needs
// a token: if in this state d_token__ is _UNDETERMINED_, nextToken() will be
// called

// The LAST element of SR arrays uses `d_token' containing the last retrieved
// token to speed up the (linear) seach.  Except for the first element of SR
// arrays, the field `d_action' is used to determine what to do next. If
// positive, it represents the next state (used with SHIFT); if zero, it
// indicates `ACCEPT', if negative, -d_action represents the number of the
// rule to reduce to.

// `lookup()' tries to find d_token__ in the current SR array. If it fails, and
// there is no default reduction UNEXPECTED_TOKEN__ is thrown, which is then
// caught by the error-recovery function.

// The error-recovery function will pop elements off the stack until a state
// having bit flag ERR_ITEM is found. This state has a transition on _error_
// which is applied. In this _error_ state, while the current token is not a
// proper continuation, new tokens are obtained by nextToken(). If such a
// token is found, error recovery is successful and the token is
// handled according to the error state's SR table and parsing continues.
// During error recovery semantic actions are ignored.

// A state flagged with the DEF_RED flag will perform a default
// reduction if no other continuations are available for the current token.

// The ACCEPT STATE never shows a default reduction: when it is reached the
// parser returns ACCEPT(). During the grammar
// analysis phase a default reduction may have been defined, but it is
// removed during the state-definition phase.

// So:
//      s_x[] = 
//      {
//                  [_field_1_]         [_field_2_]
//
// First element:   {state-type,        idx of last element},
// Other elements:  {required token,    action to perform},
//                                      ( < 0: reduce, 
//                                          0: ACCEPT,
//                                        > 0: next state)
// Last element:    {set to d_token__,    action to perform}
//      }

// When the --thread-safe option is specified, all static data are defined as
// const. If --thread-safe is not provided, the state-tables are not defined
// as const, since the lookup() function below will modify them


namespace // anonymous
{
    char const author[] = "Frank B. Brokken (f.b.brokken@rug.nl)";

    enum 
    {
        STACK_EXPANSION = 5     // size to expand the state-stack with when
                                // full
    };

    enum ReservedTokens
    {
        PARSE_ACCEPT     = 0,   // `ACCEPT' TRANSITION
        _UNDETERMINED_   = -2,
        _EOF_            = -1,
        _error_          = 256
    };
    enum StateType       // modify statetype/data.cc when this enum changes
    {
        NORMAL,
        ERR_ITEM,
        REQ_TOKEN,
        ERR_REQ,    // ERR_ITEM | REQ_TOKEN
        DEF_RED,    // state having default reduction
        ERR_DEF,    // ERR_ITEM | DEF_RED
        REQ_DEF,    // REQ_TOKEN | DEF_RED
        ERR_REQ_DEF // ERR_ITEM | REQ_TOKEN | DEF_RED
    };    
    struct PI__     // Production Info
    {
        size_t d_nonTerm; // identification number of this production's
                            // non-terminal 
        size_t d_size;    // number of elements in this production 
    };

    struct SR__     // Shift Reduce info, see its description above
    {
        union
        {
            int _field_1_;      // initializer, allowing initializations 
                                // of the SR s_[] arrays
            int d_type;
            int d_token;
        };
        union
        {
            int _field_2_;

            int d_lastIdx;          // if negative, the state uses SHIFT
            int d_action;           // may be negative (reduce), 
                                    // postive (shift), or 0 (accept)
            size_t d_errorState;    // used with Error states
        };
    };

    // $insert staticdata
    
// Productions Info Records:
PI__ const s_productionInfo[] = 
{
     {0, 0}, // not used: reduction values are negative
     {554, 1}, // 1: start ->  init
     {554, 1}, // 2: start ->  server_param
     {554, 1}, // 3: start ->  player_param
     {554, 1}, // 4: start ->  player_type
     {554, 1}, // 5: start ->  sense_body
     {554, 1}, // 6: start ->  see
     {561, 1}, // 7: bool (_0) ->  _0
     {561, 1}, // 8: bool (_1) ->  _1
     {562, 1}, // 9: int (INTEGER) ->  INTEGER
     {562, 1}, // 10: int ->  bool
     {563, 1}, // 11: double (DOUBLE) ->  DOUBLE
     {563, 1}, // 12: double ->  int
     {564, 1}, // 13: string (STRING) ->  STRING
     {555, 6}, // 14: init (LP) ->  LP INIT side double play_mode RP
     {566, 1}, // 15: play_mode (PM_BKO) ->  PM_BKO
     {566, 1}, // 16: play_mode (PM_PO) ->  PM_PO
     {566, 1}, // 17: play_mode (PM_TO) ->  PM_TO
     {566, 1}, // 18: play_mode (PM_KOL) ->  PM_KOL
     {566, 1}, // 19: play_mode (PM_KOR) ->  PM_KOR
     {566, 1}, // 20: play_mode (PM_KIL) ->  PM_KIL
     {566, 1}, // 21: play_mode (PM_KIR) ->  PM_KIR
     {566, 1}, // 22: play_mode (PM_FKL) ->  PM_FKL
     {566, 1}, // 23: play_mode (PM_FKR) ->  PM_FKR
     {566, 1}, // 24: play_mode (PM_CKL) ->  PM_CKL
     {566, 1}, // 25: play_mode (PM_CKR) ->  PM_CKR
     {566, 1}, // 26: play_mode (PM_GKL) ->  PM_GKL
     {566, 1}, // 27: play_mode (PM_GKR) ->  PM_GKR
     {566, 1}, // 28: play_mode (PM_GOALL) ->  PM_GOALL
     {566, 1}, // 29: play_mode (PM_GOALR) ->  PM_GOALR
     {566, 1}, // 30: play_mode (PM_DB) ->  PM_DB
     {566, 1}, // 31: play_mode (PM_OL) ->  PM_OL
     {566, 1}, // 32: play_mode (PM_OR) ->  PM_OR
     {556, 191}, // 33: server_param (LP) ->  LP SERVER acd am bdr bp bam bd br bs bsm bsa bw cbc cp cal caw cm cadw cdefw cdelw ciw cmd cmpc cmw crw cws co cop cwr cw cr das dpr dbt ed edt ein eit ei em eht es fko fc fdp fe fkf fsp fwp fl fr glc gld gldir glf glfn glv gl gow gw gmm gg ht hd hi hm im k kl kld kldir lkf klfn klg ks kw kow kpr kr krfl krfr km lf ldf lt mbtp maxda mdp mgk mtp maxm maxna maxnm maxp minda mindp minm minna minnm minp neh nnh oaas okm op och pamk pbsw pcmp pdx pmet pmgdx pnk prw prwa psw ptw pso pam pd pr ps psm psmm pw ptb ptd p pfl pfr prof pgk qs qsl rm rd rdt ri rmin rs rcp sccm scms sms sm ss svs sbs sdr sims sdf sotflt sotfrt sc sim smax sgl sgr sbv smics smod so sso tbd tc td te tpr trf tw tan tls trs tlc tld tldir tlf tlfn tl uo v va vd wa wd wf wn wr wra RP
     {567, 4}, // 34: acd (LP) ->  LP ACD double RP
     {568, 4}, // 35: am (LP) ->  LP AM bool RP
     {569, 4}, // 36: bdr (LP) ->  LP BDR double RP
     {570, 4}, // 37: bp (LP) ->  LP BP double RP
     {571, 4}, // 38: bam (LP) ->  LP BAM double RP
     {572, 4}, // 39: bd (LP) ->  LP BD double RP
     {573, 4}, // 40: br (LP) ->  LP BR double RP
     {574, 4}, // 41: bs (LP) ->  LP BS double RP
     {575, 4}, // 42: bsm (LP) ->  LP BSM double RP
     {576, 4}, // 43: bsa (LP) ->  LP BSA double RP
     {577, 4}, // 44: bw (LP) ->  LP BW double RP
     {578, 4}, // 45: cbc (LP) ->  LP CBC int RP
     {579, 4}, // 46: cp (LP) ->  LP CP double RP
     {580, 4}, // 47: cal (LP) ->  LP CAL double RP
     {581, 4}, // 48: caw (LP) ->  LP CAW double RP
     {582, 4}, // 49: cm (LP) ->  LP CM double RP
     {583, 4}, // 50: cadw (LP) ->  LP CADW int RP
     {584, 4}, // 51: cdefw (LP) ->  LP CDEFW int RP
     {585, 4}, // 52: cdelw (LP) ->  LP CDELW int RP
     {586, 4}, // 53: ciw (LP) ->  LP CIW int RP
     {587, 4}, // 54: cmd (LP) ->  LP CMD int RP
     {588, 4}, // 55: cmpc (LP) ->  LP CMPC int RP
     {589, 4}, // 56: cmw (LP) ->  LP CMW int RP
     {590, 4}, // 57: crw (LP) ->  LP CRW int RP
     {591, 4}, // 58: cws (LP) ->  LP CWS int RP
     {592, 4}, // 59: co (LP) ->  LP CO double RP
     {593, 4}, // 60: cop (LP) ->  LP COP int RP
     {594, 4}, // 61: cwr (LP) ->  LP CWR double RP
     {595, 4}, // 62: cw (LP) ->  LP CW int RP
     {596, 4}, // 63: cr (LP) ->  LP CR double RP
     {597, 4}, // 64: das (LP) ->  LP DAS double RP
     {598, 4}, // 65: dpr (LP) ->  LP DPR double RP
     {755, 4}, // 66: pt_dpr (LP) ->  LP DPR double RP
     {599, 4}, // 67: dbt (LP) ->  LP DBT int RP
     {600, 4}, // 68: ed (LP) ->  LP ED double RP
     {601, 4}, // 69: edt (LP) ->  LP EDT double RP
     {602, 4}, // 70: ein (LP) ->  LP EIN double RP
     {603, 4}, // 71: eit (LP) ->  LP EIT double RP
     {604, 4}, // 72: ei (LP) ->  LP EI double RP
     {605, 4}, // 73: em (LP) ->  LP EM double RP
     {756, 4}, // 74: pt_emx (LP) ->  LP EMAX double RP
     {757, 4}, // 75: pt_emi (LP) ->  LP EM double RP
     {606, 4}, // 76: eht (LP) ->  LP EHT int RP
     {607, 4}, // 77: es (LP) ->  LP ES double RP
     {758, 4}, // 78: pt_es (LP) ->  LP ES double RP
     {608, 4}, // 79: fko (LP) ->  LP FKO double RP
     {609, 4}, // 80: fc (LP) ->  LP FC int RP
     {610, 4}, // 81: fdp (LP) ->  LP FDP double RP
     {759, 4}, // 82: pt_fdp (LP) ->  LP FDP double RP
     {611, 4}, // 83: fe (LP) ->  LP FE double RP
     {612, 4}, // 84: fkf (LP) ->  LP FKF double RP
     {613, 4}, // 85: fsp (LP) ->  LP FSP double RP
     {614, 4}, // 86: fwp (LP) ->  LP FWP double RP
     {615, 4}, // 87: fl (LP) ->  LP FL int RP
     {616, 4}, // 88: fr (LP) ->  LP FR int RP
     {617, 4}, // 89: glc (LP) ->  LP GLC int RP
     {618, 4}, // 90: gld (LP) ->  LP GLD int RP
     {619, 4}, // 91: gldir (LP) ->  LP GLDIR string RP
     {620, 4}, // 92: glf (LP) ->  LP GLF double RP
     {621, 4}, // 93: glfn (LP) ->  LP GLFN string RP
     {622, 4}, // 94: glv (LP) ->  LP GLV int RP
     {623, 4}, // 95: gl (LP) ->  LP GL double RP
     {624, 4}, // 96: gow (LP) ->  LP GOW double RP
     {625, 4}, // 97: gw (LP) ->  LP GW double RP
     {626, 4}, // 98: gmm (LP) ->  LP GMM int RP
     {627, 4}, // 99: gg (LP) ->  LP GG double RP
     {628, 4}, // 100: ht (LP) ->  LP HT int RP
     {629, 4}, // 101: hd (LP) ->  LP HD double RP
     {630, 4}, // 102: hi (LP) ->  LP HI double RP
     {631, 4}, // 103: hm (LP) ->  LP HM double RP
     {632, 4}, // 104: im (LP) ->  LP IM double RP
     {760, 4}, // 105: pt_im (LP) ->  LP IM double RP
     {633, 4}, // 106: k (LP) ->  LP K double RP
     {634, 4}, // 107: kl (LP) ->  LP KL double RP
     {635, 4}, // 108: kld (LP) ->  LP KLD double RP
     {636, 4}, // 109: kldir (LP) ->  LP KLDIR string RP
     {637, 4}, // 110: lkf (LP) ->  LP LKF double RP
     {638, 4}, // 111: klfn (LP) ->  LP KLFN string RP
     {639, 4}, // 112: klg (LP) ->  LP KLG double RP
     {640, 4}, // 113: ks (LP) ->  LP KS int RP
     {641, 4}, // 114: kw (LP) ->  LP KW double RP
     {642, 4}, // 115: kow (LP) ->  LP KOW int RP
     {643, 4}, // 116: kpr (LP) ->  LP KPR double RP
     {761, 4}, // 117: pt_kpr (LP) ->  LP KPR double RP
     {644, 4}, // 118: kr (LP) ->  LP KR double RP
     {762, 4}, // 119: pt_kr (LP) ->  LP KR double RP
     {645, 4}, // 120: krfl (LP) ->  LP KRFL double RP
     {646, 4}, // 121: krfr (LP) ->  LP KRFR double RP
     {647, 4}, // 122: km (LP) ->  LP KM double RP
     {763, 4}, // 123: pt_km (LP) ->  LP KM double RP
     {648, 4}, // 124: lf (LP) ->  LP LF string RP
     {649, 4}, // 125: ldf (LP) ->  LP LDF string RP
     {650, 4}, // 126: lt (LP) ->  LP LT int RP
     {651, 4}, // 127: mbtp (LP) ->  LP MBTP double RP
     {652, 4}, // 128: maxda (LP) ->  LP MAXDA double RP
     {653, 4}, // 129: mdp (LP) ->  LP MDP double RP
     {654, 4}, // 130: mgk (LP) ->  LP MGK int RP
     {655, 4}, // 131: mtp (LP) ->  LP MTP double RP
     {656, 4}, // 132: maxm (LP) ->  LP MAXM double RP
     {657, 4}, // 133: maxna (LP) ->  LP MAXNA double RP
     {658, 4}, // 134: maxnm (LP) ->  LP MAXNM double RP
     {659, 4}, // 135: maxp (LP) ->  LP MAXP double RP
     {660, 4}, // 136: minda (LP) ->  LP MINDA double RP
     {661, 4}, // 137: mindp (LP) ->  LP MINDP double RP
     {662, 4}, // 138: minm (LP) ->  LP MINM double RP
     {663, 4}, // 139: minna (LP) ->  LP MINNA double RP
     {664, 4}, // 140: minnm (LP) ->  LP MINNM double RP
     {665, 4}, // 141: minp (LP) ->  LP MINP double RP
     {666, 4}, // 142: neh (LP) ->  LP NEH int RP
     {667, 4}, // 143: nnh (LP) ->  LP NNH int RP
     {668, 4}, // 144: oaas (LP) ->  LP OAAS double RP
     {669, 4}, // 145: okm (LP) ->  LP OKM double RP
     {670, 4}, // 146: op (LP) ->  LP OP int RP
     {671, 4}, // 147: och (LP) ->  LP OCH double RP
     {672, 4}, // 148: pamk (LP) ->  LP PAMK double RP
     {673, 4}, // 149: pbsw (LP) ->  LP PBSW double RP
     {674, 4}, // 150: pcmp (LP) ->  LP PCMP double RP
     {675, 4}, // 151: pdx (LP) ->  LP PDX double RP
     {676, 4}, // 152: pmet (LP) ->  LP PMET int RP
     {677, 4}, // 153: pmgdx (LP) ->  LP PMGDX int RP
     {678, 4}, // 154: pnk (LP) ->  LP PNK int RP
     {679, 4}, // 155: prw (LP) ->  LP PRW double RP
     {680, 4}, // 156: prwa (LP) ->  LP PRWA int RP
     {681, 4}, // 157: psw (LP) ->  LP PSW int RP
     {682, 4}, // 158: ptw (LP) ->  LP PTW int RP
     {683, 4}, // 159: pso (LP) ->  LP PSO double RP
     {684, 4}, // 160: pam (LP) ->  LP PAM double RP
     {685, 4}, // 161: pd (LP) ->  LP PD double RP
     {764, 4}, // 162: pt_pd (LP) ->  LP PD double RP
     {686, 4}, // 163: pr (LP) ->  LP PR double RP
     {687, 4}, // 164: ps (LP) ->  LP PS double RP
     {765, 4}, // 165: pt_ps (LP) ->  LP PS double RP
     {688, 4}, // 166: psm (LP) ->  LP PSM double RP
     {766, 4}, // 167: pt_psm (LP) ->  LP PSM double RP
     {689, 4}, // 168: psmm (LP) ->  LP PSMM double RP
     {690, 4}, // 169: pw (LP) ->  LP PW double RP
     {691, 4}, // 170: ptb (LP) ->  LP PTB int RP
     {692, 4}, // 171: ptd (LP) ->  LP PTD int RP
     {693, 4}, // 172: p (LP) ->  LP P int RP
     {694, 4}, // 173: pfl (LP) ->  LP PFL double RP
     {695, 4}, // 174: pfr (LP) ->  LP PFR double RP
     {696, 4}, // 175: prof (LP) ->  LP PROF double RP
     {697, 4}, // 176: pgk (LP) ->  LP PGK double RP
     {698, 4}, // 177: qs (LP) ->  LP QS double RP
     {699, 4}, // 178: qsl (LP) ->  LP QSL double RP
     {700, 4}, // 179: rm (LP) ->  LP RM double RP
     {701, 4}, // 180: rd (LP) ->  LP RD double RP
     {702, 4}, // 181: rdt (LP) ->  LP RDT double RP
     {703, 4}, // 182: ri (LP) ->  LP RI double RP
     {704, 4}, // 183: rmin (LP) ->  LP RMIN double RP
     {705, 4}, // 184: rs (LP) ->  LP RS int RP
     {706, 4}, // 185: rcp (LP) ->  LP RCP double RP
     {707, 4}, // 186: sccm (LP) ->  LP SCCM int RP
     {708, 4}, // 187: scms (LP) ->  LP SCMS int RP
     {709, 4}, // 188: sms (LP) ->  LP SMS int RP
     {710, 4}, // 189: sm (LP) ->  LP SM double RP
     {711, 4}, // 190: ss (LP) ->  LP SS int RP
     {712, 4}, // 191: svs (LP) ->  LP SVS int RP
     {713, 4}, // 192: sbs (LP) ->  LP SBS int RP
     {714, 4}, // 193: sdr (LP) ->  LP SDR double RP
     {715, 4}, // 194: sims (LP) ->  LP SIMS int RP
     {716, 4}, // 195: sdf (LP) ->  LP SDF int RP
     {717, 4}, // 196: sotflt (LP) ->  LP SOTFLT double RP
     {718, 4}, // 197: sotfrt (LP) ->  LP SOTFRT double RP
     {719, 4}, // 198: sc (LP) ->  LP SC double RP
     {720, 4}, // 199: sim (LP) ->  LP SIM double RP
     {767, 4}, // 200: pt_sim (LP) ->  LP SIM double RP
     {721, 4}, // 201: smax (LP) ->  LP SMAX double RP
     {722, 4}, // 202: sgl (LP) ->  LP SGL int RP
     {723, 4}, // 203: sgr (LP) ->  LP SGR int RP
     {724, 4}, // 204: sbv (LP) ->  LP SBV double RP
     {725, 4}, // 205: smics (LP) ->  LP SMICS double RP
     {726, 4}, // 206: smod (LP) ->  LP SMOD double RP
     {727, 4}, // 207: so (LP) ->  LP SO double RP
     {728, 4}, // 208: sso (LP) ->  LP SSO double RP
     {729, 4}, // 209: tbd (LP) ->  LP TBD double RP
     {730, 4}, // 210: tc (LP) ->  LP TC double RP
     {731, 4}, // 211: td (LP) ->  LP TD double RP
     {732, 4}, // 212: te (LP) ->  LP TE double RP
     {733, 4}, // 213: tpr (LP) ->  LP TPR double RP
     {734, 4}, // 214: trf (LP) ->  LP TRF double RP
     {735, 4}, // 215: tw (LP) ->  LP TW double RP
     {736, 4}, // 216: tan (LP) ->  LP TAN double RP
     {737, 4}, // 217: tls (LP) ->  LP TLS string RP
     {738, 4}, // 218: trs (LP) ->  LP TRS string RP
     {739, 4}, // 219: tlc (LP) ->  LP TLC int RP
     {740, 4}, // 220: tld (LP) ->  LP TLD int RP
     {741, 4}, // 221: tldir (LP) ->  LP TLDIR string RP
     {742, 4}, // 222: tlf (LP) ->  LP TLF int RP
     {743, 4}, // 223: tlfn (LP) ->  LP TLFN string RP
     {744, 4}, // 224: tl (LP) ->  LP TL double RP
     {745, 4}, // 225: uo (LP) ->  LP UO double RP
     {746, 4}, // 226: v (LP) ->  LP V bool RP
     {747, 4}, // 227: va (LP) ->  LP VA double RP
     {748, 4}, // 228: vd (LP) ->  LP VD double RP
     {749, 4}, // 229: wa (LP) ->  LP WA double RP
     {750, 4}, // 230: wd (LP) ->  LP WD double RP
     {751, 4}, // 231: wf (LP) ->  LP WF double RP
     {752, 4}, // 232: wn (LP) ->  LP WN double RP
     {753, 4}, // 233: wr (LP) ->  LP WR double RP
     {754, 4}, // 234: wra (LP) ->  LP WRA double RP
     {557, 32}, // 235: player_param (LP) ->  LP PP amdt calsmax calsmin dprdmax dprdmin emaxdf emindf esdmax esdmin fdpdf imdf kprdmax kprdmin kprdf kmdmax kmdmin ndprdmax ndprdmin nsimaxdf pddmax pddmin psdf psmaxdmax psmaxdmin pt ptm rans simaxdf submax RP
     {558, 18}, // 236: player_type (LP) ->  LP PTY id pt_psm pt_sim pt_pd pt_im pt_dpr pt_ps pt_km pt_kr pt_es pt_emx pt_emi pt_kpr pt_fdp pt_cals RP
     {768, 4}, // 237: amdt (LP) ->  LP AMDT double RP
     {769, 4}, // 238: calsmax (LP) ->  LP CALSMAX double RP
     {798, 4}, // 239: pt_cals (LP) ->  LP CALS double RP
     {770, 4}, // 240: calsmin (LP) ->  LP CALSMIN double RP
     {771, 4}, // 241: dprdmax (LP) ->  LP DPRDMAX double RP
     {772, 4}, // 242: dprdmin (LP) ->  LP DPRDMIN double RP
     {773, 4}, // 243: emaxdf (LP) ->  LP EMAXDF double RP
     {774, 4}, // 244: emindf (LP) ->  LP EMINDF double RP
     {775, 4}, // 245: esdmax (LP) ->  LP ESDMAX double RP
     {776, 4}, // 246: esdmin (LP) ->  LP ESDMIN double RP
     {777, 4}, // 247: fdpdf (LP) ->  LP FDPDF double RP
     {778, 4}, // 248: imdf (LP) ->  LP IMDF double RP
     {779, 4}, // 249: kprdmax (LP) ->  LP KPRDMAX double RP
     {780, 4}, // 250: kprdmin (LP) ->  LP KPRDMIN double RP
     {781, 4}, // 251: kprdf (LP) ->  LP KPRDF double RP
     {782, 4}, // 252: kmdmax (LP) ->  LP KMDMAX double RP
     {783, 4}, // 253: kmdmin (LP) ->  LP KMDMIN double RP
     {784, 4}, // 254: ndprdmax (LP) ->  LP NDPRDMAX double RP
     {785, 4}, // 255: ndprdmin (LP) ->  LP NDPRDMIN double RP
     {786, 4}, // 256: nsimaxdf (LP) ->  LP NSIMAXDF double RP
     {787, 4}, // 257: pddmax (LP) ->  LP PDDMAX double RP
     {788, 4}, // 258: pddmin (LP) ->  LP PDDMIN double RP
     {789, 4}, // 259: psdf (LP) ->  LP PSDF double RP
     {790, 4}, // 260: psmaxdmax (LP) ->  LP PSMAXDMAX double RP
     {791, 4}, // 261: psmaxdmin (LP) ->  LP PSMAXDMIN double RP
     {792, 4}, // 262: pt (LP) ->  LP PT int RP
     {793, 4}, // 263: ptm (LP) ->  LP PTM int RP
     {794, 4}, // 264: rans (LP) ->  LP RANS int RP
     {795, 4}, // 265: simaxdf (LP) ->  LP SIMAXDF double RP
     {796, 4}, // 266: submax (LP) ->  LP SUBMAX int RP
     {797, 4}, // 267: id (LP) ->  LP ID int RP
     {559, 21}, // 268: sense_body (LP) ->  LP SEN double vm st sp ha kick dash turn say tneck catch move chview arm focus tackle collision foul RP
     {799, 5}, // 269: vm (LP) ->  LP VM v_q v_w RP
     {816, 1}, // 270: v_q (VQ_H) ->  VQ_H
     {816, 1}, // 271: v_q (VQ_L) ->  VQ_L
     {817, 1}, // 272: v_w (VW_NO) ->  VW_NO
     {817, 1}, // 273: v_w (VW_NA) ->  VW_NA
     {817, 1}, // 274: v_w (VW_WI) ->  VW_WI
     {800, 6}, // 275: st (LP) ->  LP ST double double double RP
     {801, 5}, // 276: sp (LP) ->  LP SP double double RP
     {802, 4}, // 277: ha (LP) ->  LP HA int RP
     {803, 4}, // 278: kick (LP) ->  LP KICK int RP
     {804, 4}, // 279: dash (LP) ->  LP DASH int RP
     {805, 4}, // 280: turn (LP) ->  LP TURN int RP
     {806, 4}, // 281: say (LP) ->  LP SAY int RP
     {807, 4}, // 282: tneck (LP) ->  LP TNECK int RP
     {808, 4}, // 283: catch (LP) ->  LP CATCH int RP
     {809, 4}, // 284: move (LP) ->  LP MOVE int RP
     {810, 4}, // 285: chview (LP) ->  LP CHVIEW int RP
     {811, 7}, // 286: arm (LP) ->  LP ARM movable expires target count RP
     {818, 4}, // 287: movable (LP) ->  LP MOVABLE int RP
     {819, 4}, // 288: expires (LP) ->  LP EXP int RP
     {820, 5}, // 289: target (LP) ->  LP TAR double double RP
     {821, 4}, // 290: count (LP) ->  LP COUNT int RP
     {812, 5}, // 291: focus (LP) ->  LP FOCUS f_target f_count RP
     {822, 4}, // 292: f_target (LP) ->  LP TAR target_type RP
     {823, 4}, // 293: f_count (LP) ->  LP COUNT int RP
     {824, 1}, // 294: target_type (_L) ->  _L
     {824, 1}, // 295: target_type (_R) ->  _R
     {824, 1}, // 296: target_type (NONE) ->  NONE
     {813, 5}, // 297: tackle (LP) ->  LP TACKLE t_expires t_count RP
     {825, 4}, // 298: t_expires (LP) ->  LP EXP int RP
     {826, 4}, // 299: t_count (LP) ->  LP COUNT int RP
     {814, 4}, // 300: collision (LP) ->  LP COLL col_type RP
     {827, 1}, // 301: col_type (NONE) ->  NONE
     {827, 1}, // 302: col_type (BALL) ->  BALL
     {827, 1}, // 303: col_type (PLAYER) ->  PLAYER
     {827, 1}, // 304: col_type (POST) ->  POST
     {815, 5}, // 305: foul (LP) ->  LP FOUL charged card RP
     {828, 4}, // 306: charged (LP) ->  LP CHARGED int RP
     {829, 4}, // 307: card (LP) ->  LP CARD card_type RP
     {830, 1}, // 308: card_type (NONE) ->  NONE
     {830, 1}, // 309: card_type (YELLOW) ->  YELLOW
     {560, 5}, // 310: see (LP) ->  LP SEE int objects RP
     {831, 2}, // 311: objects ->  object objects
     {831, 1}, // 312: objects ->  object
     {832, 1}, // 313: object ->  o_ball
     {832, 1}, // 314: object ->  o_player
     {832, 1}, // 315: object ->  o_goal
     {832, 1}, // 316: object ->  o_flag
     {833, 7}, // 317: o_ball (LP) ->  LP LP _B RP double double RP
     {833, 9}, // 318: o_ball (LP) ->  LP LP _B RP double double double double RP
     {834, 13}, // 319: o_player (LP) ->  LP LP _P string int RP double double double double double double RP
     {834, 14}, // 320: o_player (LP) ->  LP LP _P string int GOALIE RP double double double double double double RP
     {834, 8}, // 321: o_player (LP) ->  LP LP _P string RP double double RP
     {834, 7}, // 322: o_player (LP) ->  LP LP _P RP double double RP
     {835, 8}, // 323: o_goal (LP) ->  LP LP _G side RP double double RP
     {835, 10}, // 324: o_goal (LP) ->  LP LP _G side RP double double double double RP
     {836, 7}, // 325: o_flag (LP) ->  LP LP flag_name RP double double RP
     {836, 9}, // 326: o_flag (LP) ->  LP LP flag_name RP double double double double RP
     {837, 2}, // 327: flag_name (_F) ->  _F _C
     {837, 3}, // 328: flag_name (_F) ->  _F side tb
     {837, 3}, // 329: flag_name (_F) ->  _F _C tb
     {837, 4}, // 330: flag_name (_F) ->  _F _P side tcb
     {837, 4}, // 331: flag_name (_F) ->  _F _G side tb
     {837, 3}, // 332: flag_name (_F) ->  _F lrtb _0
     {837, 4}, // 333: flag_name (_F) ->  _F tb side int
     {837, 4}, // 334: flag_name (_F) ->  _F side tb int
     {837, 2}, // 335: flag_name (_L) ->  _L lrtb
     {837, 1}, // 336: flag_name (_BB) ->  _BB
     {837, 1}, // 337: flag_name (_FF) ->  _FF
     {837, 1}, // 338: flag_name (_GG) ->  _GG
     {837, 1}, // 339: flag_name (_PP) ->  _PP
     {838, 1}, // 340: tb (_T) ->  _T
     {838, 1}, // 341: tb (_B) ->  _B
     {565, 1}, // 342: side (_L) ->  _L
     {565, 1}, // 343: side (_R) ->  _R
     {839, 1}, // 344: tcb (_T) ->  _T
     {839, 1}, // 345: tcb (_C) ->  _C
     {839, 1}, // 346: tcb (_B) ->  _B
     {840, 1}, // 347: lrtb (_L) ->  _L
     {840, 1}, // 348: lrtb (_R) ->  _R
     {840, 1}, // 349: lrtb (_T) ->  _T
     {840, 1}, // 350: lrtb (_B) ->  _B
     {841, 1}, // 351: start_$ ->  start
};

// State info and SR__ transitions for each state.


SR__ s_0[] =
{
    { { REQ_TOKEN}, { 9} },                
    { {       554}, { 1} }, // start       
    { {       555}, { 2} }, // init        
    { {       556}, { 3} }, // server_param
    { {       557}, { 4} }, // player_param
    { {       558}, { 5} }, // player_type 
    { {       559}, { 6} }, // sense_body  
    { {       560}, { 7} }, // see         
    { {       262}, { 8} }, // LP          
    { {         0}, { 0} },                
};

SR__ s_1[] =
{
    { { REQ_TOKEN}, {            2} }, 
    { {     _EOF_}, { PARSE_ACCEPT} }, 
    { {         0}, {            0} }, 
};

SR__ s_2[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -1} }, 
};

SR__ s_3[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -2} }, 
};

SR__ s_4[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -3} }, 
};

SR__ s_5[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -4} }, 
};

SR__ s_6[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -5} }, 
};

SR__ s_7[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -6} }, 
};

SR__ s_8[] =
{
    { { REQ_TOKEN}, {  7} },          
    { {       260}, {  9} }, // INIT  
    { {       261}, { 10} }, // SERVER
    { {       454}, { 11} }, // PP    
    { {       484}, { 12} }, // PTY   
    { {       506}, { 13} }, // SEN   
    { {       540}, { 14} }, // SEE   
    { {         0}, {  0} },          
};

SR__ s_9[] =
{
    { { REQ_TOKEN}, {  4} },        
    { {       565}, { 15} }, // side
    { {       546}, { 16} }, // _L  
    { {       547}, { 17} }, // _R  
    { {         0}, {  0} },        
};

SR__ s_10[] =
{
    { { REQ_TOKEN}, {  3} },       
    { {       567}, { 18} }, // acd
    { {       262}, { 19} }, // LP 
    { {         0}, {  0} },       
};

SR__ s_11[] =
{
    { { REQ_TOKEN}, {  3} },        
    { {       768}, { 20} }, // amdt
    { {       262}, { 21} }, // LP  
    { {         0}, {  0} },        
};

SR__ s_12[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       797}, { 22} }, // id
    { {       262}, { 23} }, // LP
    { {         0}, {  0} },      
};

SR__ s_13[] =
{
    { { REQ_TOKEN}, {  8} },           
    { {       563}, { 24} }, // double 
    { {       257}, { 25} }, // DOUBLE 
    { {       562}, { 26} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       561}, { 28} }, // bool   
    { {       264}, { 29} }, // _0     
    { {       265}, { 30} }, // _1     
    { {         0}, {  0} },           
};

SR__ s_14[] =
{
    { { REQ_TOKEN}, {  6} },           
    { {       562}, { 31} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       561}, { 28} }, // bool   
    { {       264}, { 29} }, // _0     
    { {       265}, { 30} }, // _1     
    { {         0}, {  0} },           
};

SR__ s_15[] =
{
    { { REQ_TOKEN}, {  8} },           
    { {       563}, { 32} }, // double 
    { {       257}, { 25} }, // DOUBLE 
    { {       562}, { 26} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       561}, { 28} }, // bool   
    { {       264}, { 29} }, // _0     
    { {       265}, { 30} }, // _1     
    { {         0}, {  0} },           
};

SR__ s_16[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -342} }, 
};

SR__ s_17[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -343} }, 
};

SR__ s_18[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       568}, { 33} }, // am
    { {       262}, { 34} }, // LP
    { {         0}, {  0} },      
};

SR__ s_19[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       266}, { 35} }, // ACD
    { {         0}, {  0} },       
};

SR__ s_20[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       769}, { 36} }, // calsmax
    { {       262}, { 37} }, // LP     
    { {         0}, {  0} },           
};

SR__ s_21[] =
{
    { { REQ_TOKEN}, {  2} },        
    { {       455}, { 38} }, // AMDT
    { {         0}, {  0} },        
};

SR__ s_22[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       766}, { 39} }, // pt_psm
    { {       262}, { 40} }, // LP    
    { {         0}, {  0} },          
};

SR__ s_23[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       485}, { 41} }, // ID
    { {         0}, {  0} },      
};

SR__ s_24[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       799}, { 42} }, // vm
    { {       262}, { 43} }, // LP
    { {         0}, {  0} },      
};

SR__ s_25[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -11} }, 
};

SR__ s_26[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -12} }, 
};

SR__ s_27[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -9} }, 
};

SR__ s_28[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -10} }, 
};

SR__ s_29[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -7} }, 
};

SR__ s_30[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -8} }, 
};

SR__ s_31[] =
{
    { { REQ_TOKEN}, {  8} },            
    { {       831}, { 44} }, // objects 
    { {       832}, { 45} }, // object  
    { {       833}, { 46} }, // o_ball  
    { {       834}, { 47} }, // o_player
    { {       835}, { 48} }, // o_goal  
    { {       836}, { 49} }, // o_flag  
    { {       262}, { 50} }, // LP      
    { {         0}, {  0} },            
};

SR__ s_32[] =
{
    { { REQ_TOKEN}, { 20} },             
    { {       566}, { 51} }, // play_mode
    { {       488}, { 52} }, // PM_BKO   
    { {       489}, { 53} }, // PM_PO    
    { {       490}, { 54} }, // PM_TO    
    { {       491}, { 55} }, // PM_KOL   
    { {       492}, { 56} }, // PM_KOR   
    { {       493}, { 57} }, // PM_KIL   
    { {       494}, { 58} }, // PM_KIR   
    { {       495}, { 59} }, // PM_FKL   
    { {       496}, { 60} }, // PM_FKR   
    { {       497}, { 61} }, // PM_CKL   
    { {       498}, { 62} }, // PM_CKR   
    { {       499}, { 63} }, // PM_GKL   
    { {       500}, { 64} }, // PM_GKR   
    { {       501}, { 65} }, // PM_GOALL 
    { {       502}, { 66} }, // PM_GOALR 
    { {       503}, { 67} }, // PM_DB    
    { {       504}, { 68} }, // PM_OL    
    { {       505}, { 69} }, // PM_OR    
    { {         0}, {  0} },             
};

SR__ s_33[] =
{
    { { REQ_TOKEN}, {  3} },       
    { {       569}, { 70} }, // bdr
    { {       262}, { 71} }, // LP 
    { {         0}, {  0} },       
};

SR__ s_34[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       267}, { 72} }, // AM
    { {         0}, {  0} },      
};

SR__ s_35[] =
{
    { { REQ_TOKEN}, {  8} },           
    { {       563}, { 73} }, // double 
    { {       257}, { 25} }, // DOUBLE 
    { {       562}, { 26} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       561}, { 28} }, // bool   
    { {       264}, { 29} }, // _0     
    { {       265}, { 30} }, // _1     
    { {         0}, {  0} },           
};

SR__ s_36[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       770}, { 74} }, // calsmin
    { {       262}, { 75} }, // LP     
    { {         0}, {  0} },           
};

SR__ s_37[] =
{
    { { REQ_TOKEN}, {  2} },           
    { {       456}, { 76} }, // CALSMAX
    { {         0}, {  0} },           
};

SR__ s_38[] =
{
    { { REQ_TOKEN}, {  8} },           
    { {       563}, { 77} }, // double 
    { {       257}, { 25} }, // DOUBLE 
    { {       562}, { 26} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       561}, { 28} }, // bool   
    { {       264}, { 29} }, // _0     
    { {       265}, { 30} }, // _1     
    { {         0}, {  0} },           
};

SR__ s_39[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       767}, { 78} }, // pt_sim
    { {       262}, { 79} }, // LP    
    { {         0}, {  0} },          
};

SR__ s_40[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       387}, { 80} }, // PSM
    { {         0}, {  0} },       
};

SR__ s_41[] =
{
    { { REQ_TOKEN}, {  6} },           
    { {       562}, { 81} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       561}, { 28} }, // bool   
    { {       264}, { 29} }, // _0     
    { {       265}, { 30} }, // _1     
    { {         0}, {  0} },           
};

SR__ s_42[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       800}, { 82} }, // st
    { {       262}, { 83} }, // LP
    { {         0}, {  0} },      
};

SR__ s_43[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       507}, { 84} }, // VM
    { {         0}, {  0} },      
};

SR__ s_44[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       263}, { 85} }, // RP
    { {         0}, {  0} },      
};

SR__ s_45[] =
{
    { { REQ_DEF}, {    8} },            
    { {     831}, {   86} }, // objects 
    { {     832}, {   45} }, // object  
    { {     833}, {   46} }, // o_ball  
    { {     834}, {   47} }, // o_player
    { {     835}, {   48} }, // o_goal  
    { {     836}, {   49} }, // o_flag  
    { {     262}, {   50} }, // LP      
    { {       0}, { -312} },            
};

SR__ s_46[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -313} }, 
};

SR__ s_47[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -314} }, 
};

SR__ s_48[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -315} }, 
};

SR__ s_49[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -316} }, 
};

SR__ s_50[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 87} }, // LP
    { {         0}, {  0} },      
};

SR__ s_51[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       263}, { 88} }, // RP
    { {         0}, {  0} },      
};

SR__ s_52[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -15} }, 
};

SR__ s_53[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -16} }, 
};

SR__ s_54[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -17} }, 
};

SR__ s_55[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -18} }, 
};

SR__ s_56[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -19} }, 
};

SR__ s_57[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -20} }, 
};

SR__ s_58[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -21} }, 
};

SR__ s_59[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -22} }, 
};

SR__ s_60[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -23} }, 
};

SR__ s_61[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -24} }, 
};

SR__ s_62[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -25} }, 
};

SR__ s_63[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -26} }, 
};

SR__ s_64[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -27} }, 
};

SR__ s_65[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -28} }, 
};

SR__ s_66[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -29} }, 
};

SR__ s_67[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -30} }, 
};

SR__ s_68[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -31} }, 
};

SR__ s_69[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -32} }, 
};

SR__ s_70[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       570}, { 89} }, // bp
    { {       262}, { 90} }, // LP
    { {         0}, {  0} },      
};

SR__ s_71[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       268}, { 91} }, // BDR
    { {         0}, {  0} },       
};

SR__ s_72[] =
{
    { { REQ_TOKEN}, {  4} },        
    { {       561}, { 92} }, // bool
    { {       264}, { 29} }, // _0  
    { {       265}, { 30} }, // _1  
    { {         0}, {  0} },        
};

SR__ s_73[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       263}, { 93} }, // RP
    { {         0}, {  0} },      
};

SR__ s_74[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       771}, { 94} }, // dprdmax
    { {       262}, { 95} }, // LP     
    { {         0}, {  0} },           
};

SR__ s_75[] =
{
    { { REQ_TOKEN}, {  2} },           
    { {       457}, { 96} }, // CALSMIN
    { {         0}, {  0} },           
};

SR__ s_76[] =
{
    { { REQ_TOKEN}, {  8} },           
    { {       563}, { 97} }, // double 
    { {       257}, { 25} }, // DOUBLE 
    { {       562}, { 26} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       561}, { 28} }, // bool   
    { {       264}, { 29} }, // _0     
    { {       265}, { 30} }, // _1     
    { {         0}, {  0} },           
};

SR__ s_77[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       263}, { 98} }, // RP
    { {         0}, {  0} },      
};

SR__ s_78[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       764}, {  99} }, // pt_pd
    { {       262}, { 100} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_79[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       419}, { 101} }, // SIM
    { {         0}, {   0} },       
};

SR__ s_80[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 102} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_81[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 103} }, // RP
    { {         0}, {   0} },      
};

SR__ s_82[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       801}, { 104} }, // sp
    { {       262}, { 105} }, // LP
    { {         0}, {   0} },      
};

SR__ s_83[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       513}, { 106} }, // ST
    { {         0}, {   0} },      
};

SR__ s_84[] =
{
    { { REQ_TOKEN}, {   4} },        
    { {       816}, { 107} }, // v_q 
    { {       509}, { 108} }, // VQ_H
    { {       508}, { 109} }, // VQ_L
    { {         0}, {   0} },        
};

SR__ s_85[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -310} }, 
};

SR__ s_86[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -311} }, 
};

SR__ s_87[] =
{
    { { REQ_TOKEN}, {  11} },             
    { {       542}, { 110} }, // _B       
    { {       544}, { 111} }, // _P       
    { {       545}, { 112} }, // _G       
    { {       837}, { 113} }, // flag_name
    { {       543}, { 114} }, // _F       
    { {       546}, { 115} }, // _L       
    { {       549}, { 116} }, // _BB      
    { {       550}, { 117} }, // _FF      
    { {       551}, { 118} }, // _GG      
    { {       552}, { 119} }, // _PP      
    { {         0}, {   0} },             
};

SR__ s_88[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -14} }, 
};

SR__ s_89[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       571}, { 120} }, // bam
    { {       262}, { 121} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_90[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       269}, { 122} }, // BP
    { {         0}, {   0} },      
};

SR__ s_91[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 123} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_92[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 124} }, // RP
    { {         0}, {   0} },      
};

SR__ s_93[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -34} }, 
};

SR__ s_94[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       772}, { 125} }, // dprdmin
    { {       262}, { 126} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_95[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       458}, { 127} }, // DPRDMAX
    { {         0}, {   0} },           
};

SR__ s_96[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 128} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_97[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 129} }, // RP
    { {         0}, {   0} },      
};

SR__ s_98[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -237} }, 
};

SR__ s_99[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       760}, { 130} }, // pt_im
    { {       262}, { 131} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_100[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       384}, { 132} }, // PD
    { {         0}, {   0} },      
};

SR__ s_101[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 133} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_102[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 134} }, // RP
    { {         0}, {   0} },      
};

SR__ s_103[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -267} }, 
};

SR__ s_104[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       802}, { 135} }, // ha
    { {       262}, { 136} }, // LP
    { {         0}, {   0} },      
};

SR__ s_105[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       514}, { 137} }, // SP
    { {         0}, {   0} },      
};

SR__ s_106[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 138} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_107[] =
{
    { { REQ_TOKEN}, {   5} },         
    { {       817}, { 139} }, // v_w  
    { {       511}, { 140} }, // VW_NO
    { {       510}, { 141} }, // VW_NA
    { {       512}, { 142} }, // VW_WI
    { {         0}, {   0} },         
};

SR__ s_108[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -270} }, 
};

SR__ s_109[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -271} }, 
};

SR__ s_110[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 143} }, // RP
    { {         0}, {   0} },      
};

SR__ s_111[] =
{
    { { REQ_TOKEN}, {   4} },          
    { {       564}, { 144} }, // string
    { {       263}, { 145} }, // RP    
    { {       259}, { 146} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_112[] =
{
    { { REQ_TOKEN}, {   4} },        
    { {       565}, { 147} }, // side
    { {       546}, {  16} }, // _L  
    { {       547}, {  17} }, // _R  
    { {         0}, {   0} },        
};

SR__ s_113[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 148} }, // RP
    { {         0}, {   0} },      
};

SR__ s_114[] =
{
    { { REQ_TOKEN}, {  11} },        
    { {       541}, { 149} }, // _C  
    { {       565}, { 150} }, // side
    { {       544}, { 151} }, // _P  
    { {       545}, { 152} }, // _G  
    { {       840}, { 153} }, // lrtb
    { {       838}, { 154} }, // tb  
    { {       546}, { 155} }, // _L  
    { {       547}, { 156} }, // _R  
    { {       548}, { 157} }, // _T  
    { {       542}, { 158} }, // _B  
    { {         0}, {   0} },        
};

SR__ s_115[] =
{
    { { REQ_TOKEN}, {   6} },        
    { {       840}, { 159} }, // lrtb
    { {       546}, { 160} }, // _L  
    { {       547}, { 161} }, // _R  
    { {       548}, { 162} }, // _T  
    { {       542}, { 163} }, // _B  
    { {         0}, {   0} },        
};

SR__ s_116[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -336} }, 
};

SR__ s_117[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -337} }, 
};

SR__ s_118[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -338} }, 
};

SR__ s_119[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -339} }, 
};

SR__ s_120[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       572}, { 164} }, // bd
    { {       262}, { 165} }, // LP
    { {         0}, {   0} },      
};

SR__ s_121[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       270}, { 166} }, // BAM
    { {         0}, {   0} },       
};

SR__ s_122[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 167} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_123[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 168} }, // RP
    { {         0}, {   0} },      
};

SR__ s_124[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -35} }, 
};

SR__ s_125[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       773}, { 169} }, // emaxdf
    { {       262}, { 170} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_126[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       459}, { 171} }, // DPRDMIN
    { {         0}, {   0} },           
};

SR__ s_127[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 172} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_128[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 173} }, // RP
    { {         0}, {   0} },      
};

SR__ s_129[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -238} }, 
};

SR__ s_130[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       755}, { 174} }, // pt_dpr
    { {       262}, { 175} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_131[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       331}, { 176} }, // IM
    { {         0}, {   0} },      
};

SR__ s_132[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 177} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_133[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 178} }, // RP
    { {         0}, {   0} },      
};

SR__ s_134[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -167} }, 
};

SR__ s_135[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       803}, { 179} }, // kick
    { {       262}, { 180} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_136[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       515}, { 181} }, // HA
    { {         0}, {   0} },      
};

SR__ s_137[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 182} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_138[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 183} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_139[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 184} }, // RP
    { {         0}, {   0} },      
};

SR__ s_140[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -272} }, 
};

SR__ s_141[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -273} }, 
};

SR__ s_142[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -274} }, 
};

SR__ s_143[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 185} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_144[] =
{
    { { REQ_TOKEN}, {   7} },           
    { {       562}, { 186} }, // int    
    { {       263}, { 187} }, // RP     
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_145[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 188} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_146[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -13} }, 
};

SR__ s_147[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 189} }, // RP
    { {         0}, {   0} },      
};

SR__ s_148[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 190} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_149[] =
{
    { { REQ_DEF}, {    4} },      
    { {     838}, {  191} }, // tb
    { {     548}, {  192} }, // _T
    { {     542}, {  193} }, // _B
    { {       0}, { -327} },      
};

SR__ s_150[] =
{
    { { REQ_TOKEN}, {   4} },      
    { {       838}, { 194} }, // tb
    { {       548}, { 192} }, // _T
    { {       542}, { 193} }, // _B
    { {         0}, {   0} },      
};

SR__ s_151[] =
{
    { { REQ_TOKEN}, {   4} },        
    { {       565}, { 195} }, // side
    { {       546}, {  16} }, // _L  
    { {       547}, {  17} }, // _R  
    { {         0}, {   0} },        
};

SR__ s_152[] =
{
    { { REQ_TOKEN}, {   4} },        
    { {       565}, { 196} }, // side
    { {       546}, {  16} }, // _L  
    { {       547}, {  17} }, // _R  
    { {         0}, {   0} },        
};

SR__ s_153[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       264}, { 197} }, // _0
    { {         0}, {   0} },      
};

SR__ s_154[] =
{
    { { REQ_TOKEN}, {   4} },        
    { {       565}, { 198} }, // side
    { {       546}, {  16} }, // _L  
    { {       547}, {  17} }, // _R  
    { {         0}, {   0} },        
};

SR__ s_155[] =
{
    { { REQ_DEF}, {    2} },      
    { {     264}, { -347} }, // _0
    { {       0}, { -342} },      
};

SR__ s_156[] =
{
    { { REQ_DEF}, {    2} },      
    { {     264}, { -348} }, // _0
    { {       0}, { -343} },      
};

SR__ s_157[] =
{
    { { REQ_DEF}, {    2} },      
    { {     264}, { -349} }, // _0
    { {       0}, { -340} },      
};

SR__ s_158[] =
{
    { { REQ_DEF}, {    2} },      
    { {     264}, { -350} }, // _0
    { {       0}, { -341} },      
};

SR__ s_159[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -335} }, 
};

SR__ s_160[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -347} }, 
};

SR__ s_161[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -348} }, 
};

SR__ s_162[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -349} }, 
};

SR__ s_163[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -350} }, 
};

SR__ s_164[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       573}, { 199} }, // br
    { {       262}, { 200} }, // LP
    { {         0}, {   0} },      
};

SR__ s_165[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       271}, { 201} }, // BD
    { {         0}, {   0} },      
};

SR__ s_166[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 202} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_167[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 203} }, // RP
    { {         0}, {   0} },      
};

SR__ s_168[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -36} }, 
};

SR__ s_169[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       774}, { 204} }, // emindf
    { {       262}, { 205} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_170[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       460}, { 206} }, // EMAXDF
    { {         0}, {   0} },          
};

SR__ s_171[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 207} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_172[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 208} }, // RP
    { {         0}, {   0} },      
};

SR__ s_173[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -240} }, 
};

SR__ s_174[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       765}, { 209} }, // pt_ps
    { {       262}, { 210} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_175[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       297}, { 211} }, // DPR
    { {         0}, {   0} },       
};

SR__ s_176[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 212} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_177[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 213} }, // RP
    { {         0}, {   0} },      
};

SR__ s_178[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -200} }, 
};

SR__ s_179[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       804}, { 214} }, // dash
    { {       262}, { 215} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_180[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       516}, { 216} }, // KICK
    { {         0}, {   0} },        
};

SR__ s_181[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 217} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_182[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 218} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_183[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 219} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_184[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -269} }, 
};

SR__ s_185[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 220} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_186[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       263}, { 221} }, // RP    
    { {       553}, { 222} }, // GOALIE
    { {         0}, {   0} },          
};

SR__ s_187[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 223} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_188[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 224} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_189[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 225} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_190[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 226} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_191[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -329} }, 
};

SR__ s_192[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -340} }, 
};

SR__ s_193[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -341} }, 
};

SR__ s_194[] =
{
    { { REQ_DEF}, {    6} },           
    { {     562}, {  227} }, // int    
    { {     258}, {   27} }, // INTEGER
    { {     561}, {   28} }, // bool   
    { {     264}, {   29} }, // _0     
    { {     265}, {   30} }, // _1     
    { {       0}, { -328} },           
};

SR__ s_195[] =
{
    { { REQ_TOKEN}, {   5} },       
    { {       839}, { 228} }, // tcb
    { {       548}, { 229} }, // _T 
    { {       541}, { 230} }, // _C 
    { {       542}, { 231} }, // _B 
    { {         0}, {   0} },       
};

SR__ s_196[] =
{
    { { REQ_TOKEN}, {   4} },      
    { {       838}, { 232} }, // tb
    { {       548}, { 192} }, // _T
    { {       542}, { 193} }, // _B
    { {         0}, {   0} },      
};

SR__ s_197[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -332} }, 
};

SR__ s_198[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 233} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_199[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       574}, { 234} }, // bs
    { {       262}, { 235} }, // LP
    { {         0}, {   0} },      
};

SR__ s_200[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       272}, { 236} }, // BR
    { {         0}, {   0} },      
};

SR__ s_201[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 237} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_202[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 238} }, // RP
    { {         0}, {   0} },      
};

SR__ s_203[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -37} }, 
};

SR__ s_204[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       775}, { 239} }, // esdmax
    { {       262}, { 240} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_205[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       461}, { 241} }, // EMINDF
    { {         0}, {   0} },          
};

SR__ s_206[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 242} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_207[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 243} }, // RP
    { {         0}, {   0} },      
};

SR__ s_208[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -241} }, 
};

SR__ s_209[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       763}, { 244} }, // pt_km
    { {       262}, { 245} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_210[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       386}, { 246} }, // PS
    { {         0}, {   0} },      
};

SR__ s_211[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 247} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_212[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 248} }, // RP
    { {         0}, {   0} },      
};

SR__ s_213[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -162} }, 
};

SR__ s_214[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       805}, { 249} }, // turn
    { {       262}, { 250} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_215[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       517}, { 251} }, // DASH
    { {         0}, {   0} },        
};

SR__ s_216[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 252} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_217[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 253} }, // RP
    { {         0}, {   0} },      
};

SR__ s_218[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 254} }, // RP
    { {         0}, {   0} },      
};

SR__ s_219[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 255} }, // RP
    { {         0}, {   0} },      
};

SR__ s_220[] =
{
    { { REQ_TOKEN}, {   9} },           
    { {       263}, { 256} }, // RP     
    { {       563}, { 257} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_221[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 258} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_222[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 259} }, // RP
    { {         0}, {   0} },      
};

SR__ s_223[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 260} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_224[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 261} }, // RP
    { {         0}, {   0} },      
};

SR__ s_225[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 262} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_226[] =
{
    { { REQ_TOKEN}, {   9} },           
    { {       263}, { 263} }, // RP     
    { {       563}, { 264} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_227[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -334} }, 
};

SR__ s_228[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -330} }, 
};

SR__ s_229[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -344} }, 
};

SR__ s_230[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -345} }, 
};

SR__ s_231[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -346} }, 
};

SR__ s_232[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -331} }, 
};

SR__ s_233[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -333} }, 
};

SR__ s_234[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       575}, { 265} }, // bsm
    { {       262}, { 266} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_235[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       273}, { 267} }, // BS
    { {         0}, {   0} },      
};

SR__ s_236[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 268} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_237[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 269} }, // RP
    { {         0}, {   0} },      
};

SR__ s_238[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -38} }, 
};

SR__ s_239[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       776}, { 270} }, // esdmin
    { {       262}, { 271} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_240[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       462}, { 272} }, // ESDMAX
    { {         0}, {   0} },          
};

SR__ s_241[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 273} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_242[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 274} }, // RP
    { {         0}, {   0} },      
};

SR__ s_243[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -242} }, 
};

SR__ s_244[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       762}, { 275} }, // pt_kr
    { {       262}, { 276} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_245[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       346}, { 277} }, // KM
    { {         0}, {   0} },      
};

SR__ s_246[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 278} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_247[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 279} }, // RP
    { {         0}, {   0} },      
};

SR__ s_248[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -105} }, 
};

SR__ s_249[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       806}, { 280} }, // say
    { {       262}, { 281} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_250[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       518}, { 282} }, // TURN
    { {         0}, {   0} },        
};

SR__ s_251[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 283} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_252[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 284} }, // RP
    { {         0}, {   0} },      
};

SR__ s_253[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -277} }, 
};

SR__ s_254[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -276} }, 
};

SR__ s_255[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -275} }, 
};

SR__ s_256[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -317} }, 
};

SR__ s_257[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 285} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_258[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 286} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_259[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 287} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_260[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 288} }, // RP
    { {         0}, {   0} },      
};

SR__ s_261[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -322} }, 
};

SR__ s_262[] =
{
    { { REQ_TOKEN}, {   9} },           
    { {       263}, { 289} }, // RP     
    { {       563}, { 290} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_263[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -325} }, 
};

SR__ s_264[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 291} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_265[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       576}, { 292} }, // bsa
    { {       262}, { 293} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_266[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       274}, { 294} }, // BSM
    { {         0}, {   0} },       
};

SR__ s_267[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 295} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_268[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 296} }, // RP
    { {         0}, {   0} },      
};

SR__ s_269[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -39} }, 
};

SR__ s_270[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       777}, { 297} }, // fdpdf
    { {       262}, { 298} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_271[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       463}, { 299} }, // ESDMIN
    { {         0}, {   0} },          
};

SR__ s_272[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 300} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_273[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 301} }, // RP
    { {         0}, {   0} },      
};

SR__ s_274[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -243} }, 
};

SR__ s_275[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       758}, { 302} }, // pt_es
    { {       262}, { 303} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_276[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       343}, { 304} }, // KR
    { {         0}, {   0} },      
};

SR__ s_277[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 305} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_278[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 306} }, // RP
    { {         0}, {   0} },      
};

SR__ s_279[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -66} }, 
};

SR__ s_280[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       807}, { 307} }, // tneck
    { {       262}, { 308} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_281[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       519}, { 309} }, // SAY
    { {         0}, {   0} },       
};

SR__ s_282[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 310} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_283[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 311} }, // RP
    { {         0}, {   0} },      
};

SR__ s_284[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -278} }, 
};

SR__ s_285[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 312} }, // RP
    { {         0}, {   0} },      
};

SR__ s_286[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 313} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_287[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 314} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_288[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -321} }, 
};

SR__ s_289[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -323} }, 
};

SR__ s_290[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 315} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_291[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 316} }, // RP
    { {         0}, {   0} },      
};

SR__ s_292[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       577}, { 317} }, // bw
    { {       262}, { 318} }, // LP
    { {         0}, {   0} },      
};

SR__ s_293[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       275}, { 319} }, // BSA
    { {         0}, {   0} },       
};

SR__ s_294[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 320} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_295[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 321} }, // RP
    { {         0}, {   0} },      
};

SR__ s_296[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -40} }, 
};

SR__ s_297[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       778}, { 322} }, // imdf
    { {       262}, { 323} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_298[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       464}, { 324} }, // FDPDF
    { {         0}, {   0} },         
};

SR__ s_299[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 325} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_300[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 326} }, // RP
    { {         0}, {   0} },      
};

SR__ s_301[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -244} }, 
};

SR__ s_302[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       756}, { 327} }, // pt_emx
    { {       262}, { 328} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_303[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       306}, { 329} }, // ES
    { {         0}, {   0} },      
};

SR__ s_304[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 330} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_305[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 331} }, // RP
    { {         0}, {   0} },      
};

SR__ s_306[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -165} }, 
};

SR__ s_307[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       808}, { 332} }, // catch
    { {       262}, { 333} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_308[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       520}, { 334} }, // TNECK
    { {         0}, {   0} },         
};

SR__ s_309[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 335} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_310[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 336} }, // RP
    { {         0}, {   0} },      
};

SR__ s_311[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -279} }, 
};

SR__ s_312[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -318} }, 
};

SR__ s_313[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 337} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_314[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 338} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_315[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 339} }, // RP
    { {         0}, {   0} },      
};

SR__ s_316[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -326} }, 
};

SR__ s_317[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       578}, { 340} }, // cbc
    { {       262}, { 341} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_318[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       276}, { 342} }, // BW
    { {         0}, {   0} },      
};

SR__ s_319[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 343} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_320[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 344} }, // RP
    { {         0}, {   0} },      
};

SR__ s_321[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -41} }, 
};

SR__ s_322[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       779}, { 345} }, // kprdmax
    { {       262}, { 346} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_323[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       465}, { 347} }, // IMDF
    { {         0}, {   0} },        
};

SR__ s_324[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 348} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_325[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 349} }, // RP
    { {         0}, {   0} },      
};

SR__ s_326[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -245} }, 
};

SR__ s_327[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       757}, { 350} }, // pt_emi
    { {       262}, { 351} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_328[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       486}, { 352} }, // EMAX
    { {         0}, {   0} },        
};

SR__ s_329[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 353} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_330[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 354} }, // RP
    { {         0}, {   0} },      
};

SR__ s_331[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -123} }, 
};

SR__ s_332[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       809}, { 355} }, // move
    { {       262}, { 356} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_333[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       521}, { 357} }, // CATCH
    { {         0}, {   0} },         
};

SR__ s_334[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 358} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_335[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 359} }, // RP
    { {         0}, {   0} },      
};

SR__ s_336[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -280} }, 
};

SR__ s_337[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 360} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_338[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 361} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_339[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -324} }, 
};

SR__ s_340[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       579}, { 362} }, // cp
    { {       262}, { 363} }, // LP
    { {         0}, {   0} },      
};

SR__ s_341[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       277}, { 364} }, // CBC
    { {         0}, {   0} },       
};

SR__ s_342[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 365} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_343[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 366} }, // RP
    { {         0}, {   0} },      
};

SR__ s_344[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -42} }, 
};

SR__ s_345[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       780}, { 367} }, // kprdmin
    { {       262}, { 368} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_346[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       466}, { 369} }, // KPRDMAX
    { {         0}, {   0} },           
};

SR__ s_347[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 370} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_348[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 371} }, // RP
    { {         0}, {   0} },      
};

SR__ s_349[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -246} }, 
};

SR__ s_350[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       761}, { 372} }, // pt_kpr
    { {       262}, { 373} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_351[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       304}, { 374} }, // EM
    { {         0}, {   0} },      
};

SR__ s_352[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 375} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_353[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 376} }, // RP
    { {         0}, {   0} },      
};

SR__ s_354[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -119} }, 
};

SR__ s_355[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       810}, { 377} }, // chview
    { {       262}, { 378} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_356[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       522}, { 379} }, // MOVE
    { {         0}, {   0} },        
};

SR__ s_357[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 380} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_358[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 381} }, // RP
    { {         0}, {   0} },      
};

SR__ s_359[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -281} }, 
};

SR__ s_360[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 382} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_361[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 383} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_362[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       580}, { 384} }, // cal
    { {       262}, { 385} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_363[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       278}, { 386} }, // CP
    { {         0}, {   0} },      
};

SR__ s_364[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 387} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_365[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 388} }, // RP
    { {         0}, {   0} },      
};

SR__ s_366[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -43} }, 
};

SR__ s_367[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       781}, { 389} }, // kprdf
    { {       262}, { 390} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_368[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       467}, { 391} }, // KPRDMIN
    { {         0}, {   0} },           
};

SR__ s_369[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 392} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_370[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 393} }, // RP
    { {         0}, {   0} },      
};

SR__ s_371[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -247} }, 
};

SR__ s_372[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       759}, { 394} }, // pt_fdp
    { {       262}, { 395} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_373[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       342}, { 396} }, // KPR
    { {         0}, {   0} },       
};

SR__ s_374[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 397} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_375[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 398} }, // RP
    { {         0}, {   0} },      
};

SR__ s_376[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -78} }, 
};

SR__ s_377[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       811}, { 399} }, // arm
    { {       262}, { 400} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_378[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       523}, { 401} }, // CHVIEW
    { {         0}, {   0} },          
};

SR__ s_379[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 402} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_380[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 403} }, // RP
    { {         0}, {   0} },      
};

SR__ s_381[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -282} }, 
};

SR__ s_382[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 404} }, // RP
    { {         0}, {   0} },      
};

SR__ s_383[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 405} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_384[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       581}, { 406} }, // caw
    { {       262}, { 407} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_385[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       279}, { 408} }, // CAL
    { {         0}, {   0} },       
};

SR__ s_386[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 409} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_387[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 410} }, // RP
    { {         0}, {   0} },      
};

SR__ s_388[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -44} }, 
};

SR__ s_389[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       782}, { 411} }, // kmdmax
    { {       262}, { 412} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_390[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       468}, { 413} }, // KPRDF
    { {         0}, {   0} },         
};

SR__ s_391[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 414} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_392[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 415} }, // RP
    { {         0}, {   0} },      
};

SR__ s_393[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -248} }, 
};

SR__ s_394[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       798}, { 416} }, // pt_cals
    { {       262}, { 417} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_395[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       309}, { 418} }, // FDP
    { {         0}, {   0} },       
};

SR__ s_396[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 419} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_397[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 420} }, // RP
    { {         0}, {   0} },      
};

SR__ s_398[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -74} }, 
};

SR__ s_399[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       812}, { 421} }, // focus
    { {       262}, { 422} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_400[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       524}, { 423} }, // ARM
    { {         0}, {   0} },       
};

SR__ s_401[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 424} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_402[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 425} }, // RP
    { {         0}, {   0} },      
};

SR__ s_403[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -283} }, 
};

SR__ s_404[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -319} }, 
};

SR__ s_405[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 426} }, // RP
    { {         0}, {   0} },      
};

SR__ s_406[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       582}, { 427} }, // cm
    { {       262}, { 428} }, // LP
    { {         0}, {   0} },      
};

SR__ s_407[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       280}, { 429} }, // CAW
    { {         0}, {   0} },       
};

SR__ s_408[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 430} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_409[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 431} }, // RP
    { {         0}, {   0} },      
};

SR__ s_410[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -45} }, 
};

SR__ s_411[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       783}, { 432} }, // kmdmin
    { {       262}, { 433} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_412[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       469}, { 434} }, // KMDMAX
    { {         0}, {   0} },          
};

SR__ s_413[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 435} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_414[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 436} }, // RP
    { {         0}, {   0} },      
};

SR__ s_415[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -249} }, 
};

SR__ s_416[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 437} }, // RP
    { {         0}, {   0} },      
};

SR__ s_417[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       487}, { 438} }, // CALS
    { {         0}, {   0} },        
};

SR__ s_418[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 439} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_419[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 440} }, // RP
    { {         0}, {   0} },      
};

SR__ s_420[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -75} }, 
};

SR__ s_421[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       813}, { 441} }, // tackle
    { {       262}, { 442} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_422[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       529}, { 443} }, // FOCUS
    { {         0}, {   0} },         
};

SR__ s_423[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       818}, { 444} }, // movable
    { {       262}, { 445} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_424[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 446} }, // RP
    { {         0}, {   0} },      
};

SR__ s_425[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -284} }, 
};

SR__ s_426[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -320} }, 
};

SR__ s_427[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       583}, { 447} }, // cadw
    { {       262}, { 448} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_428[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       281}, { 449} }, // CM
    { {         0}, {   0} },      
};

SR__ s_429[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 450} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_430[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 451} }, // RP
    { {         0}, {   0} },      
};

SR__ s_431[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -46} }, 
};

SR__ s_432[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       784}, { 452} }, // ndprdmax
    { {       262}, { 453} }, // LP      
    { {         0}, {   0} },            
};

SR__ s_433[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       470}, { 454} }, // KMDMIN
    { {         0}, {   0} },          
};

SR__ s_434[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 455} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_435[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 456} }, // RP
    { {         0}, {   0} },      
};

SR__ s_436[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -250} }, 
};

SR__ s_437[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -236} }, 
};

SR__ s_438[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 457} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_439[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 458} }, // RP
    { {         0}, {   0} },      
};

SR__ s_440[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -117} }, 
};

SR__ s_441[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       814}, { 459} }, // collision
    { {       262}, { 460} }, // LP       
    { {         0}, {   0} },             
};

SR__ s_442[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       531}, { 461} }, // TACKLE
    { {         0}, {   0} },          
};

SR__ s_443[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       822}, { 462} }, // f_target
    { {       262}, { 463} }, // LP      
    { {         0}, {   0} },            
};

SR__ s_444[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       819}, { 464} }, // expires
    { {       262}, { 465} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_445[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       525}, { 466} }, // MOVABLE
    { {         0}, {   0} },           
};

SR__ s_446[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -285} }, 
};

SR__ s_447[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       584}, { 467} }, // cdefw
    { {       262}, { 468} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_448[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       282}, { 469} }, // CADW
    { {         0}, {   0} },        
};

SR__ s_449[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 470} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_450[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 471} }, // RP
    { {         0}, {   0} },      
};

SR__ s_451[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -47} }, 
};

SR__ s_452[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       785}, { 472} }, // ndprdmin
    { {       262}, { 473} }, // LP      
    { {         0}, {   0} },            
};

SR__ s_453[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       471}, { 474} }, // NDPRDMAX
    { {         0}, {   0} },            
};

SR__ s_454[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 475} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_455[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 476} }, // RP
    { {         0}, {   0} },      
};

SR__ s_456[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -251} }, 
};

SR__ s_457[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 477} }, // RP
    { {         0}, {   0} },      
};

SR__ s_458[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -82} }, 
};

SR__ s_459[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       815}, { 478} }, // foul
    { {       262}, { 479} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_460[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       532}, { 480} }, // COLL
    { {         0}, {   0} },        
};

SR__ s_461[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       825}, { 481} }, // t_expires
    { {       262}, { 482} }, // LP       
    { {         0}, {   0} },             
};

SR__ s_462[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       823}, { 483} }, // f_count
    { {       262}, { 484} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_463[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       527}, { 485} }, // TAR
    { {         0}, {   0} },       
};

SR__ s_464[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       820}, { 486} }, // target
    { {       262}, { 487} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_465[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       526}, { 488} }, // EXP
    { {         0}, {   0} },       
};

SR__ s_466[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 489} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_467[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       585}, { 490} }, // cdelw
    { {       262}, { 491} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_468[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       283}, { 492} }, // CDEFW
    { {         0}, {   0} },         
};

SR__ s_469[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 493} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_470[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 494} }, // RP
    { {         0}, {   0} },      
};

SR__ s_471[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -48} }, 
};

SR__ s_472[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       786}, { 495} }, // nsimaxdf
    { {       262}, { 496} }, // LP      
    { {         0}, {   0} },            
};

SR__ s_473[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       472}, { 497} }, // NDPRDMIN
    { {         0}, {   0} },            
};

SR__ s_474[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 498} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_475[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 499} }, // RP
    { {         0}, {   0} },      
};

SR__ s_476[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -252} }, 
};

SR__ s_477[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -239} }, 
};

SR__ s_478[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 500} }, // RP
    { {         0}, {   0} },      
};

SR__ s_479[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       536}, { 501} }, // FOUL
    { {         0}, {   0} },        
};

SR__ s_480[] =
{
    { { REQ_TOKEN}, {   6} },            
    { {       827}, { 502} }, // col_type
    { {       530}, { 503} }, // NONE    
    { {       533}, { 504} }, // BALL    
    { {       534}, { 505} }, // PLAYER  
    { {       535}, { 506} }, // POST    
    { {         0}, {   0} },            
};

SR__ s_481[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       826}, { 507} }, // t_count
    { {       262}, { 508} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_482[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       526}, { 509} }, // EXP
    { {         0}, {   0} },       
};

SR__ s_483[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 510} }, // RP
    { {         0}, {   0} },      
};

SR__ s_484[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       528}, { 511} }, // COUNT
    { {         0}, {   0} },         
};

SR__ s_485[] =
{
    { { REQ_TOKEN}, {   5} },               
    { {       824}, { 512} }, // target_type
    { {       546}, { 513} }, // _L         
    { {       547}, { 514} }, // _R         
    { {       530}, { 515} }, // NONE       
    { {         0}, {   0} },               
};

SR__ s_486[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       821}, { 516} }, // count
    { {       262}, { 517} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_487[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       527}, { 518} }, // TAR
    { {         0}, {   0} },       
};

SR__ s_488[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 519} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_489[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 520} }, // RP
    { {         0}, {   0} },      
};

SR__ s_490[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       586}, { 521} }, // ciw
    { {       262}, { 522} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_491[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       284}, { 523} }, // CDELW
    { {         0}, {   0} },         
};

SR__ s_492[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 524} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_493[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 525} }, // RP
    { {         0}, {   0} },      
};

SR__ s_494[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -49} }, 
};

SR__ s_495[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       787}, { 526} }, // pddmax
    { {       262}, { 527} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_496[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       473}, { 528} }, // NSIMAXDF
    { {         0}, {   0} },            
};

SR__ s_497[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 529} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_498[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 530} }, // RP
    { {         0}, {   0} },      
};

SR__ s_499[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -253} }, 
};

SR__ s_500[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -268} }, 
};

SR__ s_501[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       828}, { 531} }, // charged
    { {       262}, { 532} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_502[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 533} }, // RP
    { {         0}, {   0} },      
};

SR__ s_503[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -301} }, 
};

SR__ s_504[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -302} }, 
};

SR__ s_505[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -303} }, 
};

SR__ s_506[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -304} }, 
};

SR__ s_507[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 534} }, // RP
    { {         0}, {   0} },      
};

SR__ s_508[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       528}, { 535} }, // COUNT
    { {         0}, {   0} },         
};

SR__ s_509[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 536} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_510[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -291} }, 
};

SR__ s_511[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 537} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_512[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 538} }, // RP
    { {         0}, {   0} },      
};

SR__ s_513[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -294} }, 
};

SR__ s_514[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -295} }, 
};

SR__ s_515[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -296} }, 
};

SR__ s_516[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 539} }, // RP
    { {         0}, {   0} },      
};

SR__ s_517[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       528}, { 540} }, // COUNT
    { {         0}, {   0} },         
};

SR__ s_518[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 541} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_519[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 542} }, // RP
    { {         0}, {   0} },      
};

SR__ s_520[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -287} }, 
};

SR__ s_521[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       587}, { 543} }, // cmd
    { {       262}, { 544} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_522[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       285}, { 545} }, // CIW
    { {         0}, {   0} },       
};

SR__ s_523[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 546} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_524[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 547} }, // RP
    { {         0}, {   0} },      
};

SR__ s_525[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -50} }, 
};

SR__ s_526[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       788}, { 548} }, // pddmin
    { {       262}, { 549} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_527[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       474}, { 550} }, // PDDMAX
    { {         0}, {   0} },          
};

SR__ s_528[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 551} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_529[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 552} }, // RP
    { {         0}, {   0} },      
};

SR__ s_530[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -254} }, 
};

SR__ s_531[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       829}, { 553} }, // card
    { {       262}, { 554} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_532[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       537}, { 555} }, // CHARGED
    { {         0}, {   0} },           
};

SR__ s_533[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -300} }, 
};

SR__ s_534[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -297} }, 
};

SR__ s_535[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 556} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_536[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 557} }, // RP
    { {         0}, {   0} },      
};

SR__ s_537[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 558} }, // RP
    { {         0}, {   0} },      
};

SR__ s_538[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -292} }, 
};

SR__ s_539[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -286} }, 
};

SR__ s_540[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 559} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_541[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 560} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_542[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -288} }, 
};

SR__ s_543[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       588}, { 561} }, // cmpc
    { {       262}, { 562} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_544[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       286}, { 563} }, // CMD
    { {         0}, {   0} },       
};

SR__ s_545[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 564} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_546[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 565} }, // RP
    { {         0}, {   0} },      
};

SR__ s_547[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -51} }, 
};

SR__ s_548[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       789}, { 566} }, // psdf
    { {       262}, { 567} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_549[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       475}, { 568} }, // PDDMIN
    { {         0}, {   0} },          
};

SR__ s_550[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 569} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_551[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 570} }, // RP
    { {         0}, {   0} },      
};

SR__ s_552[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -255} }, 
};

SR__ s_553[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 571} }, // RP
    { {         0}, {   0} },      
};

SR__ s_554[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       538}, { 572} }, // CARD
    { {         0}, {   0} },        
};

SR__ s_555[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 573} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_556[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 574} }, // RP
    { {         0}, {   0} },      
};

SR__ s_557[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -298} }, 
};

SR__ s_558[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -293} }, 
};

SR__ s_559[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 575} }, // RP
    { {         0}, {   0} },      
};

SR__ s_560[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 576} }, // RP
    { {         0}, {   0} },      
};

SR__ s_561[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       589}, { 577} }, // cmw
    { {       262}, { 578} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_562[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       287}, { 579} }, // CMPC
    { {         0}, {   0} },        
};

SR__ s_563[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 580} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_564[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 581} }, // RP
    { {         0}, {   0} },      
};

SR__ s_565[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -52} }, 
};

SR__ s_566[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       790}, { 582} }, // psmaxdmax
    { {       262}, { 583} }, // LP       
    { {         0}, {   0} },             
};

SR__ s_567[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       476}, { 584} }, // PSDF
    { {         0}, {   0} },        
};

SR__ s_568[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 585} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_569[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 586} }, // RP
    { {         0}, {   0} },      
};

SR__ s_570[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -256} }, 
};

SR__ s_571[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -305} }, 
};

SR__ s_572[] =
{
    { { REQ_TOKEN}, {   4} },             
    { {       830}, { 587} }, // card_type
    { {       530}, { 588} }, // NONE     
    { {       539}, { 589} }, // YELLOW   
    { {         0}, {   0} },             
};

SR__ s_573[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 590} }, // RP
    { {         0}, {   0} },      
};

SR__ s_574[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -299} }, 
};

SR__ s_575[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -290} }, 
};

SR__ s_576[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -289} }, 
};

SR__ s_577[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       590}, { 591} }, // crw
    { {       262}, { 592} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_578[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       288}, { 593} }, // CMW
    { {         0}, {   0} },       
};

SR__ s_579[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 594} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_580[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 595} }, // RP
    { {         0}, {   0} },      
};

SR__ s_581[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -53} }, 
};

SR__ s_582[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       791}, { 596} }, // psmaxdmin
    { {       262}, { 597} }, // LP       
    { {         0}, {   0} },             
};

SR__ s_583[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       477}, { 598} }, // PSMAXDMAX
    { {         0}, {   0} },             
};

SR__ s_584[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 599} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_585[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 600} }, // RP
    { {         0}, {   0} },      
};

SR__ s_586[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -257} }, 
};

SR__ s_587[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 601} }, // RP
    { {         0}, {   0} },      
};

SR__ s_588[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -308} }, 
};

SR__ s_589[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -309} }, 
};

SR__ s_590[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -306} }, 
};

SR__ s_591[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       591}, { 602} }, // cws
    { {       262}, { 603} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_592[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       289}, { 604} }, // CRW
    { {         0}, {   0} },       
};

SR__ s_593[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 605} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_594[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 606} }, // RP
    { {         0}, {   0} },      
};

SR__ s_595[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -54} }, 
};

SR__ s_596[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       792}, { 607} }, // pt
    { {       262}, { 608} }, // LP
    { {         0}, {   0} },      
};

SR__ s_597[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       478}, { 609} }, // PSMAXDMIN
    { {         0}, {   0} },             
};

SR__ s_598[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 610} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_599[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 611} }, // RP
    { {         0}, {   0} },      
};

SR__ s_600[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -258} }, 
};

SR__ s_601[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -307} }, 
};

SR__ s_602[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       592}, { 612} }, // co
    { {       262}, { 613} }, // LP
    { {         0}, {   0} },      
};

SR__ s_603[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       290}, { 614} }, // CWS
    { {         0}, {   0} },       
};

SR__ s_604[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 615} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_605[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 616} }, // RP
    { {         0}, {   0} },      
};

SR__ s_606[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -55} }, 
};

SR__ s_607[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       793}, { 617} }, // ptm
    { {       262}, { 618} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_608[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       479}, { 619} }, // PT
    { {         0}, {   0} },      
};

SR__ s_609[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 620} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_610[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 621} }, // RP
    { {         0}, {   0} },      
};

SR__ s_611[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -259} }, 
};

SR__ s_612[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       593}, { 622} }, // cop
    { {       262}, { 623} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_613[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       291}, { 624} }, // CO
    { {         0}, {   0} },      
};

SR__ s_614[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 625} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_615[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 626} }, // RP
    { {         0}, {   0} },      
};

SR__ s_616[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -56} }, 
};

SR__ s_617[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       794}, { 627} }, // rans
    { {       262}, { 628} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_618[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       480}, { 629} }, // PTM
    { {         0}, {   0} },       
};

SR__ s_619[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 630} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_620[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 631} }, // RP
    { {         0}, {   0} },      
};

SR__ s_621[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -260} }, 
};

SR__ s_622[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       594}, { 632} }, // cwr
    { {       262}, { 633} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_623[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       292}, { 634} }, // COP
    { {         0}, {   0} },       
};

SR__ s_624[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 635} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_625[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 636} }, // RP
    { {         0}, {   0} },      
};

SR__ s_626[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -57} }, 
};

SR__ s_627[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       795}, { 637} }, // simaxdf
    { {       262}, { 638} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_628[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       481}, { 639} }, // RANS
    { {         0}, {   0} },        
};

SR__ s_629[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 640} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_630[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 641} }, // RP
    { {         0}, {   0} },      
};

SR__ s_631[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -261} }, 
};

SR__ s_632[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       595}, { 642} }, // cw
    { {       262}, { 643} }, // LP
    { {         0}, {   0} },      
};

SR__ s_633[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       293}, { 644} }, // CWR
    { {         0}, {   0} },       
};

SR__ s_634[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 645} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_635[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 646} }, // RP
    { {         0}, {   0} },      
};

SR__ s_636[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -58} }, 
};

SR__ s_637[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       796}, { 647} }, // submax
    { {       262}, { 648} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_638[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       482}, { 649} }, // SIMAXDF
    { {         0}, {   0} },           
};

SR__ s_639[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 650} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_640[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 651} }, // RP
    { {         0}, {   0} },      
};

SR__ s_641[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -262} }, 
};

SR__ s_642[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       596}, { 652} }, // cr
    { {       262}, { 653} }, // LP
    { {         0}, {   0} },      
};

SR__ s_643[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       294}, { 654} }, // CW
    { {         0}, {   0} },      
};

SR__ s_644[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 655} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_645[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 656} }, // RP
    { {         0}, {   0} },      
};

SR__ s_646[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -59} }, 
};

SR__ s_647[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 657} }, // RP
    { {         0}, {   0} },      
};

SR__ s_648[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       483}, { 658} }, // SUBMAX
    { {         0}, {   0} },          
};

SR__ s_649[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 659} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_650[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 660} }, // RP
    { {         0}, {   0} },      
};

SR__ s_651[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -263} }, 
};

SR__ s_652[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       597}, { 661} }, // das
    { {       262}, { 662} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_653[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       295}, { 663} }, // CR
    { {         0}, {   0} },      
};

SR__ s_654[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 664} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_655[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 665} }, // RP
    { {         0}, {   0} },      
};

SR__ s_656[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -60} }, 
};

SR__ s_657[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -235} }, 
};

SR__ s_658[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 666} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_659[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 667} }, // RP
    { {         0}, {   0} },      
};

SR__ s_660[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -264} }, 
};

SR__ s_661[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       598}, { 668} }, // dpr
    { {       262}, { 669} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_662[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       296}, { 670} }, // DAS
    { {         0}, {   0} },       
};

SR__ s_663[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 671} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_664[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 672} }, // RP
    { {         0}, {   0} },      
};

SR__ s_665[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -61} }, 
};

SR__ s_666[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 673} }, // RP
    { {         0}, {   0} },      
};

SR__ s_667[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -265} }, 
};

SR__ s_668[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       599}, { 674} }, // dbt
    { {       262}, { 675} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_669[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       297}, { 676} }, // DPR
    { {         0}, {   0} },       
};

SR__ s_670[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 677} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_671[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 678} }, // RP
    { {         0}, {   0} },      
};

SR__ s_672[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -62} }, 
};

SR__ s_673[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -266} }, 
};

SR__ s_674[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       600}, { 679} }, // ed
    { {       262}, { 680} }, // LP
    { {         0}, {   0} },      
};

SR__ s_675[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       298}, { 681} }, // DBT
    { {         0}, {   0} },       
};

SR__ s_676[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 682} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_677[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 683} }, // RP
    { {         0}, {   0} },      
};

SR__ s_678[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -63} }, 
};

SR__ s_679[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       601}, { 684} }, // edt
    { {       262}, { 685} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_680[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       299}, { 686} }, // ED
    { {         0}, {   0} },      
};

SR__ s_681[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 687} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_682[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 688} }, // RP
    { {         0}, {   0} },      
};

SR__ s_683[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -64} }, 
};

SR__ s_684[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       602}, { 689} }, // ein
    { {       262}, { 690} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_685[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       300}, { 691} }, // EDT
    { {         0}, {   0} },       
};

SR__ s_686[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 692} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_687[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 693} }, // RP
    { {         0}, {   0} },      
};

SR__ s_688[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -65} }, 
};

SR__ s_689[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       603}, { 694} }, // eit
    { {       262}, { 695} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_690[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       301}, { 696} }, // EIN
    { {         0}, {   0} },       
};

SR__ s_691[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 697} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_692[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 698} }, // RP
    { {         0}, {   0} },      
};

SR__ s_693[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -67} }, 
};

SR__ s_694[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       604}, { 699} }, // ei
    { {       262}, { 700} }, // LP
    { {         0}, {   0} },      
};

SR__ s_695[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       302}, { 701} }, // EIT
    { {         0}, {   0} },       
};

SR__ s_696[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 702} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_697[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 703} }, // RP
    { {         0}, {   0} },      
};

SR__ s_698[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -68} }, 
};

SR__ s_699[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       605}, { 704} }, // em
    { {       262}, { 705} }, // LP
    { {         0}, {   0} },      
};

SR__ s_700[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       303}, { 706} }, // EI
    { {         0}, {   0} },      
};

SR__ s_701[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 707} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_702[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 708} }, // RP
    { {         0}, {   0} },      
};

SR__ s_703[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -69} }, 
};

SR__ s_704[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       606}, { 709} }, // eht
    { {       262}, { 710} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_705[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       304}, { 711} }, // EM
    { {         0}, {   0} },      
};

SR__ s_706[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 712} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_707[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 713} }, // RP
    { {         0}, {   0} },      
};

SR__ s_708[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -70} }, 
};

SR__ s_709[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       607}, { 714} }, // es
    { {       262}, { 715} }, // LP
    { {         0}, {   0} },      
};

SR__ s_710[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       305}, { 716} }, // EHT
    { {         0}, {   0} },       
};

SR__ s_711[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 717} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_712[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 718} }, // RP
    { {         0}, {   0} },      
};

SR__ s_713[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -71} }, 
};

SR__ s_714[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       608}, { 719} }, // fko
    { {       262}, { 720} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_715[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       306}, { 721} }, // ES
    { {         0}, {   0} },      
};

SR__ s_716[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 722} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_717[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 723} }, // RP
    { {         0}, {   0} },      
};

SR__ s_718[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -72} }, 
};

SR__ s_719[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       609}, { 724} }, // fc
    { {       262}, { 725} }, // LP
    { {         0}, {   0} },      
};

SR__ s_720[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       307}, { 726} }, // FKO
    { {         0}, {   0} },       
};

SR__ s_721[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 727} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_722[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 728} }, // RP
    { {         0}, {   0} },      
};

SR__ s_723[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -73} }, 
};

SR__ s_724[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       610}, { 729} }, // fdp
    { {       262}, { 730} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_725[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       308}, { 731} }, // FC
    { {         0}, {   0} },      
};

SR__ s_726[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 732} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_727[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 733} }, // RP
    { {         0}, {   0} },      
};

SR__ s_728[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -76} }, 
};

SR__ s_729[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       611}, { 734} }, // fe
    { {       262}, { 735} }, // LP
    { {         0}, {   0} },      
};

SR__ s_730[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       309}, { 736} }, // FDP
    { {         0}, {   0} },       
};

SR__ s_731[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 737} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_732[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 738} }, // RP
    { {         0}, {   0} },      
};

SR__ s_733[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -77} }, 
};

SR__ s_734[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       612}, { 739} }, // fkf
    { {       262}, { 740} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_735[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       310}, { 741} }, // FE
    { {         0}, {   0} },      
};

SR__ s_736[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 742} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_737[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 743} }, // RP
    { {         0}, {   0} },      
};

SR__ s_738[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -79} }, 
};

SR__ s_739[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       613}, { 744} }, // fsp
    { {       262}, { 745} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_740[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       311}, { 746} }, // FKF
    { {         0}, {   0} },       
};

SR__ s_741[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 747} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_742[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 748} }, // RP
    { {         0}, {   0} },      
};

SR__ s_743[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -80} }, 
};

SR__ s_744[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       614}, { 749} }, // fwp
    { {       262}, { 750} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_745[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       312}, { 751} }, // FSP
    { {         0}, {   0} },       
};

SR__ s_746[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 752} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_747[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 753} }, // RP
    { {         0}, {   0} },      
};

SR__ s_748[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -81} }, 
};

SR__ s_749[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       615}, { 754} }, // fl
    { {       262}, { 755} }, // LP
    { {         0}, {   0} },      
};

SR__ s_750[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       313}, { 756} }, // FWP
    { {         0}, {   0} },       
};

SR__ s_751[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 757} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_752[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 758} }, // RP
    { {         0}, {   0} },      
};

SR__ s_753[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -83} }, 
};

SR__ s_754[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       616}, { 759} }, // fr
    { {       262}, { 760} }, // LP
    { {         0}, {   0} },      
};

SR__ s_755[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       314}, { 761} }, // FL
    { {         0}, {   0} },      
};

SR__ s_756[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 762} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_757[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 763} }, // RP
    { {         0}, {   0} },      
};

SR__ s_758[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -84} }, 
};

SR__ s_759[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       617}, { 764} }, // glc
    { {       262}, { 765} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_760[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       315}, { 766} }, // FR
    { {         0}, {   0} },      
};

SR__ s_761[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 767} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_762[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 768} }, // RP
    { {         0}, {   0} },      
};

SR__ s_763[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -85} }, 
};

SR__ s_764[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       618}, { 769} }, // gld
    { {       262}, { 770} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_765[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       316}, { 771} }, // GLC
    { {         0}, {   0} },       
};

SR__ s_766[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 772} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_767[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 773} }, // RP
    { {         0}, {   0} },      
};

SR__ s_768[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -86} }, 
};

SR__ s_769[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       619}, { 774} }, // gldir
    { {       262}, { 775} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_770[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       317}, { 776} }, // GLD
    { {         0}, {   0} },       
};

SR__ s_771[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 777} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_772[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 778} }, // RP
    { {         0}, {   0} },      
};

SR__ s_773[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -87} }, 
};

SR__ s_774[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       620}, { 779} }, // glf
    { {       262}, { 780} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_775[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       318}, { 781} }, // GLDIR
    { {         0}, {   0} },         
};

SR__ s_776[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 782} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_777[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 783} }, // RP
    { {         0}, {   0} },      
};

SR__ s_778[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -88} }, 
};

SR__ s_779[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       621}, { 784} }, // glfn
    { {       262}, { 785} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_780[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       319}, { 786} }, // GLF
    { {         0}, {   0} },       
};

SR__ s_781[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       564}, { 787} }, // string
    { {       259}, { 146} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_782[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 788} }, // RP
    { {         0}, {   0} },      
};

SR__ s_783[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -89} }, 
};

SR__ s_784[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       622}, { 789} }, // glv
    { {       262}, { 790} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_785[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       320}, { 791} }, // GLFN
    { {         0}, {   0} },        
};

SR__ s_786[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 792} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_787[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 793} }, // RP
    { {         0}, {   0} },      
};

SR__ s_788[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -90} }, 
};

SR__ s_789[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       623}, { 794} }, // gl
    { {       262}, { 795} }, // LP
    { {         0}, {   0} },      
};

SR__ s_790[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       321}, { 796} }, // GLV
    { {         0}, {   0} },       
};

SR__ s_791[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       564}, { 797} }, // string
    { {       259}, { 146} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_792[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 798} }, // RP
    { {         0}, {   0} },      
};

SR__ s_793[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -91} }, 
};

SR__ s_794[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       624}, { 799} }, // gow
    { {       262}, { 800} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_795[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       322}, { 801} }, // GL
    { {         0}, {   0} },      
};

SR__ s_796[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 802} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_797[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 803} }, // RP
    { {         0}, {   0} },      
};

SR__ s_798[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -92} }, 
};

SR__ s_799[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       625}, { 804} }, // gw
    { {       262}, { 805} }, // LP
    { {         0}, {   0} },      
};

SR__ s_800[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       323}, { 806} }, // GOW
    { {         0}, {   0} },       
};

SR__ s_801[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 807} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_802[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 808} }, // RP
    { {         0}, {   0} },      
};

SR__ s_803[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -93} }, 
};

SR__ s_804[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       626}, { 809} }, // gmm
    { {       262}, { 810} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_805[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       324}, { 811} }, // GW
    { {         0}, {   0} },      
};

SR__ s_806[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 812} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_807[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 813} }, // RP
    { {         0}, {   0} },      
};

SR__ s_808[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -94} }, 
};

SR__ s_809[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       627}, { 814} }, // gg
    { {       262}, { 815} }, // LP
    { {         0}, {   0} },      
};

SR__ s_810[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       325}, { 816} }, // GMM
    { {         0}, {   0} },       
};

SR__ s_811[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 817} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_812[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 818} }, // RP
    { {         0}, {   0} },      
};

SR__ s_813[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -95} }, 
};

SR__ s_814[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       628}, { 819} }, // ht
    { {       262}, { 820} }, // LP
    { {         0}, {   0} },      
};

SR__ s_815[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       326}, { 821} }, // GG
    { {         0}, {   0} },      
};

SR__ s_816[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 822} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_817[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 823} }, // RP
    { {         0}, {   0} },      
};

SR__ s_818[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -96} }, 
};

SR__ s_819[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       629}, { 824} }, // hd
    { {       262}, { 825} }, // LP
    { {         0}, {   0} },      
};

SR__ s_820[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       327}, { 826} }, // HT
    { {         0}, {   0} },      
};

SR__ s_821[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 827} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_822[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 828} }, // RP
    { {         0}, {   0} },      
};

SR__ s_823[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -97} }, 
};

SR__ s_824[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       630}, { 829} }, // hi
    { {       262}, { 830} }, // LP
    { {         0}, {   0} },      
};

SR__ s_825[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       328}, { 831} }, // HD
    { {         0}, {   0} },      
};

SR__ s_826[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 832} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_827[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 833} }, // RP
    { {         0}, {   0} },      
};

SR__ s_828[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -98} }, 
};

SR__ s_829[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       631}, { 834} }, // hm
    { {       262}, { 835} }, // LP
    { {         0}, {   0} },      
};

SR__ s_830[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       329}, { 836} }, // HI
    { {         0}, {   0} },      
};

SR__ s_831[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 837} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_832[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 838} }, // RP
    { {         0}, {   0} },      
};

SR__ s_833[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -99} }, 
};

SR__ s_834[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       632}, { 839} }, // im
    { {       262}, { 840} }, // LP
    { {         0}, {   0} },      
};

SR__ s_835[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       330}, { 841} }, // HM
    { {         0}, {   0} },      
};

SR__ s_836[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 842} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_837[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 843} }, // RP
    { {         0}, {   0} },      
};

SR__ s_838[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -100} }, 
};

SR__ s_839[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       633}, { 844} }, // k 
    { {       262}, { 845} }, // LP
    { {         0}, {   0} },      
};

SR__ s_840[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       331}, { 846} }, // IM
    { {         0}, {   0} },      
};

SR__ s_841[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 847} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_842[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 848} }, // RP
    { {         0}, {   0} },      
};

SR__ s_843[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -101} }, 
};

SR__ s_844[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       634}, { 849} }, // kl
    { {       262}, { 850} }, // LP
    { {         0}, {   0} },      
};

SR__ s_845[] =
{
    { { REQ_TOKEN}, {   2} },     
    { {       332}, { 851} }, // K
    { {         0}, {   0} },     
};

SR__ s_846[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 852} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_847[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 853} }, // RP
    { {         0}, {   0} },      
};

SR__ s_848[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -102} }, 
};

SR__ s_849[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       635}, { 854} }, // kld
    { {       262}, { 855} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_850[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       333}, { 856} }, // KL
    { {         0}, {   0} },      
};

SR__ s_851[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 857} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_852[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 858} }, // RP
    { {         0}, {   0} },      
};

SR__ s_853[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -103} }, 
};

SR__ s_854[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       636}, { 859} }, // kldir
    { {       262}, { 860} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_855[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       334}, { 861} }, // KLD
    { {         0}, {   0} },       
};

SR__ s_856[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 862} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_857[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 863} }, // RP
    { {         0}, {   0} },      
};

SR__ s_858[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -104} }, 
};

SR__ s_859[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       637}, { 864} }, // lkf
    { {       262}, { 865} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_860[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       335}, { 866} }, // KLDIR
    { {         0}, {   0} },         
};

SR__ s_861[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 867} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_862[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 868} }, // RP
    { {         0}, {   0} },      
};

SR__ s_863[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -106} }, 
};

SR__ s_864[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       638}, { 869} }, // klfn
    { {       262}, { 870} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_865[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       336}, { 871} }, // LKF
    { {         0}, {   0} },       
};

SR__ s_866[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       564}, { 872} }, // string
    { {       259}, { 146} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_867[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 873} }, // RP
    { {         0}, {   0} },      
};

SR__ s_868[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -107} }, 
};

SR__ s_869[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       639}, { 874} }, // klg
    { {       262}, { 875} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_870[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       337}, { 876} }, // KLFN
    { {         0}, {   0} },        
};

SR__ s_871[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 877} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_872[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 878} }, // RP
    { {         0}, {   0} },      
};

SR__ s_873[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -108} }, 
};

SR__ s_874[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       640}, { 879} }, // ks
    { {       262}, { 880} }, // LP
    { {         0}, {   0} },      
};

SR__ s_875[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       338}, { 881} }, // KLG
    { {         0}, {   0} },       
};

SR__ s_876[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       564}, { 882} }, // string
    { {       259}, { 146} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_877[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 883} }, // RP
    { {         0}, {   0} },      
};

SR__ s_878[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -109} }, 
};

SR__ s_879[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       641}, { 884} }, // kw
    { {       262}, { 885} }, // LP
    { {         0}, {   0} },      
};

SR__ s_880[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       339}, { 886} }, // KS
    { {         0}, {   0} },      
};

SR__ s_881[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 887} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_882[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 888} }, // RP
    { {         0}, {   0} },      
};

SR__ s_883[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -110} }, 
};

SR__ s_884[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       642}, { 889} }, // kow
    { {       262}, { 890} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_885[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       340}, { 891} }, // KW
    { {         0}, {   0} },      
};

SR__ s_886[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 892} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_887[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 893} }, // RP
    { {         0}, {   0} },      
};

SR__ s_888[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -111} }, 
};

SR__ s_889[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       643}, { 894} }, // kpr
    { {       262}, { 895} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_890[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       341}, { 896} }, // KOW
    { {         0}, {   0} },       
};

SR__ s_891[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 897} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_892[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 898} }, // RP
    { {         0}, {   0} },      
};

SR__ s_893[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -112} }, 
};

SR__ s_894[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       644}, { 899} }, // kr
    { {       262}, { 900} }, // LP
    { {         0}, {   0} },      
};

SR__ s_895[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       342}, { 901} }, // KPR
    { {         0}, {   0} },       
};

SR__ s_896[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 902} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_897[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 903} }, // RP
    { {         0}, {   0} },      
};

SR__ s_898[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -113} }, 
};

SR__ s_899[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       645}, { 904} }, // krfl
    { {       262}, { 905} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_900[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       343}, { 906} }, // KR
    { {         0}, {   0} },      
};

SR__ s_901[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 907} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_902[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 908} }, // RP
    { {         0}, {   0} },      
};

SR__ s_903[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -114} }, 
};

SR__ s_904[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       646}, { 909} }, // krfr
    { {       262}, { 910} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_905[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       344}, { 911} }, // KRFL
    { {         0}, {   0} },        
};

SR__ s_906[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 912} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_907[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 913} }, // RP
    { {         0}, {   0} },      
};

SR__ s_908[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -115} }, 
};

SR__ s_909[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       647}, { 914} }, // km
    { {       262}, { 915} }, // LP
    { {         0}, {   0} },      
};

SR__ s_910[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       345}, { 916} }, // KRFR
    { {         0}, {   0} },        
};

SR__ s_911[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 917} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_912[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 918} }, // RP
    { {         0}, {   0} },      
};

SR__ s_913[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -116} }, 
};

SR__ s_914[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       648}, { 919} }, // lf
    { {       262}, { 920} }, // LP
    { {         0}, {   0} },      
};

SR__ s_915[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       346}, { 921} }, // KM
    { {         0}, {   0} },      
};

SR__ s_916[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 922} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_917[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 923} }, // RP
    { {         0}, {   0} },      
};

SR__ s_918[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -118} }, 
};

SR__ s_919[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       649}, { 924} }, // ldf
    { {       262}, { 925} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_920[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       347}, { 926} }, // LF
    { {         0}, {   0} },      
};

SR__ s_921[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 927} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_922[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 928} }, // RP
    { {         0}, {   0} },      
};

SR__ s_923[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -120} }, 
};

SR__ s_924[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       650}, { 929} }, // lt
    { {       262}, { 930} }, // LP
    { {         0}, {   0} },      
};

SR__ s_925[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       348}, { 931} }, // LDF
    { {         0}, {   0} },       
};

SR__ s_926[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       564}, { 932} }, // string
    { {       259}, { 146} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_927[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 933} }, // RP
    { {         0}, {   0} },      
};

SR__ s_928[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -121} }, 
};

SR__ s_929[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       651}, { 934} }, // mbtp
    { {       262}, { 935} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_930[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       349}, { 936} }, // LT
    { {         0}, {   0} },      
};

SR__ s_931[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       564}, { 937} }, // string
    { {       259}, { 146} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_932[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 938} }, // RP
    { {         0}, {   0} },      
};

SR__ s_933[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -122} }, 
};

SR__ s_934[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       652}, { 939} }, // maxda
    { {       262}, { 940} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_935[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       350}, { 941} }, // MBTP
    { {         0}, {   0} },        
};

SR__ s_936[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 942} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_937[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 943} }, // RP
    { {         0}, {   0} },      
};

SR__ s_938[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -124} }, 
};

SR__ s_939[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       653}, { 944} }, // mdp
    { {       262}, { 945} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_940[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       351}, { 946} }, // MAXDA
    { {         0}, {   0} },         
};

SR__ s_941[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 947} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_942[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 948} }, // RP
    { {         0}, {   0} },      
};

SR__ s_943[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -125} }, 
};

SR__ s_944[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       654}, { 949} }, // mgk
    { {       262}, { 950} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_945[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       352}, { 951} }, // MDP
    { {         0}, {   0} },       
};

SR__ s_946[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 952} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_947[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 953} }, // RP
    { {         0}, {   0} },      
};

SR__ s_948[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -126} }, 
};

SR__ s_949[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       655}, { 954} }, // mtp
    { {       262}, { 955} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_950[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       353}, { 956} }, // MGK
    { {         0}, {   0} },       
};

SR__ s_951[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 957} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_952[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 958} }, // RP
    { {         0}, {   0} },      
};

SR__ s_953[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -127} }, 
};

SR__ s_954[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       656}, { 959} }, // maxm
    { {       262}, { 960} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_955[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       354}, { 961} }, // MTP
    { {         0}, {   0} },       
};

SR__ s_956[] =
{
    { { REQ_TOKEN}, {   6} },           
    { {       562}, { 962} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_957[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 963} }, // RP
    { {         0}, {   0} },      
};

SR__ s_958[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -128} }, 
};

SR__ s_959[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       657}, { 964} }, // maxna
    { {       262}, { 965} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_960[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       355}, { 966} }, // MAXM
    { {         0}, {   0} },        
};

SR__ s_961[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 967} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_962[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 968} }, // RP
    { {         0}, {   0} },      
};

SR__ s_963[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -129} }, 
};

SR__ s_964[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       658}, { 969} }, // maxnm
    { {       262}, { 970} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_965[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       356}, { 971} }, // MAXNA
    { {         0}, {   0} },         
};

SR__ s_966[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 972} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_967[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 973} }, // RP
    { {         0}, {   0} },      
};

SR__ s_968[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -130} }, 
};

SR__ s_969[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       659}, { 974} }, // maxp
    { {       262}, { 975} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_970[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       357}, { 976} }, // MAXNM
    { {         0}, {   0} },         
};

SR__ s_971[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 977} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_972[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 978} }, // RP
    { {         0}, {   0} },      
};

SR__ s_973[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -131} }, 
};

SR__ s_974[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       660}, { 979} }, // minda
    { {       262}, { 980} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_975[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       358}, { 981} }, // MAXP
    { {         0}, {   0} },        
};

SR__ s_976[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 982} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_977[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 983} }, // RP
    { {         0}, {   0} },      
};

SR__ s_978[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -132} }, 
};

SR__ s_979[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       661}, { 984} }, // mindp
    { {       262}, { 985} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_980[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       359}, { 986} }, // MINDA
    { {         0}, {   0} },         
};

SR__ s_981[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 987} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_982[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 988} }, // RP
    { {         0}, {   0} },      
};

SR__ s_983[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -133} }, 
};

SR__ s_984[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       662}, { 989} }, // minm
    { {       262}, { 990} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_985[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       360}, { 991} }, // MINDP
    { {         0}, {   0} },         
};

SR__ s_986[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 992} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_987[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 993} }, // RP
    { {         0}, {   0} },      
};

SR__ s_988[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -134} }, 
};

SR__ s_989[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       663}, { 994} }, // minna
    { {       262}, { 995} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_990[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       361}, { 996} }, // MINM
    { {         0}, {   0} },        
};

SR__ s_991[] =
{
    { { REQ_TOKEN}, {   8} },           
    { {       563}, { 997} }, // double 
    { {       257}, {  25} }, // DOUBLE 
    { {       562}, {  26} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       561}, {  28} }, // bool   
    { {       264}, {  29} }, // _0     
    { {       265}, {  30} }, // _1     
    { {         0}, {   0} },           
};

SR__ s_992[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 998} }, // RP
    { {         0}, {   0} },      
};

SR__ s_993[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -135} }, 
};

SR__ s_994[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       664}, {  999} }, // minnm
    { {       262}, { 1000} }, // LP   
    { {         0}, {    0} },         
};

SR__ s_995[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       362}, { 1001} }, // MINNA
    { {         0}, {    0} },         
};

SR__ s_996[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1002} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_997[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1003} }, // RP
    { {         0}, {    0} },      
};

SR__ s_998[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -136} }, 
};

SR__ s_999[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       665}, { 1004} }, // minp
    { {       262}, { 1005} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1000[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       363}, { 1006} }, // MINNM
    { {         0}, {    0} },         
};

SR__ s_1001[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1007} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1002[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1008} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1003[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -137} }, 
};

SR__ s_1004[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       666}, { 1009} }, // neh
    { {       262}, { 1010} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1005[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       364}, { 1011} }, // MINP
    { {         0}, {    0} },        
};

SR__ s_1006[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1012} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1007[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1013} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1008[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -138} }, 
};

SR__ s_1009[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       667}, { 1014} }, // nnh
    { {       262}, { 1015} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1010[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       365}, { 1016} }, // NEH
    { {         0}, {    0} },       
};

SR__ s_1011[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1017} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1012[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1018} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1013[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -139} }, 
};

SR__ s_1014[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       668}, { 1019} }, // oaas
    { {       262}, { 1020} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1015[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       366}, { 1021} }, // NNH
    { {         0}, {    0} },       
};

SR__ s_1016[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1022} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1017[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1023} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1018[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -140} }, 
};

SR__ s_1019[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       669}, { 1024} }, // okm
    { {       262}, { 1025} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1020[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       367}, { 1026} }, // OAAS
    { {         0}, {    0} },        
};

SR__ s_1021[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1027} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1022[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1028} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1023[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -141} }, 
};

SR__ s_1024[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       670}, { 1029} }, // op
    { {       262}, { 1030} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1025[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       368}, { 1031} }, // OKM
    { {         0}, {    0} },       
};

SR__ s_1026[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1032} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1027[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1033} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1028[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -142} }, 
};

SR__ s_1029[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       671}, { 1034} }, // och
    { {       262}, { 1035} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1030[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       369}, { 1036} }, // OP
    { {         0}, {    0} },      
};

SR__ s_1031[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1037} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1032[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1038} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1033[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -143} }, 
};

SR__ s_1034[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       672}, { 1039} }, // pamk
    { {       262}, { 1040} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1035[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       370}, { 1041} }, // OCH
    { {         0}, {    0} },       
};

SR__ s_1036[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1042} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1037[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1043} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1038[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -144} }, 
};

SR__ s_1039[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       673}, { 1044} }, // pbsw
    { {       262}, { 1045} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1040[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       371}, { 1046} }, // PAMK
    { {         0}, {    0} },        
};

SR__ s_1041[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1047} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1042[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1048} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1043[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -145} }, 
};

SR__ s_1044[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       674}, { 1049} }, // pcmp
    { {       262}, { 1050} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1045[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       372}, { 1051} }, // PBSW
    { {         0}, {    0} },        
};

SR__ s_1046[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1052} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1047[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1053} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1048[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -146} }, 
};

SR__ s_1049[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       675}, { 1054} }, // pdx
    { {       262}, { 1055} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1050[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       373}, { 1056} }, // PCMP
    { {         0}, {    0} },        
};

SR__ s_1051[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1057} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1052[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1058} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1053[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -147} }, 
};

SR__ s_1054[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       676}, { 1059} }, // pmet
    { {       262}, { 1060} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1055[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       374}, { 1061} }, // PDX
    { {         0}, {    0} },       
};

SR__ s_1056[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1062} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1057[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1063} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1058[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -148} }, 
};

SR__ s_1059[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       677}, { 1064} }, // pmgdx
    { {       262}, { 1065} }, // LP   
    { {         0}, {    0} },         
};

SR__ s_1060[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       375}, { 1066} }, // PMET
    { {         0}, {    0} },        
};

SR__ s_1061[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1067} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1062[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1068} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1063[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -149} }, 
};

SR__ s_1064[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       678}, { 1069} }, // pnk
    { {       262}, { 1070} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1065[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       376}, { 1071} }, // PMGDX
    { {         0}, {    0} },         
};

SR__ s_1066[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1072} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1067[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1073} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1068[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -150} }, 
};

SR__ s_1069[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       679}, { 1074} }, // prw
    { {       262}, { 1075} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1070[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       377}, { 1076} }, // PNK
    { {         0}, {    0} },       
};

SR__ s_1071[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1077} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1072[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1078} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1073[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -151} }, 
};

SR__ s_1074[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       680}, { 1079} }, // prwa
    { {       262}, { 1080} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1075[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       378}, { 1081} }, // PRW
    { {         0}, {    0} },       
};

SR__ s_1076[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1082} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1077[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1083} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1078[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -152} }, 
};

SR__ s_1079[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       681}, { 1084} }, // psw
    { {       262}, { 1085} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1080[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       379}, { 1086} }, // PRWA
    { {         0}, {    0} },        
};

SR__ s_1081[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1087} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1082[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1088} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1083[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -153} }, 
};

SR__ s_1084[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       682}, { 1089} }, // ptw
    { {       262}, { 1090} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1085[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       380}, { 1091} }, // PSW
    { {         0}, {    0} },       
};

SR__ s_1086[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1092} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1087[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1093} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1088[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -154} }, 
};

SR__ s_1089[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       683}, { 1094} }, // pso
    { {       262}, { 1095} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1090[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       381}, { 1096} }, // PTW
    { {         0}, {    0} },       
};

SR__ s_1091[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1097} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1092[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1098} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1093[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -155} }, 
};

SR__ s_1094[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       684}, { 1099} }, // pam
    { {       262}, { 1100} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1095[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       382}, { 1101} }, // PSO
    { {         0}, {    0} },       
};

SR__ s_1096[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1102} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1097[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1103} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1098[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -156} }, 
};

SR__ s_1099[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       685}, { 1104} }, // pd
    { {       262}, { 1105} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1100[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       383}, { 1106} }, // PAM
    { {         0}, {    0} },       
};

SR__ s_1101[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1107} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1102[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1108} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1103[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -157} }, 
};

SR__ s_1104[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       686}, { 1109} }, // pr
    { {       262}, { 1110} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1105[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       384}, { 1111} }, // PD
    { {         0}, {    0} },      
};

SR__ s_1106[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1112} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1107[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1113} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1108[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -158} }, 
};

SR__ s_1109[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       687}, { 1114} }, // ps
    { {       262}, { 1115} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1110[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       385}, { 1116} }, // PR
    { {         0}, {    0} },      
};

SR__ s_1111[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1117} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1112[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1118} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1113[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -159} }, 
};

SR__ s_1114[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       688}, { 1119} }, // psm
    { {       262}, { 1120} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1115[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       386}, { 1121} }, // PS
    { {         0}, {    0} },      
};

SR__ s_1116[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1122} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1117[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1123} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1118[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -160} }, 
};

SR__ s_1119[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       689}, { 1124} }, // psmm
    { {       262}, { 1125} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1120[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       387}, { 1126} }, // PSM
    { {         0}, {    0} },       
};

SR__ s_1121[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1127} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1122[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1128} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1123[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -161} }, 
};

SR__ s_1124[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       690}, { 1129} }, // pw
    { {       262}, { 1130} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1125[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       388}, { 1131} }, // PSMM
    { {         0}, {    0} },        
};

SR__ s_1126[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1132} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1127[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1133} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1128[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -163} }, 
};

SR__ s_1129[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       691}, { 1134} }, // ptb
    { {       262}, { 1135} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1130[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       389}, { 1136} }, // PW
    { {         0}, {    0} },      
};

SR__ s_1131[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1137} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1132[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1138} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1133[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -164} }, 
};

SR__ s_1134[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       692}, { 1139} }, // ptd
    { {       262}, { 1140} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1135[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       390}, { 1141} }, // PTB
    { {         0}, {    0} },       
};

SR__ s_1136[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1142} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1137[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1143} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1138[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -166} }, 
};

SR__ s_1139[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       693}, { 1144} }, // p 
    { {       262}, { 1145} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1140[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       391}, { 1146} }, // PTD
    { {         0}, {    0} },       
};

SR__ s_1141[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1147} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1142[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1148} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1143[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -168} }, 
};

SR__ s_1144[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       694}, { 1149} }, // pfl
    { {       262}, { 1150} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1145[] =
{
    { { REQ_TOKEN}, {    2} },     
    { {       392}, { 1151} }, // P
    { {         0}, {    0} },     
};

SR__ s_1146[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1152} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1147[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1153} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1148[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -169} }, 
};

SR__ s_1149[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       695}, { 1154} }, // pfr
    { {       262}, { 1155} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1150[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       393}, { 1156} }, // PFL
    { {         0}, {    0} },       
};

SR__ s_1151[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1157} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1152[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1158} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1153[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -170} }, 
};

SR__ s_1154[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       696}, { 1159} }, // prof
    { {       262}, { 1160} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1155[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       394}, { 1161} }, // PFR
    { {         0}, {    0} },       
};

SR__ s_1156[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1162} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1157[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1163} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1158[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -171} }, 
};

SR__ s_1159[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       697}, { 1164} }, // pgk
    { {       262}, { 1165} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1160[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       395}, { 1166} }, // PROF
    { {         0}, {    0} },        
};

SR__ s_1161[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1167} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1162[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1168} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1163[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -172} }, 
};

SR__ s_1164[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       698}, { 1169} }, // qs
    { {       262}, { 1170} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1165[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       396}, { 1171} }, // PGK
    { {         0}, {    0} },       
};

SR__ s_1166[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1172} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1167[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1173} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1168[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -173} }, 
};

SR__ s_1169[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       699}, { 1174} }, // qsl
    { {       262}, { 1175} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1170[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       397}, { 1176} }, // QS
    { {         0}, {    0} },      
};

SR__ s_1171[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1177} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1172[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1178} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1173[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -174} }, 
};

SR__ s_1174[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       700}, { 1179} }, // rm
    { {       262}, { 1180} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1175[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       398}, { 1181} }, // QSL
    { {         0}, {    0} },       
};

SR__ s_1176[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1182} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1177[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1183} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1178[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -175} }, 
};

SR__ s_1179[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       701}, { 1184} }, // rd
    { {       262}, { 1185} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1180[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       399}, { 1186} }, // RM
    { {         0}, {    0} },      
};

SR__ s_1181[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1187} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1182[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1188} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1183[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -176} }, 
};

SR__ s_1184[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       702}, { 1189} }, // rdt
    { {       262}, { 1190} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1185[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       400}, { 1191} }, // RD
    { {         0}, {    0} },      
};

SR__ s_1186[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1192} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1187[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1193} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1188[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -177} }, 
};

SR__ s_1189[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       703}, { 1194} }, // ri
    { {       262}, { 1195} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1190[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       401}, { 1196} }, // RDT
    { {         0}, {    0} },       
};

SR__ s_1191[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1197} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1192[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1198} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1193[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -178} }, 
};

SR__ s_1194[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       704}, { 1199} }, // rmin
    { {       262}, { 1200} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1195[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       402}, { 1201} }, // RI
    { {         0}, {    0} },      
};

SR__ s_1196[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1202} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1197[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1203} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1198[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -179} }, 
};

SR__ s_1199[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       705}, { 1204} }, // rs
    { {       262}, { 1205} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1200[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       403}, { 1206} }, // RMIN
    { {         0}, {    0} },        
};

SR__ s_1201[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1207} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1202[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1208} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1203[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -180} }, 
};

SR__ s_1204[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       706}, { 1209} }, // rcp
    { {       262}, { 1210} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1205[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       404}, { 1211} }, // RS
    { {         0}, {    0} },      
};

SR__ s_1206[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1212} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1207[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1213} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1208[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -181} }, 
};

SR__ s_1209[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       707}, { 1214} }, // sccm
    { {       262}, { 1215} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1210[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       405}, { 1216} }, // RCP
    { {         0}, {    0} },       
};

SR__ s_1211[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1217} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1212[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1218} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1213[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -182} }, 
};

SR__ s_1214[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       708}, { 1219} }, // scms
    { {       262}, { 1220} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1215[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       406}, { 1221} }, // SCCM
    { {         0}, {    0} },        
};

SR__ s_1216[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1222} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1217[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1223} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1218[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -183} }, 
};

SR__ s_1219[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       709}, { 1224} }, // sms
    { {       262}, { 1225} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1220[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       407}, { 1226} }, // SCMS
    { {         0}, {    0} },        
};

SR__ s_1221[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1227} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1222[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1228} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1223[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -184} }, 
};

SR__ s_1224[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       710}, { 1229} }, // sm
    { {       262}, { 1230} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1225[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       408}, { 1231} }, // SMS
    { {         0}, {    0} },       
};

SR__ s_1226[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1232} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1227[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1233} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1228[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -185} }, 
};

SR__ s_1229[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       711}, { 1234} }, // ss
    { {       262}, { 1235} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1230[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       409}, { 1236} }, // SM
    { {         0}, {    0} },      
};

SR__ s_1231[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1237} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1232[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1238} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1233[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -186} }, 
};

SR__ s_1234[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       712}, { 1239} }, // svs
    { {       262}, { 1240} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1235[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       410}, { 1241} }, // SS
    { {         0}, {    0} },      
};

SR__ s_1236[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1242} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1237[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1243} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1238[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -187} }, 
};

SR__ s_1239[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       713}, { 1244} }, // sbs
    { {       262}, { 1245} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1240[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       411}, { 1246} }, // SVS
    { {         0}, {    0} },       
};

SR__ s_1241[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1247} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1242[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1248} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1243[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -188} }, 
};

SR__ s_1244[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       714}, { 1249} }, // sdr
    { {       262}, { 1250} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1245[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       412}, { 1251} }, // SBS
    { {         0}, {    0} },       
};

SR__ s_1246[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1252} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1247[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1253} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1248[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -189} }, 
};

SR__ s_1249[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       715}, { 1254} }, // sims
    { {       262}, { 1255} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1250[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       413}, { 1256} }, // SDR
    { {         0}, {    0} },       
};

SR__ s_1251[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1257} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1252[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1258} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1253[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -190} }, 
};

SR__ s_1254[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       716}, { 1259} }, // sdf
    { {       262}, { 1260} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1255[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       414}, { 1261} }, // SIMS
    { {         0}, {    0} },        
};

SR__ s_1256[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1262} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1257[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1263} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1258[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -191} }, 
};

SR__ s_1259[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       717}, { 1264} }, // sotflt
    { {       262}, { 1265} }, // LP    
    { {         0}, {    0} },          
};

SR__ s_1260[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       415}, { 1266} }, // SDF
    { {         0}, {    0} },       
};

SR__ s_1261[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1267} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1262[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1268} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1263[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -192} }, 
};

SR__ s_1264[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       718}, { 1269} }, // sotfrt
    { {       262}, { 1270} }, // LP    
    { {         0}, {    0} },          
};

SR__ s_1265[] =
{
    { { REQ_TOKEN}, {    2} },          
    { {       416}, { 1271} }, // SOTFLT
    { {         0}, {    0} },          
};

SR__ s_1266[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1272} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1267[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1273} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1268[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -193} }, 
};

SR__ s_1269[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       719}, { 1274} }, // sc
    { {       262}, { 1275} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1270[] =
{
    { { REQ_TOKEN}, {    2} },          
    { {       417}, { 1276} }, // SOTFRT
    { {         0}, {    0} },          
};

SR__ s_1271[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1277} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1272[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1278} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1273[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -194} }, 
};

SR__ s_1274[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       720}, { 1279} }, // sim
    { {       262}, { 1280} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1275[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       418}, { 1281} }, // SC
    { {         0}, {    0} },      
};

SR__ s_1276[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1282} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1277[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1283} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1278[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -195} }, 
};

SR__ s_1279[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       721}, { 1284} }, // smax
    { {       262}, { 1285} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1280[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       419}, { 1286} }, // SIM
    { {         0}, {    0} },       
};

SR__ s_1281[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1287} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1282[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1288} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1283[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -196} }, 
};

SR__ s_1284[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       722}, { 1289} }, // sgl
    { {       262}, { 1290} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1285[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       420}, { 1291} }, // SMAX
    { {         0}, {    0} },        
};

SR__ s_1286[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1292} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1287[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1293} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1288[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -197} }, 
};

SR__ s_1289[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       723}, { 1294} }, // sgr
    { {       262}, { 1295} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1290[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       421}, { 1296} }, // SGL
    { {         0}, {    0} },       
};

SR__ s_1291[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1297} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1292[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1298} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1293[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -198} }, 
};

SR__ s_1294[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       724}, { 1299} }, // sbv
    { {       262}, { 1300} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1295[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       422}, { 1301} }, // SGR
    { {         0}, {    0} },       
};

SR__ s_1296[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1302} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1297[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1303} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1298[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -199} }, 
};

SR__ s_1299[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       725}, { 1304} }, // smics
    { {       262}, { 1305} }, // LP   
    { {         0}, {    0} },         
};

SR__ s_1300[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       423}, { 1306} }, // SBV
    { {         0}, {    0} },       
};

SR__ s_1301[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1307} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1302[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1308} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1303[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -201} }, 
};

SR__ s_1304[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       726}, { 1309} }, // smod
    { {       262}, { 1310} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1305[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       424}, { 1311} }, // SMICS
    { {         0}, {    0} },         
};

SR__ s_1306[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1312} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1307[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1313} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1308[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -202} }, 
};

SR__ s_1309[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       727}, { 1314} }, // so
    { {       262}, { 1315} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1310[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       425}, { 1316} }, // SMOD
    { {         0}, {    0} },        
};

SR__ s_1311[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1317} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1312[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1318} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1313[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -203} }, 
};

SR__ s_1314[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       728}, { 1319} }, // sso
    { {       262}, { 1320} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1315[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       426}, { 1321} }, // SO
    { {         0}, {    0} },      
};

SR__ s_1316[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1322} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1317[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1323} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1318[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -204} }, 
};

SR__ s_1319[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       729}, { 1324} }, // tbd
    { {       262}, { 1325} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1320[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       427}, { 1326} }, // SSO
    { {         0}, {    0} },       
};

SR__ s_1321[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1327} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1322[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1328} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1323[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -205} }, 
};

SR__ s_1324[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       730}, { 1329} }, // tc
    { {       262}, { 1330} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1325[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       428}, { 1331} }, // TBD
    { {         0}, {    0} },       
};

SR__ s_1326[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1332} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1327[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1333} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1328[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -206} }, 
};

SR__ s_1329[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       731}, { 1334} }, // td
    { {       262}, { 1335} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1330[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       429}, { 1336} }, // TC
    { {         0}, {    0} },      
};

SR__ s_1331[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1337} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1332[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1338} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1333[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -207} }, 
};

SR__ s_1334[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       732}, { 1339} }, // te
    { {       262}, { 1340} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1335[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       430}, { 1341} }, // TD
    { {         0}, {    0} },      
};

SR__ s_1336[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1342} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1337[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1343} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1338[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -208} }, 
};

SR__ s_1339[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       733}, { 1344} }, // tpr
    { {       262}, { 1345} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1340[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       431}, { 1346} }, // TE
    { {         0}, {    0} },      
};

SR__ s_1341[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1347} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1342[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1348} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1343[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -209} }, 
};

SR__ s_1344[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       734}, { 1349} }, // trf
    { {       262}, { 1350} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1345[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       432}, { 1351} }, // TPR
    { {         0}, {    0} },       
};

SR__ s_1346[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1352} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1347[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1353} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1348[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -210} }, 
};

SR__ s_1349[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       735}, { 1354} }, // tw
    { {       262}, { 1355} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1350[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       433}, { 1356} }, // TRF
    { {         0}, {    0} },       
};

SR__ s_1351[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1357} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1352[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1358} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1353[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -211} }, 
};

SR__ s_1354[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       736}, { 1359} }, // tan
    { {       262}, { 1360} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1355[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       434}, { 1361} }, // TW
    { {         0}, {    0} },      
};

SR__ s_1356[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1362} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1357[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1363} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1358[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -212} }, 
};

SR__ s_1359[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       737}, { 1364} }, // tls
    { {       262}, { 1365} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1360[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       435}, { 1366} }, // TAN
    { {         0}, {    0} },       
};

SR__ s_1361[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1367} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1362[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1368} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1363[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -213} }, 
};

SR__ s_1364[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       738}, { 1369} }, // trs
    { {       262}, { 1370} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1365[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       436}, { 1371} }, // TLS
    { {         0}, {    0} },       
};

SR__ s_1366[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1372} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1367[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1373} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1368[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -214} }, 
};

SR__ s_1369[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       739}, { 1374} }, // tlc
    { {       262}, { 1375} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1370[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       437}, { 1376} }, // TRS
    { {         0}, {    0} },       
};

SR__ s_1371[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       564}, { 1377} }, // string
    { {       259}, {  146} }, // STRING
    { {         0}, {    0} },          
};

SR__ s_1372[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1378} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1373[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -215} }, 
};

SR__ s_1374[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       740}, { 1379} }, // tld
    { {       262}, { 1380} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1375[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       438}, { 1381} }, // TLC
    { {         0}, {    0} },       
};

SR__ s_1376[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       564}, { 1382} }, // string
    { {       259}, {  146} }, // STRING
    { {         0}, {    0} },          
};

SR__ s_1377[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1383} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1378[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -216} }, 
};

SR__ s_1379[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       741}, { 1384} }, // tldir
    { {       262}, { 1385} }, // LP   
    { {         0}, {    0} },         
};

SR__ s_1380[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       439}, { 1386} }, // TLD
    { {         0}, {    0} },       
};

SR__ s_1381[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1387} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1382[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1388} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1383[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -217} }, 
};

SR__ s_1384[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       742}, { 1389} }, // tlf
    { {       262}, { 1390} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1385[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       440}, { 1391} }, // TLDIR
    { {         0}, {    0} },         
};

SR__ s_1386[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1392} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1387[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1393} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1388[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -218} }, 
};

SR__ s_1389[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       743}, { 1394} }, // tlfn
    { {       262}, { 1395} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1390[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       441}, { 1396} }, // TLF
    { {         0}, {    0} },       
};

SR__ s_1391[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       564}, { 1397} }, // string
    { {       259}, {  146} }, // STRING
    { {         0}, {    0} },          
};

SR__ s_1392[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1398} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1393[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -219} }, 
};

SR__ s_1394[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       744}, { 1399} }, // tl
    { {       262}, { 1400} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1395[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       442}, { 1401} }, // TLFN
    { {         0}, {    0} },        
};

SR__ s_1396[] =
{
    { { REQ_TOKEN}, {    6} },           
    { {       562}, { 1402} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1397[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1403} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1398[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -220} }, 
};

SR__ s_1399[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       745}, { 1404} }, // uo
    { {       262}, { 1405} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1400[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       443}, { 1406} }, // TL
    { {         0}, {    0} },      
};

SR__ s_1401[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       564}, { 1407} }, // string
    { {       259}, {  146} }, // STRING
    { {         0}, {    0} },          
};

SR__ s_1402[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1408} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1403[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -221} }, 
};

SR__ s_1404[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       746}, { 1409} }, // v 
    { {       262}, { 1410} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1405[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       444}, { 1411} }, // UO
    { {         0}, {    0} },      
};

SR__ s_1406[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1412} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1407[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1413} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1408[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -222} }, 
};

SR__ s_1409[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       747}, { 1414} }, // va
    { {       262}, { 1415} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1410[] =
{
    { { REQ_TOKEN}, {    2} },     
    { {       445}, { 1416} }, // V
    { {         0}, {    0} },     
};

SR__ s_1411[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1417} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1412[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1418} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1413[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -223} }, 
};

SR__ s_1414[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       748}, { 1419} }, // vd
    { {       262}, { 1420} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1415[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       446}, { 1421} }, // VA
    { {         0}, {    0} },      
};

SR__ s_1416[] =
{
    { { REQ_TOKEN}, {    4} },        
    { {       561}, { 1422} }, // bool
    { {       264}, {   29} }, // _0  
    { {       265}, {   30} }, // _1  
    { {         0}, {    0} },        
};

SR__ s_1417[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1423} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1418[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -224} }, 
};

SR__ s_1419[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       749}, { 1424} }, // wa
    { {       262}, { 1425} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1420[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       447}, { 1426} }, // VD
    { {         0}, {    0} },      
};

SR__ s_1421[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1427} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1422[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1428} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1423[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -225} }, 
};

SR__ s_1424[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       750}, { 1429} }, // wd
    { {       262}, { 1430} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1425[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       448}, { 1431} }, // WA
    { {         0}, {    0} },      
};

SR__ s_1426[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1432} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1427[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1433} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1428[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -226} }, 
};

SR__ s_1429[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       751}, { 1434} }, // wf
    { {       262}, { 1435} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1430[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       449}, { 1436} }, // WD
    { {         0}, {    0} },      
};

SR__ s_1431[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1437} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1432[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1438} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1433[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -227} }, 
};

SR__ s_1434[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       752}, { 1439} }, // wn
    { {       262}, { 1440} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1435[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       450}, { 1441} }, // WF
    { {         0}, {    0} },      
};

SR__ s_1436[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1442} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1437[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1443} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1438[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -228} }, 
};

SR__ s_1439[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       753}, { 1444} }, // wr
    { {       262}, { 1445} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1440[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       451}, { 1446} }, // WN
    { {         0}, {    0} },      
};

SR__ s_1441[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1447} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1442[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1448} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1443[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -229} }, 
};

SR__ s_1444[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       754}, { 1449} }, // wra
    { {       262}, { 1450} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1445[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       452}, { 1451} }, // WR
    { {         0}, {    0} },      
};

SR__ s_1446[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1452} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1447[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1453} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1448[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -230} }, 
};

SR__ s_1449[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1454} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1450[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       453}, { 1455} }, // WRA
    { {         0}, {    0} },       
};

SR__ s_1451[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1456} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1452[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1457} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1453[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -231} }, 
};

SR__ s_1454[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -33} }, 
};

SR__ s_1455[] =
{
    { { REQ_TOKEN}, {    8} },           
    { {       563}, { 1458} }, // double 
    { {       257}, {   25} }, // DOUBLE 
    { {       562}, {   26} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       561}, {   28} }, // bool   
    { {       264}, {   29} }, // _0     
    { {       265}, {   30} }, // _1     
    { {         0}, {    0} },           
};

SR__ s_1456[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1459} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1457[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -232} }, 
};

SR__ s_1458[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1460} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1459[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -233} }, 
};

SR__ s_1460[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -234} }, 
};


// State array:
SR__ *s_state[] =
{
  s_0,  s_1,  s_2,  s_3,  s_4,  s_5,  s_6,  s_7,  s_8,  s_9,
  s_10,  s_11,  s_12,  s_13,  s_14,  s_15,  s_16,  s_17,  s_18,  s_19,
  s_20,  s_21,  s_22,  s_23,  s_24,  s_25,  s_26,  s_27,  s_28,  s_29,
  s_30,  s_31,  s_32,  s_33,  s_34,  s_35,  s_36,  s_37,  s_38,  s_39,
  s_40,  s_41,  s_42,  s_43,  s_44,  s_45,  s_46,  s_47,  s_48,  s_49,
  s_50,  s_51,  s_52,  s_53,  s_54,  s_55,  s_56,  s_57,  s_58,  s_59,
  s_60,  s_61,  s_62,  s_63,  s_64,  s_65,  s_66,  s_67,  s_68,  s_69,
  s_70,  s_71,  s_72,  s_73,  s_74,  s_75,  s_76,  s_77,  s_78,  s_79,
  s_80,  s_81,  s_82,  s_83,  s_84,  s_85,  s_86,  s_87,  s_88,  s_89,
  s_90,  s_91,  s_92,  s_93,  s_94,  s_95,  s_96,  s_97,  s_98,  s_99,
  s_100,  s_101,  s_102,  s_103,  s_104,  s_105,  s_106,  s_107,  s_108,  s_109,
  s_110,  s_111,  s_112,  s_113,  s_114,  s_115,  s_116,  s_117,  s_118,  s_119,
  s_120,  s_121,  s_122,  s_123,  s_124,  s_125,  s_126,  s_127,  s_128,  s_129,
  s_130,  s_131,  s_132,  s_133,  s_134,  s_135,  s_136,  s_137,  s_138,  s_139,
  s_140,  s_141,  s_142,  s_143,  s_144,  s_145,  s_146,  s_147,  s_148,  s_149,
  s_150,  s_151,  s_152,  s_153,  s_154,  s_155,  s_156,  s_157,  s_158,  s_159,
  s_160,  s_161,  s_162,  s_163,  s_164,  s_165,  s_166,  s_167,  s_168,  s_169,
  s_170,  s_171,  s_172,  s_173,  s_174,  s_175,  s_176,  s_177,  s_178,  s_179,
  s_180,  s_181,  s_182,  s_183,  s_184,  s_185,  s_186,  s_187,  s_188,  s_189,
  s_190,  s_191,  s_192,  s_193,  s_194,  s_195,  s_196,  s_197,  s_198,  s_199,
  s_200,  s_201,  s_202,  s_203,  s_204,  s_205,  s_206,  s_207,  s_208,  s_209,
  s_210,  s_211,  s_212,  s_213,  s_214,  s_215,  s_216,  s_217,  s_218,  s_219,
  s_220,  s_221,  s_222,  s_223,  s_224,  s_225,  s_226,  s_227,  s_228,  s_229,
  s_230,  s_231,  s_232,  s_233,  s_234,  s_235,  s_236,  s_237,  s_238,  s_239,
  s_240,  s_241,  s_242,  s_243,  s_244,  s_245,  s_246,  s_247,  s_248,  s_249,
  s_250,  s_251,  s_252,  s_253,  s_254,  s_255,  s_256,  s_257,  s_258,  s_259,
  s_260,  s_261,  s_262,  s_263,  s_264,  s_265,  s_266,  s_267,  s_268,  s_269,
  s_270,  s_271,  s_272,  s_273,  s_274,  s_275,  s_276,  s_277,  s_278,  s_279,
  s_280,  s_281,  s_282,  s_283,  s_284,  s_285,  s_286,  s_287,  s_288,  s_289,
  s_290,  s_291,  s_292,  s_293,  s_294,  s_295,  s_296,  s_297,  s_298,  s_299,
  s_300,  s_301,  s_302,  s_303,  s_304,  s_305,  s_306,  s_307,  s_308,  s_309,
  s_310,  s_311,  s_312,  s_313,  s_314,  s_315,  s_316,  s_317,  s_318,  s_319,
  s_320,  s_321,  s_322,  s_323,  s_324,  s_325,  s_326,  s_327,  s_328,  s_329,
  s_330,  s_331,  s_332,  s_333,  s_334,  s_335,  s_336,  s_337,  s_338,  s_339,
  s_340,  s_341,  s_342,  s_343,  s_344,  s_345,  s_346,  s_347,  s_348,  s_349,
  s_350,  s_351,  s_352,  s_353,  s_354,  s_355,  s_356,  s_357,  s_358,  s_359,
  s_360,  s_361,  s_362,  s_363,  s_364,  s_365,  s_366,  s_367,  s_368,  s_369,
  s_370,  s_371,  s_372,  s_373,  s_374,  s_375,  s_376,  s_377,  s_378,  s_379,
  s_380,  s_381,  s_382,  s_383,  s_384,  s_385,  s_386,  s_387,  s_388,  s_389,
  s_390,  s_391,  s_392,  s_393,  s_394,  s_395,  s_396,  s_397,  s_398,  s_399,
  s_400,  s_401,  s_402,  s_403,  s_404,  s_405,  s_406,  s_407,  s_408,  s_409,
  s_410,  s_411,  s_412,  s_413,  s_414,  s_415,  s_416,  s_417,  s_418,  s_419,
  s_420,  s_421,  s_422,  s_423,  s_424,  s_425,  s_426,  s_427,  s_428,  s_429,
  s_430,  s_431,  s_432,  s_433,  s_434,  s_435,  s_436,  s_437,  s_438,  s_439,
  s_440,  s_441,  s_442,  s_443,  s_444,  s_445,  s_446,  s_447,  s_448,  s_449,
  s_450,  s_451,  s_452,  s_453,  s_454,  s_455,  s_456,  s_457,  s_458,  s_459,
  s_460,  s_461,  s_462,  s_463,  s_464,  s_465,  s_466,  s_467,  s_468,  s_469,
  s_470,  s_471,  s_472,  s_473,  s_474,  s_475,  s_476,  s_477,  s_478,  s_479,
  s_480,  s_481,  s_482,  s_483,  s_484,  s_485,  s_486,  s_487,  s_488,  s_489,
  s_490,  s_491,  s_492,  s_493,  s_494,  s_495,  s_496,  s_497,  s_498,  s_499,
  s_500,  s_501,  s_502,  s_503,  s_504,  s_505,  s_506,  s_507,  s_508,  s_509,
  s_510,  s_511,  s_512,  s_513,  s_514,  s_515,  s_516,  s_517,  s_518,  s_519,
  s_520,  s_521,  s_522,  s_523,  s_524,  s_525,  s_526,  s_527,  s_528,  s_529,
  s_530,  s_531,  s_532,  s_533,  s_534,  s_535,  s_536,  s_537,  s_538,  s_539,
  s_540,  s_541,  s_542,  s_543,  s_544,  s_545,  s_546,  s_547,  s_548,  s_549,
  s_550,  s_551,  s_552,  s_553,  s_554,  s_555,  s_556,  s_557,  s_558,  s_559,
  s_560,  s_561,  s_562,  s_563,  s_564,  s_565,  s_566,  s_567,  s_568,  s_569,
  s_570,  s_571,  s_572,  s_573,  s_574,  s_575,  s_576,  s_577,  s_578,  s_579,
  s_580,  s_581,  s_582,  s_583,  s_584,  s_585,  s_586,  s_587,  s_588,  s_589,
  s_590,  s_591,  s_592,  s_593,  s_594,  s_595,  s_596,  s_597,  s_598,  s_599,
  s_600,  s_601,  s_602,  s_603,  s_604,  s_605,  s_606,  s_607,  s_608,  s_609,
  s_610,  s_611,  s_612,  s_613,  s_614,  s_615,  s_616,  s_617,  s_618,  s_619,
  s_620,  s_621,  s_622,  s_623,  s_624,  s_625,  s_626,  s_627,  s_628,  s_629,
  s_630,  s_631,  s_632,  s_633,  s_634,  s_635,  s_636,  s_637,  s_638,  s_639,
  s_640,  s_641,  s_642,  s_643,  s_644,  s_645,  s_646,  s_647,  s_648,  s_649,
  s_650,  s_651,  s_652,  s_653,  s_654,  s_655,  s_656,  s_657,  s_658,  s_659,
  s_660,  s_661,  s_662,  s_663,  s_664,  s_665,  s_666,  s_667,  s_668,  s_669,
  s_670,  s_671,  s_672,  s_673,  s_674,  s_675,  s_676,  s_677,  s_678,  s_679,
  s_680,  s_681,  s_682,  s_683,  s_684,  s_685,  s_686,  s_687,  s_688,  s_689,
  s_690,  s_691,  s_692,  s_693,  s_694,  s_695,  s_696,  s_697,  s_698,  s_699,
  s_700,  s_701,  s_702,  s_703,  s_704,  s_705,  s_706,  s_707,  s_708,  s_709,
  s_710,  s_711,  s_712,  s_713,  s_714,  s_715,  s_716,  s_717,  s_718,  s_719,
  s_720,  s_721,  s_722,  s_723,  s_724,  s_725,  s_726,  s_727,  s_728,  s_729,
  s_730,  s_731,  s_732,  s_733,  s_734,  s_735,  s_736,  s_737,  s_738,  s_739,
  s_740,  s_741,  s_742,  s_743,  s_744,  s_745,  s_746,  s_747,  s_748,  s_749,
  s_750,  s_751,  s_752,  s_753,  s_754,  s_755,  s_756,  s_757,  s_758,  s_759,
  s_760,  s_761,  s_762,  s_763,  s_764,  s_765,  s_766,  s_767,  s_768,  s_769,
  s_770,  s_771,  s_772,  s_773,  s_774,  s_775,  s_776,  s_777,  s_778,  s_779,
  s_780,  s_781,  s_782,  s_783,  s_784,  s_785,  s_786,  s_787,  s_788,  s_789,
  s_790,  s_791,  s_792,  s_793,  s_794,  s_795,  s_796,  s_797,  s_798,  s_799,
  s_800,  s_801,  s_802,  s_803,  s_804,  s_805,  s_806,  s_807,  s_808,  s_809,
  s_810,  s_811,  s_812,  s_813,  s_814,  s_815,  s_816,  s_817,  s_818,  s_819,
  s_820,  s_821,  s_822,  s_823,  s_824,  s_825,  s_826,  s_827,  s_828,  s_829,
  s_830,  s_831,  s_832,  s_833,  s_834,  s_835,  s_836,  s_837,  s_838,  s_839,
  s_840,  s_841,  s_842,  s_843,  s_844,  s_845,  s_846,  s_847,  s_848,  s_849,
  s_850,  s_851,  s_852,  s_853,  s_854,  s_855,  s_856,  s_857,  s_858,  s_859,
  s_860,  s_861,  s_862,  s_863,  s_864,  s_865,  s_866,  s_867,  s_868,  s_869,
  s_870,  s_871,  s_872,  s_873,  s_874,  s_875,  s_876,  s_877,  s_878,  s_879,
  s_880,  s_881,  s_882,  s_883,  s_884,  s_885,  s_886,  s_887,  s_888,  s_889,
  s_890,  s_891,  s_892,  s_893,  s_894,  s_895,  s_896,  s_897,  s_898,  s_899,
  s_900,  s_901,  s_902,  s_903,  s_904,  s_905,  s_906,  s_907,  s_908,  s_909,
  s_910,  s_911,  s_912,  s_913,  s_914,  s_915,  s_916,  s_917,  s_918,  s_919,
  s_920,  s_921,  s_922,  s_923,  s_924,  s_925,  s_926,  s_927,  s_928,  s_929,
  s_930,  s_931,  s_932,  s_933,  s_934,  s_935,  s_936,  s_937,  s_938,  s_939,
  s_940,  s_941,  s_942,  s_943,  s_944,  s_945,  s_946,  s_947,  s_948,  s_949,
  s_950,  s_951,  s_952,  s_953,  s_954,  s_955,  s_956,  s_957,  s_958,  s_959,
  s_960,  s_961,  s_962,  s_963,  s_964,  s_965,  s_966,  s_967,  s_968,  s_969,
  s_970,  s_971,  s_972,  s_973,  s_974,  s_975,  s_976,  s_977,  s_978,  s_979,
  s_980,  s_981,  s_982,  s_983,  s_984,  s_985,  s_986,  s_987,  s_988,  s_989,
  s_990,  s_991,  s_992,  s_993,  s_994,  s_995,  s_996,  s_997,  s_998,  s_999,
  s_1000,  s_1001,  s_1002,  s_1003,  s_1004,  s_1005,  s_1006,  s_1007,  s_1008,  s_1009,
  s_1010,  s_1011,  s_1012,  s_1013,  s_1014,  s_1015,  s_1016,  s_1017,  s_1018,  s_1019,
  s_1020,  s_1021,  s_1022,  s_1023,  s_1024,  s_1025,  s_1026,  s_1027,  s_1028,  s_1029,
  s_1030,  s_1031,  s_1032,  s_1033,  s_1034,  s_1035,  s_1036,  s_1037,  s_1038,  s_1039,
  s_1040,  s_1041,  s_1042,  s_1043,  s_1044,  s_1045,  s_1046,  s_1047,  s_1048,  s_1049,
  s_1050,  s_1051,  s_1052,  s_1053,  s_1054,  s_1055,  s_1056,  s_1057,  s_1058,  s_1059,
  s_1060,  s_1061,  s_1062,  s_1063,  s_1064,  s_1065,  s_1066,  s_1067,  s_1068,  s_1069,
  s_1070,  s_1071,  s_1072,  s_1073,  s_1074,  s_1075,  s_1076,  s_1077,  s_1078,  s_1079,
  s_1080,  s_1081,  s_1082,  s_1083,  s_1084,  s_1085,  s_1086,  s_1087,  s_1088,  s_1089,
  s_1090,  s_1091,  s_1092,  s_1093,  s_1094,  s_1095,  s_1096,  s_1097,  s_1098,  s_1099,
  s_1100,  s_1101,  s_1102,  s_1103,  s_1104,  s_1105,  s_1106,  s_1107,  s_1108,  s_1109,
  s_1110,  s_1111,  s_1112,  s_1113,  s_1114,  s_1115,  s_1116,  s_1117,  s_1118,  s_1119,
  s_1120,  s_1121,  s_1122,  s_1123,  s_1124,  s_1125,  s_1126,  s_1127,  s_1128,  s_1129,
  s_1130,  s_1131,  s_1132,  s_1133,  s_1134,  s_1135,  s_1136,  s_1137,  s_1138,  s_1139,
  s_1140,  s_1141,  s_1142,  s_1143,  s_1144,  s_1145,  s_1146,  s_1147,  s_1148,  s_1149,
  s_1150,  s_1151,  s_1152,  s_1153,  s_1154,  s_1155,  s_1156,  s_1157,  s_1158,  s_1159,
  s_1160,  s_1161,  s_1162,  s_1163,  s_1164,  s_1165,  s_1166,  s_1167,  s_1168,  s_1169,
  s_1170,  s_1171,  s_1172,  s_1173,  s_1174,  s_1175,  s_1176,  s_1177,  s_1178,  s_1179,
  s_1180,  s_1181,  s_1182,  s_1183,  s_1184,  s_1185,  s_1186,  s_1187,  s_1188,  s_1189,
  s_1190,  s_1191,  s_1192,  s_1193,  s_1194,  s_1195,  s_1196,  s_1197,  s_1198,  s_1199,
  s_1200,  s_1201,  s_1202,  s_1203,  s_1204,  s_1205,  s_1206,  s_1207,  s_1208,  s_1209,
  s_1210,  s_1211,  s_1212,  s_1213,  s_1214,  s_1215,  s_1216,  s_1217,  s_1218,  s_1219,
  s_1220,  s_1221,  s_1222,  s_1223,  s_1224,  s_1225,  s_1226,  s_1227,  s_1228,  s_1229,
  s_1230,  s_1231,  s_1232,  s_1233,  s_1234,  s_1235,  s_1236,  s_1237,  s_1238,  s_1239,
  s_1240,  s_1241,  s_1242,  s_1243,  s_1244,  s_1245,  s_1246,  s_1247,  s_1248,  s_1249,
  s_1250,  s_1251,  s_1252,  s_1253,  s_1254,  s_1255,  s_1256,  s_1257,  s_1258,  s_1259,
  s_1260,  s_1261,  s_1262,  s_1263,  s_1264,  s_1265,  s_1266,  s_1267,  s_1268,  s_1269,
  s_1270,  s_1271,  s_1272,  s_1273,  s_1274,  s_1275,  s_1276,  s_1277,  s_1278,  s_1279,
  s_1280,  s_1281,  s_1282,  s_1283,  s_1284,  s_1285,  s_1286,  s_1287,  s_1288,  s_1289,
  s_1290,  s_1291,  s_1292,  s_1293,  s_1294,  s_1295,  s_1296,  s_1297,  s_1298,  s_1299,
  s_1300,  s_1301,  s_1302,  s_1303,  s_1304,  s_1305,  s_1306,  s_1307,  s_1308,  s_1309,
  s_1310,  s_1311,  s_1312,  s_1313,  s_1314,  s_1315,  s_1316,  s_1317,  s_1318,  s_1319,
  s_1320,  s_1321,  s_1322,  s_1323,  s_1324,  s_1325,  s_1326,  s_1327,  s_1328,  s_1329,
  s_1330,  s_1331,  s_1332,  s_1333,  s_1334,  s_1335,  s_1336,  s_1337,  s_1338,  s_1339,
  s_1340,  s_1341,  s_1342,  s_1343,  s_1344,  s_1345,  s_1346,  s_1347,  s_1348,  s_1349,
  s_1350,  s_1351,  s_1352,  s_1353,  s_1354,  s_1355,  s_1356,  s_1357,  s_1358,  s_1359,
  s_1360,  s_1361,  s_1362,  s_1363,  s_1364,  s_1365,  s_1366,  s_1367,  s_1368,  s_1369,
  s_1370,  s_1371,  s_1372,  s_1373,  s_1374,  s_1375,  s_1376,  s_1377,  s_1378,  s_1379,
  s_1380,  s_1381,  s_1382,  s_1383,  s_1384,  s_1385,  s_1386,  s_1387,  s_1388,  s_1389,
  s_1390,  s_1391,  s_1392,  s_1393,  s_1394,  s_1395,  s_1396,  s_1397,  s_1398,  s_1399,
  s_1400,  s_1401,  s_1402,  s_1403,  s_1404,  s_1405,  s_1406,  s_1407,  s_1408,  s_1409,
  s_1410,  s_1411,  s_1412,  s_1413,  s_1414,  s_1415,  s_1416,  s_1417,  s_1418,  s_1419,
  s_1420,  s_1421,  s_1422,  s_1423,  s_1424,  s_1425,  s_1426,  s_1427,  s_1428,  s_1429,
  s_1430,  s_1431,  s_1432,  s_1433,  s_1434,  s_1435,  s_1436,  s_1437,  s_1438,  s_1439,
  s_1440,  s_1441,  s_1442,  s_1443,  s_1444,  s_1445,  s_1446,  s_1447,  s_1448,  s_1449,
  s_1450,  s_1451,  s_1452,  s_1453,  s_1454,  s_1455,  s_1456,  s_1457,  s_1458,  s_1459,
  s_1460,
};

} // anonymous namespace ends



// If the parsing function call uses arguments, then provide an overloaded
// function.  The code below doesn't rely on parameters, so no arguments are
// required.  Furthermore, parse uses a function try block to allow us to do
// ACCEPT and ABORT from anywhere, even from within members called by actions,
// simply throwing the appropriate exceptions.

ParserBase::ParserBase()
:
    d_stackIdx__(-1),
    // $insert debuginit
    d_debug__(false),
    d_nErrors__(0),
    // $insert requiredtokens
    d_requiredTokens__(0),
    d_acceptedTokens__(d_requiredTokens__),
    d_token__(_UNDETERMINED_),
    d_nextToken__(_UNDETERMINED_)
{}


void Parser::print__()
{
// $insert print
}

void ParserBase::clearin()
{
    d_token__ = d_nextToken__ = _UNDETERMINED_;
}

void ParserBase::push__(size_t state)
{
    if (static_cast<size_t>(d_stackIdx__ + 1) == d_stateStack__.size())
    {
        size_t newSize = d_stackIdx__ + STACK_EXPANSION;
        d_stateStack__.resize(newSize);
        d_valueStack__.resize(newSize);
    }
    ++d_stackIdx__;
    d_stateStack__[d_stackIdx__] = d_state__ = state;
    *(d_vsp__ = &d_valueStack__[d_stackIdx__]) = d_val__;
}

void ParserBase::popToken__()
{
    d_token__ = d_nextToken__;

    d_val__ = d_nextVal__;
    d_nextVal__ = STYPE__();

    d_nextToken__ = _UNDETERMINED_;
}
     
void ParserBase::pushToken__(int token)
{
    d_nextToken__ = d_token__;
    d_nextVal__ = d_val__;
    d_token__ = token;
}
     
void ParserBase::pop__(size_t count)
{
    if (d_stackIdx__ < static_cast<int>(count))
    {
        ABORT();
    }

    d_stackIdx__ -= count;
    d_state__ = d_stateStack__[d_stackIdx__];
    d_vsp__ = &d_valueStack__[d_stackIdx__];
}

inline size_t ParserBase::top__() const
{
    return d_stateStack__[d_stackIdx__];
}

void Parser::executeAction(int production)
{
    if (d_token__ != _UNDETERMINED_)
        pushToken__(d_token__);     // save an already available token

                                    // save default non-nested block $$
    if (int size = s_productionInfo[production].d_size)
        d_val__ = d_vsp__[1 - size];

    switch (production)
    {
        // $insert actioncases
        
        case 7:
#line 59 "./parser.y"
        {d_val__.b = false;}
        break;

        case 8:
#line 59 "./parser.y"
        {d_val__.b=true;}
        break;

        case 9:
#line 60 "./parser.y"
        {d_val__.i = atoi(d_scanner->matched().c_str());}
        break;

        case 10:
#line 61 "./parser.y"
        {d_val__.i = d_vsp__[0].b? 1 : 0;}
        break;

        case 11:
#line 62 "./parser.y"
        {d_val__.d = atof(d_scanner->matched().c_str());}
        break;

        case 12:
#line 63 "./parser.y"
        {d_val__.d = static_cast<double>(d_vsp__[0].i);}
        break;

        case 13:
#line 64 "./parser.y"
        {d_val__.s = new std::string(d_scanner->matched().c_str());}
        break;

        case 14:
#line 66 "./parser.y"
        {parent->model.play_mode = (Model::play_mode_type)d_vsp__[-1].i;
         cout << "seen init" << parent->model.play_mode << endl;
         this->ACCEPT();}
        break;

        case 15:
#line 69 "./parser.y"
        {d_val__.i = Model::before_kick_off ;}
        break;

        case 16:
#line 70 "./parser.y"
        {d_val__.i = Model::play_on ;}
        break;

        case 17:
#line 71 "./parser.y"
        {d_val__.i = Model::time_over ;}
        break;

        case 18:
#line 72 "./parser.y"
        {d_val__.i = Model::kick_off_l ;}
        break;

        case 19:
#line 73 "./parser.y"
        {d_val__.i = Model::kick_off_r ;}
        break;

        case 20:
#line 74 "./parser.y"
        {d_val__.i = Model::kick_in_l ;}
        break;

        case 21:
#line 75 "./parser.y"
        {d_val__.i = Model::kick_in_r ;}
        break;

        case 22:
#line 76 "./parser.y"
        {d_val__.i = Model::free_kick_l ;}
        break;

        case 23:
#line 77 "./parser.y"
        {d_val__.i = Model::free_kick_r ;}
        break;

        case 24:
#line 78 "./parser.y"
        {d_val__.i = Model::corner_kick_l ;}
        break;

        case 25:
#line 79 "./parser.y"
        {d_val__.i = Model::corner_kick_r ;}
        break;

        case 26:
#line 80 "./parser.y"
        {d_val__.i = Model::goal_kick_l ;}
        break;

        case 27:
#line 81 "./parser.y"
        {d_val__.i = Model::goal_kick_r ;}
        break;

        case 28:
#line 82 "./parser.y"
        {d_val__.i = Model::goal_l ;}
        break;

        case 29:
#line 83 "./parser.y"
        {d_val__.i = Model::goal_r ;}
        break;

        case 30:
#line 84 "./parser.y"
        {d_val__.i = Model::drop_ball ;}
        break;

        case 31:
#line 85 "./parser.y"
        {d_val__.i = Model::offside_l ;}
        break;

        case 32:
#line 86 "./parser.y"
        {d_val__.i = Model::offside_r ;}
        break;

        case 33:
#line 98 "./parser.y"
        {cout << "seen server_param" << endl;
         this->ACCEPT();}
        break;

        case 34:
#line 113 "./parser.y"
        {parent->model.server.audio_cut_dist = d_vsp__[-1].d; }
        break;

        case 35:
#line 114 "./parser.y"
        {parent->model.server.auto_mode = d_vsp__[-1].b;}
        break;

        case 36:
#line 115 "./parser.y"
        {parent->model.server.back_dash_rate = d_vsp__[-1].d;}
        break;

        case 37:
#line 116 "./parser.y"
        {parent->model.server.back_passes = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 38:
#line 117 "./parser.y"
        {parent->model.server.ball_accel_max = d_vsp__[-1].d;}
        break;

        case 39:
#line 118 "./parser.y"
        {parent->model.server.ball_decay = d_vsp__[-1].d;}
        break;

        case 40:
#line 119 "./parser.y"
        {parent->model.server.ball_rand = d_vsp__[-1].d;}
        break;

        case 41:
#line 120 "./parser.y"
        {parent->model.server.ball_size = d_vsp__[-1].d;}
        break;

        case 42:
#line 121 "./parser.y"
        {parent->model.server.ball_speed_max = d_vsp__[-1].d;}
        break;

        case 43:
#line 122 "./parser.y"
        {parent->model.server.ball_stuck_area = d_vsp__[-1].d;}
        break;

        case 44:
#line 123 "./parser.y"
        {parent->model.server.ball_weight = d_vsp__[-1].d;}
        break;

        case 45:
#line 124 "./parser.y"
        {parent->model.server.catch_ban_cycle = d_vsp__[-1].i; }
        break;

        case 46:
#line 125 "./parser.y"
        {parent->model.server.catch_probability = d_vsp__[-1].d;}
        break;

        case 47:
#line 126 "./parser.y"
        {parent->model.server.catchable_area_l = d_vsp__[-1].d;}
        break;

        case 48:
#line 127 "./parser.y"
        {parent->model.server.catchable_area_w = d_vsp__[-1].d;}
        break;

        case 49:
#line 128 "./parser.y"
        {parent->model.server.ckick_margin = d_vsp__[-1].d;}
        break;

        case 50:
#line 129 "./parser.y"
        {parent->model.server.clang_advice_win = d_vsp__[-1].i;}
        break;

        case 51:
#line 130 "./parser.y"
        {parent->model.server.clang_define_win = d_vsp__[-1].i; }
        break;

        case 52:
#line 131 "./parser.y"
        {parent->model.server.clang_del_win = d_vsp__[-1].i; }
        break;

        case 53:
#line 132 "./parser.y"
        {parent->model.server.clang_info_win = d_vsp__[-1].i; }
        break;

        case 54:
#line 133 "./parser.y"
        {parent->model.server.clang_mess_delay = d_vsp__[-1].i; }
        break;

        case 55:
#line 134 "./parser.y"
        {parent->model.server.clang_mess_per_cycle = d_vsp__[-1].i; }
        break;

        case 56:
#line 135 "./parser.y"
        {parent->model.server.clang_meta_win = d_vsp__[-1].i; }
        break;

        case 57:
#line 136 "./parser.y"
        {parent->model.server.clang_rule_win = d_vsp__[-1].i; }
        break;

        case 58:
#line 137 "./parser.y"
        {parent->model.server.clang_win_size = d_vsp__[-1].i; }
        break;

        case 59:
#line 138 "./parser.y"
        {parent->model.server.coach = (d_vsp__[-1].d==0?false:true);}
        break;

        case 60:
#line 139 "./parser.y"
        {parent->model.server.coach_port = d_vsp__[-1].i; }
        break;

        case 61:
#line 140 "./parser.y"
        {parent->model.server.coach_w_referee = (d_vsp__[-1].d==0?false:true);}
        break;

        case 62:
#line 141 "./parser.y"
        {parent->model.server.connect_wait = d_vsp__[-1].i; }
        break;

        case 63:
#line 142 "./parser.y"
        {parent->model.server.control_radius = d_vsp__[-1].d;}
        break;

        case 64:
#line 143 "./parser.y"
        {parent->model.server.dash_angle_step = d_vsp__[-1].d;}
        break;

        case 65:
#line 144 "./parser.y"
        {parent->model.server.dash_power_rate = d_vsp__[-1].d;}
        break;

        case 66:
#line 145 "./parser.y"
        {currentType->dash_power_rate = (d_vsp__[-1].d);}
        break;

        case 67:
#line 146 "./parser.y"
        {parent->model.server.drop_ball_time = d_vsp__[-1].i; }
        break;

        case 68:
#line 147 "./parser.y"
        {parent->model.server.effort_dec = (d_vsp__[-1].d);}
        break;

        case 69:
#line 148 "./parser.y"
        {parent->model.server.effort_dec_thr = (d_vsp__[-1].d);}
        break;

        case 70:
#line 149 "./parser.y"
        {parent->model.server.effort_inc = (d_vsp__[-1].d);}
        break;

        case 71:
#line 150 "./parser.y"
        {parent->model.server.effort_inc_thr = (d_vsp__[-1].d);}
        break;

        case 72:
#line 151 "./parser.y"
        {parent->model.server.effort_init = (d_vsp__[-1].d);}
        break;

        case 73:
#line 152 "./parser.y"
        {parent->model.server.effort_min = (d_vsp__[-1].d);}
        break;

        case 74:
#line 153 "./parser.y"
        {currentType->effort_max = (d_vsp__[-1].d);}
        break;

        case 75:
#line 154 "./parser.y"
        {currentType->effort_min = (d_vsp__[-1].d);}
        break;

        case 76:
#line 155 "./parser.y"
        {parent->model.server.extra_half_time = d_vsp__[-1].i; }
        break;

        case 77:
#line 156 "./parser.y"
        {parent->model.server.extra_stamina = (d_vsp__[-1].d);}
        break;

        case 78:
#line 157 "./parser.y"
        {currentType->extra_stamina = (d_vsp__[-1].d);}
        break;

        case 79:
#line 158 "./parser.y"
        {parent->model.server.forbid_kick_off_offside = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 80:
#line 159 "./parser.y"
        {parent->model.server.foul_cycles = d_vsp__[-1].i; }
        break;

        case 81:
#line 160 "./parser.y"
        {parent->model.server.foul_detect_probability = d_vsp__[-1].d;}
        break;

        case 82:
#line 161 "./parser.y"
        {currentType->foul_detect_probability = d_vsp__[-1].d;}
        break;

        case 83:
#line 162 "./parser.y"
        {parent->model.server.foul_exponent = d_vsp__[-1].d;}
        break;

        case 84:
#line 163 "./parser.y"
        {parent->model.server.free_kick_faults = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 85:
#line 164 "./parser.y"
        {parent->model.server.freeform_send_period = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 86:
#line 165 "./parser.y"
        {parent->model.server.freeform_wait_period = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 87:
#line 166 "./parser.y"
        {parent->model.server.fullstate_l = d_vsp__[-1].i; }
        break;

        case 88:
#line 167 "./parser.y"
        {parent->model.server.fullstate_r = d_vsp__[-1].i; }
        break;

        case 89:
#line 168 "./parser.y"
        {parent->model.server.game_log_compression = d_vsp__[-1].i; }
        break;

        case 90:
#line 169 "./parser.y"
        {parent->model.server.game_log_dated = d_vsp__[-1].i; }
        break;

        case 91:
#line 170 "./parser.y"
        {parent->model.server.game_log_dir = *(d_vsp__[-1].s);}
        break;

        case 92:
#line 171 "./parser.y"
        {parent->model.server.game_log_fixed= static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 93:
#line 172 "./parser.y"
        {parent->model.server.game_log_fixed_name = *(d_vsp__[-1].s);}
        break;

        case 94:
#line 173 "./parser.y"
        {parent->model.server.game_log_version = d_vsp__[-1].i; }
        break;

        case 95:
#line 174 "./parser.y"
        {parent->model.server.game_logging = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 96:
#line 175 "./parser.y"
        {parent->model.server.game_over_wait = d_vsp__[-1].i; }
        break;

        case 97:
#line 176 "./parser.y"
        {parent->model.server.goal_width = (d_vsp__[-1].d);}
        break;

        case 98:
#line 177 "./parser.y"
        {parent->model.server.goalie_max_moves = d_vsp__[-1].i; }
        break;

        case 99:
#line 178 "./parser.y"
        {parent->model.server.golden_goal = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 100:
#line 179 "./parser.y"
        {parent->model.server.half_time = d_vsp__[-1].i; }
        break;

        case 101:
#line 180 "./parser.y"
        {parent->model.server.hear_decay = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 102:
#line 181 "./parser.y"
        {parent->model.server.hear_inc = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 103:
#line 182 "./parser.y"
        {parent->model.server.hear_max = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 104:
#line 183 "./parser.y"
        {parent->model.server.inertia_moment = (d_vsp__[-1].d);}
        break;

        case 105:
#line 184 "./parser.y"
        {currentType->inertia_moment = (d_vsp__[-1].d);}
        break;

        case 106:
#line 185 "./parser.y"
        {parent->model.server.keepaway = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 107:
#line 186 "./parser.y"
        {parent->model.server.keepaway_length = (d_vsp__[-1].d);}
        break;

        case 108:
#line 187 "./parser.y"
        {parent->model.server.keepaway_log_dated = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 109:
#line 188 "./parser.y"
        {parent->model.server.keepaway_log_dir = *(d_vsp__[-1].s);}
        break;

        case 110:
#line 189 "./parser.y"
        {parent->model.server.keepaway_log_fixed = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 111:
#line 190 "./parser.y"
        {parent->model.server.keepaway_log_fixed_name = *(d_vsp__[-1].s);}
        break;

        case 112:
#line 191 "./parser.y"
        {parent->model.server.keepaway_logging = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 113:
#line 192 "./parser.y"
        {parent->model.server.keepaway_start = d_vsp__[-1].i; }
        break;

        case 114:
#line 193 "./parser.y"
        {parent->model.server.keepaway_width = (d_vsp__[-1].d);}
        break;

        case 115:
#line 194 "./parser.y"
        {parent->model.server.kick_off_wait = d_vsp__[-1].i; }
        break;

        case 116:
#line 195 "./parser.y"
        {parent->model.server.kick_power_rate = (d_vsp__[-1].d);}
        break;

        case 117:
#line 196 "./parser.y"
        {currentType->kick_power_rate= (d_vsp__[-1].d);}
        break;

        case 118:
#line 197 "./parser.y"
        {parent->model.server.kick_rand = (d_vsp__[-1].d);}
        break;

        case 119:
#line 198 "./parser.y"
        {currentType->kick_rand = (d_vsp__[-1].d);}
        break;

        case 120:
#line 199 "./parser.y"
        {parent->model.server.kick_rand_factor_l = (d_vsp__[-1].d);}
        break;

        case 121:
#line 200 "./parser.y"
        {parent->model.server.kick_rand_factor_r = (d_vsp__[-1].d);}
        break;

        case 122:
#line 201 "./parser.y"
        {parent->model.server.kickable_margin = (d_vsp__[-1].d);}
        break;

        case 123:
#line 202 "./parser.y"
        {currentType->kickable_margin = (d_vsp__[-1].d);}
        break;

        case 124:
#line 203 "./parser.y"
        {parent->model.server.landmark_file = *(d_vsp__[-1].s);}
        break;

        case 125:
#line 204 "./parser.y"
        {parent->model.server.log_date_format = *(d_vsp__[-1].s);}
        break;

        case 126:
#line 205 "./parser.y"
        {parent->model.server.log_times = d_vsp__[-1].i; }
        break;

        case 127:
#line 206 "./parser.y"
        {parent->model.server.max_back_tackle_power = (d_vsp__[-1].d);}
        break;

        case 128:
#line 207 "./parser.y"
        {parent->model.server.max_dash_angle = (d_vsp__[-1].d);}
        break;

        case 129:
#line 208 "./parser.y"
        {parent->model.server.max_dash_power = (d_vsp__[-1].d);}
        break;

        case 130:
#line 209 "./parser.y"
        {parent->model.server.max_goal_kicks = d_vsp__[-1].i; }
        break;

        case 131:
#line 210 "./parser.y"
        {parent->model.server.max_tackle_power = (d_vsp__[-1].d);}
        break;

        case 132:
#line 211 "./parser.y"
        {parent->model.server.maxmoment = (d_vsp__[-1].d);}
        break;

        case 133:
#line 212 "./parser.y"
        {parent->model.server.maxneckang = (d_vsp__[-1].d);}
        break;

        case 134:
#line 213 "./parser.y"
        {parent->model.server.maxneckmoment = (d_vsp__[-1].d);}
        break;

        case 135:
#line 214 "./parser.y"
        {parent->model.server.maxpower = (d_vsp__[-1].d);}
        break;

        case 136:
#line 215 "./parser.y"
        {parent->model.server.min_dash_angle = (d_vsp__[-1].d);}
        break;

        case 137:
#line 216 "./parser.y"
        {parent->model.server.min_dash_power = (d_vsp__[-1].d);}
        break;

        case 138:
#line 217 "./parser.y"
        {parent->model.server.minmoment = (d_vsp__[-1].d);}
        break;

        case 139:
#line 218 "./parser.y"
        {parent->model.server.minneckang = (d_vsp__[-1].d);}
        break;

        case 140:
#line 219 "./parser.y"
        {parent->model.server.minneckmoment = (d_vsp__[-1].d);}
        break;

        case 141:
#line 220 "./parser.y"
        {parent->model.server.minpower = (d_vsp__[-1].d);}
        break;

        case 142:
#line 221 "./parser.y"
        {parent->model.server.nr_extra_halfs = d_vsp__[-1].i; }
        break;

        case 143:
#line 222 "./parser.y"
        {parent->model.server.nr_normal_halfs = d_vsp__[-1].i; }
        break;

        case 144:
#line 223 "./parser.y"
        {parent->model.server.offside_active_area_size = (d_vsp__[-1].d);}
        break;

        case 145:
#line 224 "./parser.y"
        {parent->model.server.offside_kick_margin = (d_vsp__[-1].d);}
        break;

        case 146:
#line 225 "./parser.y"
        {parent->model.server.olcoach_port = d_vsp__[-1].i; }
        break;

        case 147:
#line 226 "./parser.y"
        {parent->model.server.old_coach_hear = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 148:
#line 227 "./parser.y"
        {parent->model.server.pen_allow_mult_kicks = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 149:
#line 228 "./parser.y"
        {parent->model.server.pen_before_setup_wait = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 150:
#line 229 "./parser.y"
        {parent->model.server.pen_coach_moves_players = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 151:
#line 230 "./parser.y"
        {parent->model.server.pen_dist_x = (d_vsp__[-1].d);}
        break;

        case 152:
#line 231 "./parser.y"
        {parent->model.server.pen_max_extra_kicks = d_vsp__[-1].i; }
        break;

        case 153:
#line 232 "./parser.y"
        {parent->model.server.pen_max_goalie_dist_x = d_vsp__[-1].i; }
        break;

        case 154:
#line 233 "./parser.y"
        {parent->model.server.pen_nr_kicks = d_vsp__[-1].i; }
        break;

        case 155:
#line 234 "./parser.y"
        {parent->model.server.pen_random_winner = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 156:
#line 235 "./parser.y"
        {parent->model.server.pen_ready_wait = d_vsp__[-1].i; }
        break;

        case 157:
#line 236 "./parser.y"
        {parent->model.server.pen_setup_wait = d_vsp__[-1].i; }
        break;

        case 158:
#line 237 "./parser.y"
        {parent->model.server.pen_taken_wait = d_vsp__[-1].i; }
        break;

        case 159:
#line 238 "./parser.y"
        {parent->model.server.penalty_shoot_outs = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 160:
#line 239 "./parser.y"
        {parent->model.server.player_accel_max = (d_vsp__[-1].d);}
        break;

        case 161:
#line 240 "./parser.y"
        {parent->model.server.player_decay = (d_vsp__[-1].d);}
        break;

        case 162:
#line 241 "./parser.y"
        {currentType->player_decay= (d_vsp__[-1].d);}
        break;

        case 163:
#line 242 "./parser.y"
        {parent->model.server.player_rand = (d_vsp__[-1].d);}
        break;

        case 164:
#line 243 "./parser.y"
        {parent->model.server.player_size = (d_vsp__[-1].d);}
        break;

        case 165:
#line 244 "./parser.y"
        {currentType->player_size = (d_vsp__[-1].d);}
        break;

        case 166:
#line 245 "./parser.y"
        {parent->model.server.player_speed_max = (d_vsp__[-1].d);}
        break;

        case 167:
#line 246 "./parser.y"
        {currentType->player_speed_max = (d_vsp__[-1].d);}
        break;

        case 168:
#line 247 "./parser.y"
        {parent->model.server.player_speed_max_min = (d_vsp__[-1].d);}
        break;

        case 169:
#line 248 "./parser.y"
        {parent->model.server.player_weight = (d_vsp__[-1].d);}
        break;

        case 170:
#line 249 "./parser.y"
        {parent->model.server.point_to_ban = d_vsp__[-1].i; }
        break;

        case 171:
#line 250 "./parser.y"
        {parent->model.server.point_to_duration = d_vsp__[-1].i; }
        break;

        case 172:
#line 251 "./parser.y"
        {parent->model.server.port = d_vsp__[-1].i; }
        break;

        case 173:
#line 252 "./parser.y"
        {parent->model.server.prand_factor_l = (d_vsp__[-1].d);}
        break;

        case 174:
#line 253 "./parser.y"
        {parent->model.server.prand_factor_r = (d_vsp__[-1].d);}
        break;

        case 175:
#line 254 "./parser.y"
        {parent->model.server.profile = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 176:
#line 255 "./parser.y"
        {parent->model.server.proper_goal_kicks = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 177:
#line 256 "./parser.y"
        {parent->model.server.quantize_step = (d_vsp__[-1].d);}
        break;

        case 178:
#line 257 "./parser.y"
        {parent->model.server.quantize_step_l = (d_vsp__[-1].d);}
        break;

        case 179:
#line 258 "./parser.y"
        {parent->model.server.record_messages = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 180:
#line 259 "./parser.y"
        {parent->model.server.recover_dec = (d_vsp__[-1].d);}
        break;

        case 181:
#line 260 "./parser.y"
        {parent->model.server.recover_dec_thr = (d_vsp__[-1].d);}
        break;

        case 182:
#line 261 "./parser.y"
        {parent->model.server.recover_init = (d_vsp__[-1].d);}
        break;

        case 183:
#line 262 "./parser.y"
        {parent->model.server.recover_min = (d_vsp__[-1].d);}
        break;

        case 184:
#line 263 "./parser.y"
        {parent->model.server.recv_step = d_vsp__[-1].i; }
        break;

        case 185:
#line 264 "./parser.y"
        {parent->model.server.red_card_probability = (d_vsp__[-1].d);}
        break;

        case 186:
#line 265 "./parser.y"
        {parent->model.server.say_coach_cnt_max = d_vsp__[-1].i; }
        break;

        case 187:
#line 266 "./parser.y"
        {parent->model.server.say_coach_msg_size = d_vsp__[-1].i; }
        break;

        case 188:
#line 267 "./parser.y"
        {parent->model.server.say_msg_size = d_vsp__[-1].i; }
        break;

        case 189:
#line 268 "./parser.y"
        {parent->model.server.send_comms = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 190:
#line 269 "./parser.y"
        {parent->model.server.send_step = d_vsp__[-1].i; }
        break;

        case 191:
#line 270 "./parser.y"
        {parent->model.server.send_vi_step = d_vsp__[-1].i; }
        break;

        case 192:
#line 271 "./parser.y"
        {parent->model.server.sense_body_step = d_vsp__[-1].i; }
        break;

        case 193:
#line 272 "./parser.y"
        {parent->model.server.side_dash_rate = (d_vsp__[-1].d);}
        break;

        case 194:
#line 273 "./parser.y"
        {parent->model.server.simulator_step = d_vsp__[-1].i; }
        break;

        case 195:
#line 274 "./parser.y"
        {parent->model.server.slow_down_factor = d_vsp__[-1].i; }
        break;

        case 196:
#line 275 "./parser.y"
        {parent->model.server.slowness_on_top_for_left_team = (d_vsp__[-1].d);}
        break;

        case 197:
#line 276 "./parser.y"
        {parent->model.server.slowness_on_top_for_right_team = (d_vsp__[-1].d);}
        break;

        case 198:
#line 277 "./parser.y"
        {parent->model.server.stamina_capacity = (d_vsp__[-1].d);}
        break;

        case 199:
#line 278 "./parser.y"
        {parent->model.server.stamina_inc_max = (d_vsp__[-1].d);}
        break;

        case 200:
#line 279 "./parser.y"
        {currentType->stamina_inc_max = (d_vsp__[-1].d);}
        break;

        case 201:
#line 280 "./parser.y"
        {parent->model.server.stamina_max = (d_vsp__[-1].d);}
        break;

        case 202:
#line 281 "./parser.y"
        {parent->model.server.start_goal_l = d_vsp__[-1].i; }
        break;

        case 203:
#line 282 "./parser.y"
        {parent->model.server.start_goal_r = d_vsp__[-1].i; }
        break;

        case 204:
#line 283 "./parser.y"
        {parent->model.server.stopped_ball_vel = (d_vsp__[-1].d);}
        break;

        case 205:
#line 284 "./parser.y"
        {parent->model.server.synch_micro_sleep = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 206:
#line 285 "./parser.y"
        {parent->model.server.synch_mode = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 207:
#line 286 "./parser.y"
        {parent->model.server.synch_offset = d_vsp__[-1].i; }
        break;

        case 208:
#line 287 "./parser.y"
        {parent->model.server.synch_see_offset = d_vsp__[-1].i; }
        break;

        case 209:
#line 288 "./parser.y"
        {parent->model.server.tackle_back_dist = (d_vsp__[-1].d);}
        break;

        case 210:
#line 289 "./parser.y"
        {parent->model.server.tackle_cycles = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 211:
#line 290 "./parser.y"
        {parent->model.server.tackle_dist = (d_vsp__[-1].d);}
        break;

        case 212:
#line 291 "./parser.y"
        {parent->model.server.tackle_exponent = (d_vsp__[-1].d);}
        break;

        case 213:
#line 292 "./parser.y"
        {parent->model.server.tackle_power_rate = (d_vsp__[-1].d);}
        break;

        case 214:
#line 293 "./parser.y"
        {parent->model.server.tackle_rand_factor = (d_vsp__[-1].d);}
        break;

        case 215:
#line 294 "./parser.y"
        {parent->model.server.tackle_width = (d_vsp__[-1].d);}
        break;

        case 216:
#line 295 "./parser.y"
        {parent->model.server.team_actuator_noise = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 217:
#line 296 "./parser.y"
        {parent->model.server.team_l_start = *(d_vsp__[-1].s);}
        break;

        case 218:
#line 297 "./parser.y"
        {parent->model.server.team_r_start = *(d_vsp__[-1].s);}
        break;

        case 219:
#line 298 "./parser.y"
        {parent->model.server.text_log_compression = d_vsp__[-1].i; }
        break;

        case 220:
#line 299 "./parser.y"
        {parent->model.server.text_log_dated = d_vsp__[-1].i; }
        break;

        case 221:
#line 300 "./parser.y"
        {parent->model.server.text_log_dir = *(d_vsp__[-1].s);}
        break;

        case 222:
#line 301 "./parser.y"
        {parent->model.server.text_log_fixed = d_vsp__[-1].i; }
        break;

        case 223:
#line 302 "./parser.y"
        {parent->model.server.text_log_fixed_name = *(d_vsp__[-1].s);}
        break;

        case 224:
#line 303 "./parser.y"
        {parent->model.server.text_logging = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 225:
#line 304 "./parser.y"
        {parent->model.server.use_offside = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 226:
#line 305 "./parser.y"
        {parent->model.server.verbose = d_vsp__[-1].b;}
        break;

        case 227:
#line 306 "./parser.y"
        {parent->model.server.visible_angle = (d_vsp__[-1].d);}
        break;

        case 228:
#line 307 "./parser.y"
        {parent->model.server.visible_distance = (d_vsp__[-1].d);}
        break;

        case 229:
#line 308 "./parser.y"
        {parent->model.server.wind_ang = (d_vsp__[-1].d);}
        break;

        case 230:
#line 309 "./parser.y"
        {parent->model.server.wind_dir = (d_vsp__[-1].d);}
        break;

        case 231:
#line 310 "./parser.y"
        {parent->model.server.wind_force = (d_vsp__[-1].d);}
        break;

        case 232:
#line 311 "./parser.y"
        {parent->model.server.wind_none = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 233:
#line 312 "./parser.y"
        {parent->model.server.wind_rand = (d_vsp__[-1].d);}
        break;

        case 234:
#line 313 "./parser.y"
        {parent->model.server.wind_random = (d_vsp__[-1].d);}
        break;

        case 235:
#line 317 "./parser.y"
        {cout << "seen player_param" << endl; this->ACCEPT();}
        break;

        case 236:
#line 320 "./parser.y"
        {cout << "seen player_type " << currentType->id << endl; this->ACCEPT();}
        break;

        case 237:
#line 322 "./parser.y"
        {parent->model.player.allow_mult_default_type = (d_vsp__[-1].d);}
        break;

        case 238:
#line 323 "./parser.y"
        {parent->model.player.catchable_area_l_stretch_max = (d_vsp__[-1].d);}
        break;

        case 239:
#line 324 "./parser.y"
        {currentType->catchable_area_l_stretch = (d_vsp__[-1].d);}
        break;

        case 240:
#line 325 "./parser.y"
        {parent->model.player.catchable_area_l_stretch_min = (d_vsp__[-1].d);}
        break;

        case 241:
#line 326 "./parser.y"
        {parent->model.player.dash_power_rate_delta_max = (d_vsp__[-1].d);}
        break;

        case 242:
#line 327 "./parser.y"
        {parent->model.player.dash_power_rate_delta_min = (d_vsp__[-1].d);}
        break;

        case 243:
#line 328 "./parser.y"
        {parent->model.player.effort_max_delta_factor = (d_vsp__[-1].d);}
        break;

        case 244:
#line 329 "./parser.y"
        {parent->model.player.effort_min_delta_factor = (d_vsp__[-1].d);}
        break;

        case 245:
#line 330 "./parser.y"
        {parent->model.player.extra_stamina_delta_max = (d_vsp__[-1].d);}
        break;

        case 246:
#line 331 "./parser.y"
        {parent->model.player.extra_stamina_delta_min = (d_vsp__[-1].d);}
        break;

        case 247:
#line 332 "./parser.y"
        {parent->model.player.foul_detect_probability_delta_factor = (d_vsp__[-1].d);}
        break;

        case 248:
#line 333 "./parser.y"
        {parent->model.player.inertia_moment_delta_factor = (d_vsp__[-1].d);}
        break;

        case 249:
#line 334 "./parser.y"
        {parent->model.player.kick_power_rate_delta_max = (d_vsp__[-1].d);}
        break;

        case 250:
#line 335 "./parser.y"
        {parent->model.player.kick_power_rate_delta_min = (d_vsp__[-1].d);}
        break;

        case 251:
#line 336 "./parser.y"
        {parent->model.player.kick_rand_delta_factor = (d_vsp__[-1].d);}
        break;

        case 252:
#line 337 "./parser.y"
        {parent->model.player.kickable_margin_delta_max = (d_vsp__[-1].d);}
        break;

        case 253:
#line 338 "./parser.y"
        {parent->model.player.kickable_margin_delta_min = (d_vsp__[-1].d);}
        break;

        case 254:
#line 339 "./parser.y"
        {parent->model.player.new_dash_power_rate_delta_max = (d_vsp__[-1].d);}
        break;

        case 255:
#line 340 "./parser.y"
        {parent->model.player.new_dash_power_rate_delta_min = (d_vsp__[-1].d);}
        break;

        case 256:
#line 341 "./parser.y"
        {parent->model.player.new_stamina_inc_max_delta_factor = (d_vsp__[-1].d);}
        break;

        case 257:
#line 342 "./parser.y"
        {parent->model.player.player_decay_delta_max = (d_vsp__[-1].d);}
        break;

        case 258:
#line 343 "./parser.y"
        {parent->model.player.player_decay_delta_min = (d_vsp__[-1].d);}
        break;

        case 259:
#line 344 "./parser.y"
        {parent->model.player.player_size_delta_factor = (d_vsp__[-1].d);}
        break;

        case 260:
#line 345 "./parser.y"
        {parent->model.player.player_speed_max_delta_max = (d_vsp__[-1].d);}
        break;

        case 261:
#line 346 "./parser.y"
        {parent->model.player.player_speed_max_delta_min = (d_vsp__[-1].d);}
        break;

        case 262:
#line 347 "./parser.y"
        {parent->model.player.player_types = d_vsp__[-1].i; }
        break;

        case 263:
#line 348 "./parser.y"
        {parent->model.player.pt_max = d_vsp__[-1].i; }
        break;

        case 264:
#line 349 "./parser.y"
        {parent->model.player.random_seed = d_vsp__[-1].i; }
        break;

        case 265:
#line 350 "./parser.y"
        {parent->model.player.stamina_inc_max_delta_factor = (d_vsp__[-1].d);}
        break;

        case 266:
#line 351 "./parser.y"
        {parent->model.player.subs_max = d_vsp__[-1].i; }
        break;

        case 267:
#line 353 "./parser.y"
        {
         t_player_type x;
         parent->model.player_types.push_back(x);
         currentType = parent->model.player_types.rbegin();
         currentType->id = d_vsp__[-1].i;
        }
        break;

        case 268:
#line 361 "./parser.y"
        {cout << "sense_body" << endl;}
        break;

        case 269:
#line 362 "./parser.y"
        {}
        break;

        case 270:
#line 363 "./parser.y"
        {parent->model.body.view_mode.quality = t_view_mode::high;}
        break;

        case 271:
#line 364 "./parser.y"
        {parent->model.body.view_mode.quality = t_view_mode::low;}
        break;

        case 272:
#line 365 "./parser.y"
        {parent->model.body.view_mode.width = t_view_mode::normal_w;}
        break;

        case 273:
#line 366 "./parser.y"
        {parent->model.body.view_mode.width = t_view_mode::narrow;}
        break;

        case 274:
#line 367 "./parser.y"
        {parent->model.body.view_mode.width = t_view_mode::wide;}
        break;

        case 275:
#line 369 "./parser.y"
        {
         parent->model.body.stamina.stamina = d_vsp__[-3].d;
         parent->model.body.stamina.effort = d_vsp__[-2].d;
         parent->model.body.stamina.capacity = d_vsp__[-1].d;
         }
        break;

        case 276:
#line 374 "./parser.y"
        {parent->model.body.speed.x = d_vsp__[-2].d; parent->model.body.speed.y = d_vsp__[-1].d;}
        break;

        case 277:
#line 375 "./parser.y"
        {parent->model.body.head_angle = d_vsp__[-1].i;}
        break;

        case 278:
#line 376 "./parser.y"
        {parent->model.body.kick = d_vsp__[-1].i;}
        break;

        case 279:
#line 377 "./parser.y"
        {parent->model.body.dash = d_vsp__[-1].i;}
        break;

        case 280:
#line 378 "./parser.y"
        {parent->model.body.turn = d_vsp__[-1].i;}
        break;

        case 281:
#line 379 "./parser.y"
        {parent->model.body.say = d_vsp__[-1].i;}
        break;

        case 282:
#line 380 "./parser.y"
        {parent->model.body.turn_neck = d_vsp__[-1].i;}
        break;

        case 283:
#line 381 "./parser.y"
        {parent->model.body.catch_ = d_vsp__[-1].i;}
        break;

        case 284:
#line 382 "./parser.y"
        {parent->model.body.move = d_vsp__[-1].i;}
        break;

        case 285:
#line 383 "./parser.y"
        {parent->model.body.change_view = d_vsp__[-1].i;}
        break;

        case 287:
#line 386 "./parser.y"
        {parent->model.body.arm.movable = d_vsp__[-1].i;}
        break;

        case 288:
#line 387 "./parser.y"
        {parent->model.body.arm.expires = d_vsp__[-1].i;}
        break;

        case 289:
#line 388 "./parser.y"
        {parent->model.body.arm.target = Point(d_vsp__[-2].d,d_vsp__[-1].d);}
        break;

        case 290:
#line 389 "./parser.y"
        {parent->model.body.arm.count = d_vsp__[-1].i;}
        break;

        case 292:
#line 392 "./parser.y"
        {parent->model.body.focus.type = static_cast<t_focus::focus_type>(d_vsp__[-1].i);}
        break;

        case 293:
#line 393 "./parser.y"
        {}
        break;

        case 294:
#line 394 "./parser.y"
        {d_val__.i = t_focus::l;}
        break;

        case 295:
#line 395 "./parser.y"
        {d_val__.i = t_focus::r;}
        break;

        case 296:
#line 396 "./parser.y"
        {d_val__.i = t_focus::none;}
        break;

        case 298:
#line 399 "./parser.y"
        {parent->model.body.tackle.expires = d_vsp__[-1].i;}
        break;

        case 299:
#line 400 "./parser.y"
        {parent->model.body.tackle.count = d_vsp__[-1].i;}
        break;

        case 300:
#line 402 "./parser.y"
        {parent->model.body.collition.type = static_cast<t_collition::collition_type>(d_vsp__[-1].i);}
        break;

        case 301:
#line 403 "./parser.y"
        {d_val__.i = t_collition::none;}
        break;

        case 302:
#line 404 "./parser.y"
        {d_val__.i = t_collition::ball;}
        break;

        case 303:
#line 405 "./parser.y"
        {d_val__.i = t_collition::player;}
        break;

        case 304:
#line 406 "./parser.y"
        {d_val__.i = t_collition::post;}
        break;

        case 306:
#line 409 "./parser.y"
        {parent->model.body.foul.charged = d_vsp__[-1].i;}
        break;

        case 307:
#line 410 "./parser.y"
        {parent->model.body.foul.card = static_cast<t_foul::card_type>(d_vsp__[-1].i);}
        break;

        case 308:
#line 411 "./parser.y"
        {d_val__.i = t_foul::none;}
        break;

        case 309:
#line 412 "./parser.y"
        {d_val__.i = t_foul::yellow;}
        break;

        case 310:
#line 414 "./parser.y"
        {cout << "seen see" << endl;}
        break;

        case 311:
#line 415 "./parser.y"
        {}
        break;

        case 312:
#line 416 "./parser.y"
        {}
        break;

        case 317:
#line 422 "./parser.y"
        {}
        break;

        case 318:
#line 423 "./parser.y"
        {}
        break;

        case 319:
#line 424 "./parser.y"
        {}
        break;

        case 320:
#line 425 "./parser.y"
        {}
        break;

        case 321:
#line 426 "./parser.y"
        {}
        break;

        case 322:
#line 427 "./parser.y"
        {}
        break;

        case 323:
#line 428 "./parser.y"
        {}
        break;

        case 324:
#line 429 "./parser.y"
        {}
        break;

        case 325:
#line 430 "./parser.y"
        {}
        break;

        case 326:
#line 431 "./parser.y"
        {}
        break;

        case 328:
#line 433 "./parser.y"
        {}
        break;

        case 329:
#line 434 "./parser.y"
        {}
        break;

        case 342:
#line 447 "./parser.y"
        {d_val__.i=0;}
        break;

        case 343:
#line 447 "./parser.y"
        {d_val__.i=1;}
        break;

    }
}

inline void ParserBase::reduce__(PI__ const &pi)
{
    d_token__ = pi.d_nonTerm;
    pop__(pi.d_size);

}

// If d_token__ is _UNDETERMINED_ then if d_nextToken__ is _UNDETERMINED_ another
// token is obtained from lex(). Then d_nextToken__ is assigned to d_token__.
void Parser::nextToken()
{
    if (d_token__ != _UNDETERMINED_)        // no need for a token: got one
        return;                             // already

    if (d_nextToken__ != _UNDETERMINED_)
    {
        popToken__();                       // consume pending token
    }
    else
    {
        ++d_acceptedTokens__;               // accept another token (see
                                            // errorRecover())
        d_token__ = lex();
        if (d_token__ <= 0)
            d_token__ = _EOF_;
    }
    print();
}

// if the final transition is negative, then we should reduce by the rule
// given by its positive value. Note that the `recovery' parameter is only
// used with the --debug option
int Parser::lookup(bool recovery)
{
    // $insert threading
    SR__ *sr = s_state[d_state__];        // get the appropriate state-table
    int lastIdx = sr->d_lastIdx;        // sentinel-index in the SR__ array

    SR__ *lastElementPtr = sr + lastIdx;
    SR__ *elementPtr = sr + 1;            // start the search at s_xx[1]

    lastElementPtr->d_token = d_token__;// set search-token

    while (elementPtr->d_token != d_token__)
        ++elementPtr;

    if (elementPtr == lastElementPtr)   // reached the last element
    {
        if (elementPtr->d_action < 0)   // default reduction
        {
            return elementPtr->d_action;                
        }

        // No default reduction, so token not found, so error.
        throw UNEXPECTED_TOKEN__;
    }

    // not at the last element: inspect the nature of the action
    // (< 0: reduce, 0: ACCEPT, > 0: shift)

    int action = elementPtr->d_action;


    return action;
}

    // When an error has occurred, pop elements off the stack until the top
    // state has an error-item. If none is found, the default recovery
    // mode (which is to abort) is activated. 
    //
    // If EOF is encountered without being appropriate for the current state,
    // then the error recovery will fall back to the default recovery mode.
    // (i.e., parsing terminates)
void Parser::errorRecovery()
try
{
    if (d_acceptedTokens__ >= d_requiredTokens__)// only generate an error-
    {                                           // message if enough tokens 
        ++d_nErrors__;                          // were accepted. Otherwise
        error("Syntax error");                  // simply skip input

    }


    // get the error state
    while (not (s_state[top__()][0].d_type & ERR_ITEM))
    {
        pop__();
    }

    // In the error state, lookup a token allowing us to proceed.
    // Continuation may be possible following multiple reductions,
    // but eventuall a shift will be used, requiring the retrieval of
    // a terminal token. If a retrieved token doesn't match, the catch below 
    // will ensure the next token is requested in the while(true) block
    // implemented below:

    int lastToken = d_token__;                  // give the unexpected token a
                                                // chance to be processed
                                                // again.

    pushToken__(_error_);                       // specify _error_ as next token
    push__(lookup(true));                       // push the error state

    d_token__ = lastToken;                      // reactivate the unexpected
                                                // token (we're now in an
                                                // ERROR state).

    bool gotToken = true;                       // the next token is a terminal

    while (true)
    {
        try
        {
            if (s_state[d_state__]->d_type & REQ_TOKEN)
            {
                gotToken = d_token__ == _UNDETERMINED_;
                nextToken();                    // obtain next token
            }
            
            int action = lookup(true);

            if (action > 0)                 // push a new state
            {
                push__(action);
                popToken__();

                if (gotToken)
                {

                    d_acceptedTokens__ = 0;
                    return;
                }
            }
            else if (action < 0)
            {
                // no actions executed on recovery but save an already 
                // available token:
                if (d_token__ != _UNDETERMINED_)
                    pushToken__(d_token__);
 
                                            // next token is the rule's LHS
                reduce__(s_productionInfo[-action]); 
            }
            else
                ABORT();                    // abort when accepting during
                                            // error recovery
        }
        catch (...)
        {
            if (d_token__ == _EOF_)
                ABORT();                    // saw inappropriate _EOF_
                      
            popToken__();                   // failing token now skipped
        }
    }
}
catch (ErrorRecovery__)       // This is: DEFAULT_RECOVERY_MODE
{
    ABORT();
}

    // The parsing algorithm:
    // Initially, state 0 is pushed on the stack, and d_token__ as well as
    // d_nextToken__ are initialized to _UNDETERMINED_. 
    //
    // Then, in an eternal loop:
    //
    //  1. If a state does not have REQ_TOKEN no token is assigned to
    //     d_token__. If the state has REQ_TOKEN, nextToken() is called to
    //      determine d_nextToken__ and d_token__ is set to
    //     d_nextToken__. nextToken() will not call lex() unless d_nextToken__ is 
    //     _UNDETERMINED_. 
    //
    //  2. lookup() is called: 
    //     d_token__ is stored in the final element's d_token field of the
    //     state's SR_ array. 
    //
    //  3. The current token is looked up in the state's SR_ array
    //
    //  4. Depending on the result of the lookup() function the next state is
    //     shifted on the parser's stack, a reduction by some rule is applied,
    //     or the parsing function returns ACCEPT(). When a reduction is
    //     called for, any action that may have been defined for that
    //     reduction is executed.
    //
    //  5. An error occurs if d_token__ is not found, and the state has no
    //     default reduction. Error handling was described at the top of this
    //     file.

int Parser::parse()
try 
{
    push__(0);                              // initial state
    clearin();                              // clear the tokens.

    while (true)
    {
        try
        {
            if (s_state[d_state__]->d_type & REQ_TOKEN)
                nextToken();                // obtain next token


            int action = lookup(false);     // lookup d_token__ in d_state__

            if (action > 0)                 // SHIFT: push a new state
            {
                push__(action);
                popToken__();               // token processed
            }
            else if (action < 0)            // REDUCE: execute and pop.
            {
                executeAction(-action);
                                            // next token is the rule's LHS
                reduce__(s_productionInfo[-action]); 
            }
            else 
                ACCEPT();
        }
        catch (ErrorRecovery__)
        {
            errorRecovery();
        }
    }
}
catch (Return__ retValue)
{
    return retValue;
}




