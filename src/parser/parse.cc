// Generated by Bisonc++ V4.01.00 on Fri, 03 Aug 2012 16:20:26 +0430

// $insert class.ih
#include "Parser.ih"

// The FIRST element of SR arrays shown below uses `d_type', defining the
// state's type, and `d_lastIdx' containing the last element's index. If
// d_lastIdx contains the REQ_TOKEN bitflag (see below) then the state needs
// a token: if in this state d_token__ is _UNDETERMINED_, nextToken() will be
// called

// The LAST element of SR arrays uses `d_token' containing the last retrieved
// token to speed up the (linear) seach.  Except for the first element of SR
// arrays, the field `d_action' is used to determine what to do next. If
// positive, it represents the next state (used with SHIFT); if zero, it
// indicates `ACCEPT', if negative, -d_action represents the number of the
// rule to reduce to.

// `lookup()' tries to find d_token__ in the current SR array. If it fails, and
// there is no default reduction UNEXPECTED_TOKEN__ is thrown, which is then
// caught by the error-recovery function.

// The error-recovery function will pop elements off the stack until a state
// having bit flag ERR_ITEM is found. This state has a transition on _error_
// which is applied. In this _error_ state, while the current token is not a
// proper continuation, new tokens are obtained by nextToken(). If such a
// token is found, error recovery is successful and the token is
// handled according to the error state's SR table and parsing continues.
// During error recovery semantic actions are ignored.

// A state flagged with the DEF_RED flag will perform a default
// reduction if no other continuations are available for the current token.

// The ACCEPT STATE never shows a default reduction: when it is reached the
// parser returns ACCEPT(). During the grammar
// analysis phase a default reduction may have been defined, but it is
// removed during the state-definition phase.

// So:
//      s_x[] = 
//      {
//                  [_field_1_]         [_field_2_]
//
// First element:   {state-type,        idx of last element},
// Other elements:  {required token,    action to perform},
//                                      ( < 0: reduce, 
//                                          0: ACCEPT,
//                                        > 0: next state)
// Last element:    {set to d_token__,    action to perform}
//      }

// When the --thread-safe option is specified, all static data are defined as
// const. If --thread-safe is not provided, the state-tables are not defined
// as const, since the lookup() function below will modify them


namespace // anonymous
{
    char const author[] = "Frank B. Brokken (f.b.brokken@rug.nl)";

    enum 
    {
        STACK_EXPANSION = 5     // size to expand the state-stack with when
                                // full
    };

    enum ReservedTokens
    {
        PARSE_ACCEPT     = 0,   // `ACCEPT' TRANSITION
        _UNDETERMINED_   = -2,
        _EOF_            = -1,
        _error_          = 256
    };
    enum StateType       // modify statetype/data.cc when this enum changes
    {
        NORMAL,
        ERR_ITEM,
        REQ_TOKEN,
        ERR_REQ,    // ERR_ITEM | REQ_TOKEN
        DEF_RED,    // state having default reduction
        ERR_DEF,    // ERR_ITEM | DEF_RED
        REQ_DEF,    // REQ_TOKEN | DEF_RED
        ERR_REQ_DEF // ERR_ITEM | REQ_TOKEN | DEF_RED
    };    
    struct PI__     // Production Info
    {
        size_t d_nonTerm; // identification number of this production's
                            // non-terminal 
        size_t d_size;    // number of elements in this production 
    };

    struct SR__     // Shift Reduce info, see its description above
    {
        union
        {
            int _field_1_;      // initializer, allowing initializations 
                                // of the SR s_[] arrays
            int d_type;
            int d_token;
        };
        union
        {
            int _field_2_;

            int d_lastIdx;          // if negative, the state uses SHIFT
            int d_action;           // may be negative (reduce), 
                                    // postive (shift), or 0 (accept)
            size_t d_errorState;    // used with Error states
        };
    };

    // $insert staticdata
    
// Productions Info Records:
PI__ const s_productionInfo[] = 
{
     {0, 0}, // not used: reduction values are negative
     {504, 1}, // 1: start ->  init
     {504, 1}, // 2: start ->  server_param
     {504, 1}, // 3: start ->  player_param
     {504, 1}, // 4: start ->  player_type
     {509, 1}, // 5: double (DOUBLE) ->  DOUBLE
     {510, 1}, // 6: string (STRING) ->  STRING
     {505, 6}, // 7: init (LP) ->  LP INIT SIDE double play_mode RP
     {511, 1}, // 8: play_mode (PM_BKO) ->  PM_BKO
     {511, 1}, // 9: play_mode (PM_PO) ->  PM_PO
     {511, 1}, // 10: play_mode (PM_TO) ->  PM_TO
     {511, 1}, // 11: play_mode (PM_KOL) ->  PM_KOL
     {511, 1}, // 12: play_mode (PM_KOR) ->  PM_KOR
     {511, 1}, // 13: play_mode (PM_KIL) ->  PM_KIL
     {511, 1}, // 14: play_mode (PM_KIR) ->  PM_KIR
     {511, 1}, // 15: play_mode (PM_FKL) ->  PM_FKL
     {511, 1}, // 16: play_mode (PM_FKR) ->  PM_FKR
     {511, 1}, // 17: play_mode (PM_CKL) ->  PM_CKL
     {511, 1}, // 18: play_mode (PM_CKR) ->  PM_CKR
     {511, 1}, // 19: play_mode (PM_GKL) ->  PM_GKL
     {511, 1}, // 20: play_mode (PM_GKR) ->  PM_GKR
     {511, 1}, // 21: play_mode (PM_GOALL) ->  PM_GOALL
     {511, 1}, // 22: play_mode (PM_GOALR) ->  PM_GOALR
     {511, 1}, // 23: play_mode (PM_DB) ->  PM_DB
     {511, 1}, // 24: play_mode (PM_OL) ->  PM_OL
     {511, 1}, // 25: play_mode (PM_OR) ->  PM_OR
     {506, 191}, // 26: server_param (LP) ->  LP SERVER acd am bdr bp bam bd br bs bsm bsa bw cbc cp cal caw cm cadw cdefw cdelw ciw cmd cmpc cmw crw cws co cop cwr cw cr das dpr dbt ed edt ein eit ei em eht es fko fc fdp fe fkf fsp fwp fl fr glc gld gldir glf glfn glv gl gow gw gmm gg ht hd hi hm im k kl kld kldir lkf klfn klg ks kw kow kpr kr krfl krfr km lf ldf lt mbtp maxda mdp mgk mtp maxm maxna maxnm maxp minda mindp minm minna minnm minp neh nnh oaas okm op och pamk pbsw pcmp pdx pmet pmgdx pnk prw prwa psw ptw pso pam pd pr ps psm psmm pw ptb ptd p pfl pfr prof pgk qs qsl rm rd rdt ri rmin rs rcp sccm scms sms sm ss svs sbs sdr sims sdf sotflt sotfrt sc sim smax sgl sgr sbv smics smod so sso tbd tc td te tpr trf tw tan tls trs tlc tld tldir tlf tlfn tl uo v va vd wa wd wf wn wr wra RP
     {512, 4}, // 27: acd (LP) ->  LP ACD double RP
     {513, 4}, // 28: am (LP) ->  LP AM double RP
     {514, 4}, // 29: bdr (LP) ->  LP BDR double RP
     {515, 4}, // 30: bp (LP) ->  LP BP double RP
     {516, 4}, // 31: bam (LP) ->  LP BAM double RP
     {517, 4}, // 32: bd (LP) ->  LP BD double RP
     {518, 4}, // 33: br (LP) ->  LP BR double RP
     {519, 4}, // 34: bs (LP) ->  LP BS double RP
     {520, 4}, // 35: bsm (LP) ->  LP BSM double RP
     {521, 4}, // 36: bsa (LP) ->  LP BSA double RP
     {522, 4}, // 37: bw (LP) ->  LP BW double RP
     {523, 4}, // 38: cbc (LP) ->  LP CBC double RP
     {524, 4}, // 39: cp (LP) ->  LP CP double RP
     {525, 4}, // 40: cal (LP) ->  LP CAL double RP
     {526, 4}, // 41: caw (LP) ->  LP CAW double RP
     {527, 4}, // 42: cm (LP) ->  LP CM double RP
     {528, 4}, // 43: cadw (LP) ->  LP CADW double RP
     {529, 4}, // 44: cdefw (LP) ->  LP CDEFW double RP
     {530, 4}, // 45: cdelw (LP) ->  LP CDELW double RP
     {531, 4}, // 46: ciw (LP) ->  LP CIW double RP
     {532, 4}, // 47: cmd (LP) ->  LP CMD double RP
     {533, 4}, // 48: cmpc (LP) ->  LP CMPC double RP
     {534, 4}, // 49: cmw (LP) ->  LP CMW double RP
     {535, 4}, // 50: crw (LP) ->  LP CRW double RP
     {536, 4}, // 51: cws (LP) ->  LP CWS double RP
     {537, 4}, // 52: co (LP) ->  LP CO double RP
     {538, 4}, // 53: cop (LP) ->  LP COP double RP
     {539, 4}, // 54: cwr (LP) ->  LP CWR double RP
     {540, 4}, // 55: cw (LP) ->  LP CW double RP
     {541, 4}, // 56: cr (LP) ->  LP CR double RP
     {542, 4}, // 57: das (LP) ->  LP DAS double RP
     {543, 4}, // 58: dpr (LP) ->  LP DPR double RP
     {700, 4}, // 59: pt_dpr (LP) ->  LP DPR double RP
     {544, 4}, // 60: dbt (LP) ->  LP DBT double RP
     {545, 4}, // 61: ed (LP) ->  LP ED double RP
     {546, 4}, // 62: edt (LP) ->  LP EDT double RP
     {547, 4}, // 63: ein (LP) ->  LP EIN double RP
     {548, 4}, // 64: eit (LP) ->  LP EIT double RP
     {549, 4}, // 65: ei (LP) ->  LP EI double RP
     {550, 4}, // 66: em (LP) ->  LP EM double RP
     {701, 4}, // 67: pt_emx (LP) ->  LP EMAX double RP
     {702, 4}, // 68: pt_emi (LP) ->  LP EM double RP
     {551, 4}, // 69: eht (LP) ->  LP EHT double RP
     {552, 4}, // 70: es (LP) ->  LP ES double RP
     {703, 4}, // 71: pt_es (LP) ->  LP ES double RP
     {553, 4}, // 72: fko (LP) ->  LP FKO double RP
     {554, 4}, // 73: fc (LP) ->  LP FC double RP
     {555, 4}, // 74: fdp (LP) ->  LP FDP double RP
     {704, 4}, // 75: pt_fdp (LP) ->  LP FDP double RP
     {556, 4}, // 76: fe (LP) ->  LP FE double RP
     {557, 4}, // 77: fkf (LP) ->  LP FKF double RP
     {558, 4}, // 78: fsp (LP) ->  LP FSP double RP
     {559, 4}, // 79: fwp (LP) ->  LP FWP double RP
     {560, 4}, // 80: fl (LP) ->  LP FL double RP
     {561, 4}, // 81: fr (LP) ->  LP FR double RP
     {562, 4}, // 82: glc (LP) ->  LP GLC double RP
     {563, 4}, // 83: gld (LP) ->  LP GLD double RP
     {564, 4}, // 84: gldir (LP) ->  LP GLDIR string RP
     {565, 4}, // 85: glf (LP) ->  LP GLF double RP
     {566, 4}, // 86: glfn (LP) ->  LP GLFN string RP
     {567, 4}, // 87: glv (LP) ->  LP GLV double RP
     {568, 4}, // 88: gl (LP) ->  LP GL double RP
     {569, 4}, // 89: gow (LP) ->  LP GOW double RP
     {570, 4}, // 90: gw (LP) ->  LP GW double RP
     {571, 4}, // 91: gmm (LP) ->  LP GMM double RP
     {572, 4}, // 92: gg (LP) ->  LP GG double RP
     {573, 4}, // 93: ht (LP) ->  LP HT double RP
     {574, 4}, // 94: hd (LP) ->  LP HD double RP
     {575, 4}, // 95: hi (LP) ->  LP HI double RP
     {576, 4}, // 96: hm (LP) ->  LP HM double RP
     {577, 4}, // 97: im (LP) ->  LP IM double RP
     {705, 4}, // 98: pt_im (LP) ->  LP IM double RP
     {578, 4}, // 99: k (LP) ->  LP K double RP
     {579, 4}, // 100: kl (LP) ->  LP KL double RP
     {580, 4}, // 101: kld (LP) ->  LP KLD double RP
     {581, 4}, // 102: kldir (LP) ->  LP KLDIR string RP
     {582, 4}, // 103: lkf (LP) ->  LP LKF double RP
     {583, 4}, // 104: klfn (LP) ->  LP KLFN string RP
     {584, 4}, // 105: klg (LP) ->  LP KLG double RP
     {585, 4}, // 106: ks (LP) ->  LP KS double RP
     {586, 4}, // 107: kw (LP) ->  LP KW double RP
     {587, 4}, // 108: kow (LP) ->  LP KOW double RP
     {588, 4}, // 109: kpr (LP) ->  LP KPR double RP
     {706, 4}, // 110: pt_kpr (LP) ->  LP KPR double RP
     {589, 4}, // 111: kr (LP) ->  LP KR double RP
     {707, 4}, // 112: pt_kr (LP) ->  LP KR double RP
     {590, 4}, // 113: krfl (LP) ->  LP KRFL double RP
     {591, 4}, // 114: krfr (LP) ->  LP KRFR double RP
     {592, 4}, // 115: km (LP) ->  LP KM double RP
     {708, 4}, // 116: pt_km (LP) ->  LP KM double RP
     {593, 4}, // 117: lf (LP) ->  LP LF string RP
     {594, 4}, // 118: ldf (LP) ->  LP LDF string RP
     {595, 4}, // 119: lt (LP) ->  LP LT double RP
     {596, 4}, // 120: mbtp (LP) ->  LP MBTP double RP
     {597, 4}, // 121: maxda (LP) ->  LP MAXDA double RP
     {598, 4}, // 122: mdp (LP) ->  LP MDP double RP
     {599, 4}, // 123: mgk (LP) ->  LP MGK double RP
     {600, 4}, // 124: mtp (LP) ->  LP MTP double RP
     {601, 4}, // 125: maxm (LP) ->  LP MAXM double RP
     {602, 4}, // 126: maxna (LP) ->  LP MAXNA double RP
     {603, 4}, // 127: maxnm (LP) ->  LP MAXNM double RP
     {604, 4}, // 128: maxp (LP) ->  LP MAXP double RP
     {605, 4}, // 129: minda (LP) ->  LP MINDA double RP
     {606, 4}, // 130: mindp (LP) ->  LP MINDP double RP
     {607, 4}, // 131: minm (LP) ->  LP MINM double RP
     {608, 4}, // 132: minna (LP) ->  LP MINNA double RP
     {609, 4}, // 133: minnm (LP) ->  LP MINNM double RP
     {610, 4}, // 134: minp (LP) ->  LP MINP double RP
     {611, 4}, // 135: neh (LP) ->  LP NEH double RP
     {612, 4}, // 136: nnh (LP) ->  LP NNH double RP
     {613, 4}, // 137: oaas (LP) ->  LP OAAS double RP
     {614, 4}, // 138: okm (LP) ->  LP OKM double RP
     {615, 4}, // 139: op (LP) ->  LP OP double RP
     {616, 4}, // 140: och (LP) ->  LP OCH double RP
     {617, 4}, // 141: pamk (LP) ->  LP PAMK double RP
     {618, 4}, // 142: pbsw (LP) ->  LP PBSW double RP
     {619, 4}, // 143: pcmp (LP) ->  LP PCMP double RP
     {620, 4}, // 144: pdx (LP) ->  LP PDX double RP
     {621, 4}, // 145: pmet (LP) ->  LP PMET double RP
     {622, 4}, // 146: pmgdx (LP) ->  LP PMGDX double RP
     {623, 4}, // 147: pnk (LP) ->  LP PNK double RP
     {624, 4}, // 148: prw (LP) ->  LP PRW double RP
     {625, 4}, // 149: prwa (LP) ->  LP PRWA double RP
     {626, 4}, // 150: psw (LP) ->  LP PSW double RP
     {627, 4}, // 151: ptw (LP) ->  LP PTW double RP
     {628, 4}, // 152: pso (LP) ->  LP PSO double RP
     {629, 4}, // 153: pam (LP) ->  LP PAM double RP
     {630, 4}, // 154: pd (LP) ->  LP PD double RP
     {709, 4}, // 155: pt_pd (LP) ->  LP PD double RP
     {631, 4}, // 156: pr (LP) ->  LP PR double RP
     {632, 4}, // 157: ps (LP) ->  LP PS double RP
     {710, 4}, // 158: pt_ps (LP) ->  LP PS double RP
     {633, 4}, // 159: psm (LP) ->  LP PSM double RP
     {711, 4}, // 160: pt_psm (LP) ->  LP PSM double RP
     {634, 4}, // 161: psmm (LP) ->  LP PSMM double RP
     {635, 4}, // 162: pw (LP) ->  LP PW double RP
     {636, 4}, // 163: ptb (LP) ->  LP PTB double RP
     {637, 4}, // 164: ptd (LP) ->  LP PTD double RP
     {638, 4}, // 165: p (LP) ->  LP P double RP
     {639, 4}, // 166: pfl (LP) ->  LP PFL double RP
     {640, 4}, // 167: pfr (LP) ->  LP PFR double RP
     {641, 4}, // 168: prof (LP) ->  LP PROF double RP
     {642, 4}, // 169: pgk (LP) ->  LP PGK double RP
     {643, 4}, // 170: qs (LP) ->  LP QS double RP
     {644, 4}, // 171: qsl (LP) ->  LP QSL double RP
     {645, 4}, // 172: rm (LP) ->  LP RM double RP
     {646, 4}, // 173: rd (LP) ->  LP RD double RP
     {647, 4}, // 174: rdt (LP) ->  LP RDT double RP
     {648, 4}, // 175: ri (LP) ->  LP RI double RP
     {649, 4}, // 176: rmin (LP) ->  LP RMIN double RP
     {650, 4}, // 177: rs (LP) ->  LP RS double RP
     {651, 4}, // 178: rcp (LP) ->  LP RCP double RP
     {652, 4}, // 179: sccm (LP) ->  LP SCCM double RP
     {653, 4}, // 180: scms (LP) ->  LP SCMS double RP
     {654, 4}, // 181: sms (LP) ->  LP SMS double RP
     {655, 4}, // 182: sm (LP) ->  LP SM double RP
     {656, 4}, // 183: ss (LP) ->  LP SS double RP
     {657, 4}, // 184: svs (LP) ->  LP SVS double RP
     {658, 4}, // 185: sbs (LP) ->  LP SBS double RP
     {659, 4}, // 186: sdr (LP) ->  LP SDR double RP
     {660, 4}, // 187: sims (LP) ->  LP SIMS double RP
     {661, 4}, // 188: sdf (LP) ->  LP SDF double RP
     {662, 4}, // 189: sotflt (LP) ->  LP SOTFLT double RP
     {663, 4}, // 190: sotfrt (LP) ->  LP SOTFRT double RP
     {664, 4}, // 191: sc (LP) ->  LP SC double RP
     {665, 4}, // 192: sim (LP) ->  LP SIM double RP
     {712, 4}, // 193: pt_sim (LP) ->  LP SIM double RP
     {666, 4}, // 194: smax (LP) ->  LP SMAX double RP
     {667, 4}, // 195: sgl (LP) ->  LP SGL double RP
     {668, 4}, // 196: sgr (LP) ->  LP SGR double RP
     {669, 4}, // 197: sbv (LP) ->  LP SBV double RP
     {670, 4}, // 198: smics (LP) ->  LP SMICS double RP
     {671, 4}, // 199: smod (LP) ->  LP SMOD double RP
     {672, 4}, // 200: so (LP) ->  LP SO double RP
     {673, 4}, // 201: sso (LP) ->  LP SSO double RP
     {674, 4}, // 202: tbd (LP) ->  LP TBD double RP
     {675, 4}, // 203: tc (LP) ->  LP TC double RP
     {676, 4}, // 204: td (LP) ->  LP TD double RP
     {677, 4}, // 205: te (LP) ->  LP TE double RP
     {678, 4}, // 206: tpr (LP) ->  LP TPR double RP
     {679, 4}, // 207: trf (LP) ->  LP TRF double RP
     {680, 4}, // 208: tw (LP) ->  LP TW double RP
     {681, 4}, // 209: tan (LP) ->  LP TAN double RP
     {682, 4}, // 210: tls (LP) ->  LP TLS string RP
     {683, 4}, // 211: trs (LP) ->  LP TRS string RP
     {684, 4}, // 212: tlc (LP) ->  LP TLC double RP
     {685, 4}, // 213: tld (LP) ->  LP TLD double RP
     {686, 4}, // 214: tldir (LP) ->  LP TLDIR string RP
     {687, 4}, // 215: tlf (LP) ->  LP TLF double RP
     {688, 4}, // 216: tlfn (LP) ->  LP TLFN string RP
     {689, 4}, // 217: tl (LP) ->  LP TL double RP
     {690, 4}, // 218: uo (LP) ->  LP UO double RP
     {691, 4}, // 219: v (LP) ->  LP V double RP
     {692, 4}, // 220: va (LP) ->  LP VA double RP
     {693, 4}, // 221: vd (LP) ->  LP VD double RP
     {694, 4}, // 222: wa (LP) ->  LP WA double RP
     {695, 4}, // 223: wd (LP) ->  LP WD double RP
     {696, 4}, // 224: wf (LP) ->  LP WF double RP
     {697, 4}, // 225: wn (LP) ->  LP WN double RP
     {698, 4}, // 226: wr (LP) ->  LP WR double RP
     {699, 4}, // 227: wra (LP) ->  LP WRA double RP
     {507, 32}, // 228: player_param (LP) ->  LP PP amdt calsmax calsmin dprdmax dprdmin emaxdf emindf esdmax esdmin fdpdf imdf kprdmax kprdmin kprdf kmdmax kmdmin ndprdmax ndprdmin nsimaxdf pddmax pddmin psdf psmaxdmax psmaxdmin pt ptm rans simaxdf submax RP
     {508, 18}, // 229: player_type (LP) ->  LP PTY id pt_psm pt_sim pt_pd pt_im pt_dpr pt_ps pt_km pt_kr pt_es pt_emx pt_emi pt_kpr pt_fdp pt_cals RP
     {713, 4}, // 230: amdt (LP) ->  LP AMDT double RP
     {714, 4}, // 231: calsmax (LP) ->  LP CALSMAX double RP
     {743, 4}, // 232: pt_cals (LP) ->  LP CALS double RP
     {715, 4}, // 233: calsmin (LP) ->  LP CALSMIN double RP
     {716, 4}, // 234: dprdmax (LP) ->  LP DPRDMAX double RP
     {717, 4}, // 235: dprdmin (LP) ->  LP DPRDMIN double RP
     {718, 4}, // 236: emaxdf (LP) ->  LP EMAXDF double RP
     {719, 4}, // 237: emindf (LP) ->  LP EMINDF double RP
     {720, 4}, // 238: esdmax (LP) ->  LP ESDMAX double RP
     {721, 4}, // 239: esdmin (LP) ->  LP ESDMIN double RP
     {722, 4}, // 240: fdpdf (LP) ->  LP FDPDF double RP
     {723, 4}, // 241: imdf (LP) ->  LP IMDF double RP
     {724, 4}, // 242: kprdmax (LP) ->  LP KPRDMAX double RP
     {725, 4}, // 243: kprdmin (LP) ->  LP KPRDMIN double RP
     {726, 4}, // 244: kprdf (LP) ->  LP KPRDF double RP
     {727, 4}, // 245: kmdmax (LP) ->  LP KMDMAX double RP
     {728, 4}, // 246: kmdmin (LP) ->  LP KMDMIN double RP
     {729, 4}, // 247: ndprdmax (LP) ->  LP NDPRDMAX double RP
     {730, 4}, // 248: ndprdmin (LP) ->  LP NDPRDMIN double RP
     {731, 4}, // 249: nsimaxdf (LP) ->  LP NSIMAXDF double RP
     {732, 4}, // 250: pddmax (LP) ->  LP PDDMAX double RP
     {733, 4}, // 251: pddmin (LP) ->  LP PDDMIN double RP
     {734, 4}, // 252: psdf (LP) ->  LP PSDF double RP
     {735, 4}, // 253: psmaxdmax (LP) ->  LP PSMAXDMAX double RP
     {736, 4}, // 254: psmaxdmin (LP) ->  LP PSMAXDMIN double RP
     {737, 4}, // 255: pt (LP) ->  LP PT double RP
     {738, 4}, // 256: ptm (LP) ->  LP PTM double RP
     {739, 4}, // 257: rans (LP) ->  LP RANS double RP
     {740, 4}, // 258: simaxdf (LP) ->  LP SIMAXDF double RP
     {741, 4}, // 259: submax (LP) ->  LP SUBMAX double RP
     {742, 4}, // 260: id (LP) ->  LP ID double RP
     {744, 1}, // 261: start_$ ->  start
};

// State info and SR__ transitions for each state.


SR__ s_0[] =
{
    { { REQ_TOKEN}, { 7} },                
    { {       504}, { 1} }, // start       
    { {       505}, { 2} }, // init        
    { {       506}, { 3} }, // server_param
    { {       507}, { 4} }, // player_param
    { {       508}, { 5} }, // player_type 
    { {       261}, { 6} }, // LP          
    { {         0}, { 0} },                
};

SR__ s_1[] =
{
    { { REQ_TOKEN}, {            2} }, 
    { {     _EOF_}, { PARSE_ACCEPT} }, 
    { {         0}, {            0} }, 
};

SR__ s_2[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -1} }, 
};

SR__ s_3[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -2} }, 
};

SR__ s_4[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -3} }, 
};

SR__ s_5[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -4} }, 
};

SR__ s_6[] =
{
    { { REQ_TOKEN}, {  5} },          
    { {       259}, {  7} }, // INIT  
    { {       260}, {  8} }, // SERVER
    { {       452}, {  9} }, // PP    
    { {       482}, { 10} }, // PTY   
    { {         0}, {  0} },          
};

SR__ s_7[] =
{
    { { REQ_TOKEN}, {  2} },        
    { {       263}, { 11} }, // SIDE
    { {         0}, {  0} },        
};

SR__ s_8[] =
{
    { { REQ_TOKEN}, {  3} },       
    { {       512}, { 12} }, // acd
    { {       261}, { 13} }, // LP 
    { {         0}, {  0} },       
};

SR__ s_9[] =
{
    { { REQ_TOKEN}, {  3} },        
    { {       713}, { 14} }, // amdt
    { {       261}, { 15} }, // LP  
    { {         0}, {  0} },        
};

SR__ s_10[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       742}, { 16} }, // id
    { {       261}, { 17} }, // LP
    { {         0}, {  0} },      
};

SR__ s_11[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 18} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_12[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       513}, { 20} }, // am
    { {       261}, { 21} }, // LP
    { {         0}, {  0} },      
};

SR__ s_13[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       264}, { 22} }, // ACD
    { {         0}, {  0} },       
};

SR__ s_14[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       714}, { 23} }, // calsmax
    { {       261}, { 24} }, // LP     
    { {         0}, {  0} },           
};

SR__ s_15[] =
{
    { { REQ_TOKEN}, {  2} },        
    { {       453}, { 25} }, // AMDT
    { {         0}, {  0} },        
};

SR__ s_16[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       711}, { 26} }, // pt_psm
    { {       261}, { 27} }, // LP    
    { {         0}, {  0} },          
};

SR__ s_17[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       483}, { 28} }, // ID
    { {         0}, {  0} },      
};

SR__ s_18[] =
{
    { { REQ_TOKEN}, { 20} },             
    { {       511}, { 29} }, // play_mode
    { {       486}, { 30} }, // PM_BKO   
    { {       487}, { 31} }, // PM_PO    
    { {       488}, { 32} }, // PM_TO    
    { {       489}, { 33} }, // PM_KOL   
    { {       490}, { 34} }, // PM_KOR   
    { {       491}, { 35} }, // PM_KIL   
    { {       492}, { 36} }, // PM_KIR   
    { {       493}, { 37} }, // PM_FKL   
    { {       494}, { 38} }, // PM_FKR   
    { {       495}, { 39} }, // PM_CKL   
    { {       496}, { 40} }, // PM_CKR   
    { {       497}, { 41} }, // PM_GKL   
    { {       498}, { 42} }, // PM_GKR   
    { {       499}, { 43} }, // PM_GOALL 
    { {       500}, { 44} }, // PM_GOALR 
    { {       501}, { 45} }, // PM_DB    
    { {       502}, { 46} }, // PM_OL    
    { {       503}, { 47} }, // PM_OR    
    { {         0}, {  0} },             
};

SR__ s_19[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -5} }, 
};

SR__ s_20[] =
{
    { { REQ_TOKEN}, {  3} },       
    { {       514}, { 48} }, // bdr
    { {       261}, { 49} }, // LP 
    { {         0}, {  0} },       
};

SR__ s_21[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       265}, { 50} }, // AM
    { {         0}, {  0} },      
};

SR__ s_22[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 51} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_23[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       715}, { 52} }, // calsmin
    { {       261}, { 53} }, // LP     
    { {         0}, {  0} },           
};

SR__ s_24[] =
{
    { { REQ_TOKEN}, {  2} },           
    { {       454}, { 54} }, // CALSMAX
    { {         0}, {  0} },           
};

SR__ s_25[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 55} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_26[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       712}, { 56} }, // pt_sim
    { {       261}, { 57} }, // LP    
    { {         0}, {  0} },          
};

SR__ s_27[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       385}, { 58} }, // PSM
    { {         0}, {  0} },       
};

SR__ s_28[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 59} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_29[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 60} }, // RP
    { {         0}, {  0} },      
};

SR__ s_30[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -8} }, 
};

SR__ s_31[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -9} }, 
};

SR__ s_32[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -10} }, 
};

SR__ s_33[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -11} }, 
};

SR__ s_34[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -12} }, 
};

SR__ s_35[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -13} }, 
};

SR__ s_36[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -14} }, 
};

SR__ s_37[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -15} }, 
};

SR__ s_38[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -16} }, 
};

SR__ s_39[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -17} }, 
};

SR__ s_40[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -18} }, 
};

SR__ s_41[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -19} }, 
};

SR__ s_42[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -20} }, 
};

SR__ s_43[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -21} }, 
};

SR__ s_44[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -22} }, 
};

SR__ s_45[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -23} }, 
};

SR__ s_46[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -24} }, 
};

SR__ s_47[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -25} }, 
};

SR__ s_48[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       515}, { 61} }, // bp
    { {       261}, { 62} }, // LP
    { {         0}, {  0} },      
};

SR__ s_49[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       266}, { 63} }, // BDR
    { {         0}, {  0} },       
};

SR__ s_50[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 64} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_51[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 65} }, // RP
    { {         0}, {  0} },      
};

SR__ s_52[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       716}, { 66} }, // dprdmax
    { {       261}, { 67} }, // LP     
    { {         0}, {  0} },           
};

SR__ s_53[] =
{
    { { REQ_TOKEN}, {  2} },           
    { {       455}, { 68} }, // CALSMIN
    { {         0}, {  0} },           
};

SR__ s_54[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 69} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_55[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 70} }, // RP
    { {         0}, {  0} },      
};

SR__ s_56[] =
{
    { { REQ_TOKEN}, {  3} },         
    { {       709}, { 71} }, // pt_pd
    { {       261}, { 72} }, // LP   
    { {         0}, {  0} },         
};

SR__ s_57[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       417}, { 73} }, // SIM
    { {         0}, {  0} },       
};

SR__ s_58[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 74} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_59[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 75} }, // RP
    { {         0}, {  0} },      
};

SR__ s_60[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -7} }, 
};

SR__ s_61[] =
{
    { { REQ_TOKEN}, {  3} },       
    { {       516}, { 76} }, // bam
    { {       261}, { 77} }, // LP 
    { {         0}, {  0} },       
};

SR__ s_62[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       267}, { 78} }, // BP
    { {         0}, {  0} },      
};

SR__ s_63[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 79} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_64[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 80} }, // RP
    { {         0}, {  0} },      
};

SR__ s_65[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -27} }, 
};

SR__ s_66[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       717}, { 81} }, // dprdmin
    { {       261}, { 82} }, // LP     
    { {         0}, {  0} },           
};

SR__ s_67[] =
{
    { { REQ_TOKEN}, {  2} },           
    { {       456}, { 83} }, // DPRDMAX
    { {         0}, {  0} },           
};

SR__ s_68[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 84} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_69[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 85} }, // RP
    { {         0}, {  0} },      
};

SR__ s_70[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -230} }, 
};

SR__ s_71[] =
{
    { { REQ_TOKEN}, {  3} },         
    { {       705}, { 86} }, // pt_im
    { {       261}, { 87} }, // LP   
    { {         0}, {  0} },         
};

SR__ s_72[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       382}, { 88} }, // PD
    { {         0}, {  0} },      
};

SR__ s_73[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 89} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_74[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 90} }, // RP
    { {         0}, {  0} },      
};

SR__ s_75[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -260} }, 
};

SR__ s_76[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       517}, { 91} }, // bd
    { {       261}, { 92} }, // LP
    { {         0}, {  0} },      
};

SR__ s_77[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       268}, { 93} }, // BAM
    { {         0}, {  0} },       
};

SR__ s_78[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 94} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_79[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       262}, { 95} }, // RP
    { {         0}, {  0} },      
};

SR__ s_80[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -28} }, 
};

SR__ s_81[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       718}, { 96} }, // emaxdf
    { {       261}, { 97} }, // LP    
    { {         0}, {  0} },          
};

SR__ s_82[] =
{
    { { REQ_TOKEN}, {  2} },           
    { {       457}, { 98} }, // DPRDMIN
    { {         0}, {  0} },           
};

SR__ s_83[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       509}, { 99} }, // double
    { {       257}, { 19} }, // DOUBLE
    { {         0}, {  0} },          
};

SR__ s_84[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 100} }, // RP
    { {         0}, {   0} },      
};

SR__ s_85[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -231} }, 
};

SR__ s_86[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       700}, { 101} }, // pt_dpr
    { {       261}, { 102} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_87[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       329}, { 103} }, // IM
    { {         0}, {   0} },      
};

SR__ s_88[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 104} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_89[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 105} }, // RP
    { {         0}, {   0} },      
};

SR__ s_90[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -160} }, 
};

SR__ s_91[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       518}, { 106} }, // br
    { {       261}, { 107} }, // LP
    { {         0}, {   0} },      
};

SR__ s_92[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       269}, { 108} }, // BD
    { {         0}, {   0} },      
};

SR__ s_93[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 109} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_94[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 110} }, // RP
    { {         0}, {   0} },      
};

SR__ s_95[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -29} }, 
};

SR__ s_96[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       719}, { 111} }, // emindf
    { {       261}, { 112} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_97[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       458}, { 113} }, // EMAXDF
    { {         0}, {   0} },          
};

SR__ s_98[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 114} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_99[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 115} }, // RP
    { {         0}, {   0} },      
};

SR__ s_100[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -233} }, 
};

SR__ s_101[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       710}, { 116} }, // pt_ps
    { {       261}, { 117} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_102[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       295}, { 118} }, // DPR
    { {         0}, {   0} },       
};

SR__ s_103[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 119} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_104[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 120} }, // RP
    { {         0}, {   0} },      
};

SR__ s_105[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -193} }, 
};

SR__ s_106[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       519}, { 121} }, // bs
    { {       261}, { 122} }, // LP
    { {         0}, {   0} },      
};

SR__ s_107[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       270}, { 123} }, // BR
    { {         0}, {   0} },      
};

SR__ s_108[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 124} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_109[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 125} }, // RP
    { {         0}, {   0} },      
};

SR__ s_110[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -30} }, 
};

SR__ s_111[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       720}, { 126} }, // esdmax
    { {       261}, { 127} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_112[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       459}, { 128} }, // EMINDF
    { {         0}, {   0} },          
};

SR__ s_113[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 129} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_114[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 130} }, // RP
    { {         0}, {   0} },      
};

SR__ s_115[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -234} }, 
};

SR__ s_116[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       708}, { 131} }, // pt_km
    { {       261}, { 132} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_117[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       384}, { 133} }, // PS
    { {         0}, {   0} },      
};

SR__ s_118[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 134} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_119[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 135} }, // RP
    { {         0}, {   0} },      
};

SR__ s_120[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -155} }, 
};

SR__ s_121[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       520}, { 136} }, // bsm
    { {       261}, { 137} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_122[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       271}, { 138} }, // BS
    { {         0}, {   0} },      
};

SR__ s_123[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 139} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_124[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 140} }, // RP
    { {         0}, {   0} },      
};

SR__ s_125[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -31} }, 
};

SR__ s_126[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       721}, { 141} }, // esdmin
    { {       261}, { 142} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_127[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       460}, { 143} }, // ESDMAX
    { {         0}, {   0} },          
};

SR__ s_128[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 144} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_129[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 145} }, // RP
    { {         0}, {   0} },      
};

SR__ s_130[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -235} }, 
};

SR__ s_131[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       707}, { 146} }, // pt_kr
    { {       261}, { 147} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_132[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       344}, { 148} }, // KM
    { {         0}, {   0} },      
};

SR__ s_133[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 149} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_134[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 150} }, // RP
    { {         0}, {   0} },      
};

SR__ s_135[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -98} }, 
};

SR__ s_136[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       521}, { 151} }, // bsa
    { {       261}, { 152} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_137[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       272}, { 153} }, // BSM
    { {         0}, {   0} },       
};

SR__ s_138[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 154} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_139[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 155} }, // RP
    { {         0}, {   0} },      
};

SR__ s_140[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -32} }, 
};

SR__ s_141[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       722}, { 156} }, // fdpdf
    { {       261}, { 157} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_142[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       461}, { 158} }, // ESDMIN
    { {         0}, {   0} },          
};

SR__ s_143[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 159} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_144[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 160} }, // RP
    { {         0}, {   0} },      
};

SR__ s_145[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -236} }, 
};

SR__ s_146[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       703}, { 161} }, // pt_es
    { {       261}, { 162} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_147[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       341}, { 163} }, // KR
    { {         0}, {   0} },      
};

SR__ s_148[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 164} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_149[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 165} }, // RP
    { {         0}, {   0} },      
};

SR__ s_150[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -59} }, 
};

SR__ s_151[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       522}, { 166} }, // bw
    { {       261}, { 167} }, // LP
    { {         0}, {   0} },      
};

SR__ s_152[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       273}, { 168} }, // BSA
    { {         0}, {   0} },       
};

SR__ s_153[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 169} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_154[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 170} }, // RP
    { {         0}, {   0} },      
};

SR__ s_155[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -33} }, 
};

SR__ s_156[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       723}, { 171} }, // imdf
    { {       261}, { 172} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_157[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       462}, { 173} }, // FDPDF
    { {         0}, {   0} },         
};

SR__ s_158[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 174} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_159[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 175} }, // RP
    { {         0}, {   0} },      
};

SR__ s_160[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -237} }, 
};

SR__ s_161[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       701}, { 176} }, // pt_emx
    { {       261}, { 177} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_162[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       304}, { 178} }, // ES
    { {         0}, {   0} },      
};

SR__ s_163[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 179} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_164[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 180} }, // RP
    { {         0}, {   0} },      
};

SR__ s_165[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -158} }, 
};

SR__ s_166[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       523}, { 181} }, // cbc
    { {       261}, { 182} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_167[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       274}, { 183} }, // BW
    { {         0}, {   0} },      
};

SR__ s_168[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 184} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_169[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 185} }, // RP
    { {         0}, {   0} },      
};

SR__ s_170[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -34} }, 
};

SR__ s_171[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       724}, { 186} }, // kprdmax
    { {       261}, { 187} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_172[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       463}, { 188} }, // IMDF
    { {         0}, {   0} },        
};

SR__ s_173[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 189} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_174[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 190} }, // RP
    { {         0}, {   0} },      
};

SR__ s_175[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -238} }, 
};

SR__ s_176[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       702}, { 191} }, // pt_emi
    { {       261}, { 192} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_177[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       484}, { 193} }, // EMAX
    { {         0}, {   0} },        
};

SR__ s_178[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 194} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_179[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 195} }, // RP
    { {         0}, {   0} },      
};

SR__ s_180[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -116} }, 
};

SR__ s_181[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       524}, { 196} }, // cp
    { {       261}, { 197} }, // LP
    { {         0}, {   0} },      
};

SR__ s_182[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       275}, { 198} }, // CBC
    { {         0}, {   0} },       
};

SR__ s_183[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 199} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_184[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 200} }, // RP
    { {         0}, {   0} },      
};

SR__ s_185[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -35} }, 
};

SR__ s_186[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       725}, { 201} }, // kprdmin
    { {       261}, { 202} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_187[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       464}, { 203} }, // KPRDMAX
    { {         0}, {   0} },           
};

SR__ s_188[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 204} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_189[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 205} }, // RP
    { {         0}, {   0} },      
};

SR__ s_190[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -239} }, 
};

SR__ s_191[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       706}, { 206} }, // pt_kpr
    { {       261}, { 207} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_192[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       302}, { 208} }, // EM
    { {         0}, {   0} },      
};

SR__ s_193[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 209} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_194[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 210} }, // RP
    { {         0}, {   0} },      
};

SR__ s_195[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -112} }, 
};

SR__ s_196[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       525}, { 211} }, // cal
    { {       261}, { 212} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_197[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       276}, { 213} }, // CP
    { {         0}, {   0} },      
};

SR__ s_198[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 214} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_199[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 215} }, // RP
    { {         0}, {   0} },      
};

SR__ s_200[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -36} }, 
};

SR__ s_201[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       726}, { 216} }, // kprdf
    { {       261}, { 217} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_202[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       465}, { 218} }, // KPRDMIN
    { {         0}, {   0} },           
};

SR__ s_203[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 219} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_204[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 220} }, // RP
    { {         0}, {   0} },      
};

SR__ s_205[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -240} }, 
};

SR__ s_206[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       704}, { 221} }, // pt_fdp
    { {       261}, { 222} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_207[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       340}, { 223} }, // KPR
    { {         0}, {   0} },       
};

SR__ s_208[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 224} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_209[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 225} }, // RP
    { {         0}, {   0} },      
};

SR__ s_210[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -71} }, 
};

SR__ s_211[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       526}, { 226} }, // caw
    { {       261}, { 227} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_212[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       277}, { 228} }, // CAL
    { {         0}, {   0} },       
};

SR__ s_213[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 229} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_214[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 230} }, // RP
    { {         0}, {   0} },      
};

SR__ s_215[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -37} }, 
};

SR__ s_216[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       727}, { 231} }, // kmdmax
    { {       261}, { 232} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_217[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       466}, { 233} }, // KPRDF
    { {         0}, {   0} },         
};

SR__ s_218[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 234} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_219[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 235} }, // RP
    { {         0}, {   0} },      
};

SR__ s_220[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -241} }, 
};

SR__ s_221[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       743}, { 236} }, // pt_cals
    { {       261}, { 237} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_222[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       307}, { 238} }, // FDP
    { {         0}, {   0} },       
};

SR__ s_223[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 239} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_224[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 240} }, // RP
    { {         0}, {   0} },      
};

SR__ s_225[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -67} }, 
};

SR__ s_226[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       527}, { 241} }, // cm
    { {       261}, { 242} }, // LP
    { {         0}, {   0} },      
};

SR__ s_227[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       278}, { 243} }, // CAW
    { {         0}, {   0} },       
};

SR__ s_228[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 244} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_229[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 245} }, // RP
    { {         0}, {   0} },      
};

SR__ s_230[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -38} }, 
};

SR__ s_231[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       728}, { 246} }, // kmdmin
    { {       261}, { 247} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_232[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       467}, { 248} }, // KMDMAX
    { {         0}, {   0} },          
};

SR__ s_233[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 249} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_234[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 250} }, // RP
    { {         0}, {   0} },      
};

SR__ s_235[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -242} }, 
};

SR__ s_236[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 251} }, // RP
    { {         0}, {   0} },      
};

SR__ s_237[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       485}, { 252} }, // CALS
    { {         0}, {   0} },        
};

SR__ s_238[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 253} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_239[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 254} }, // RP
    { {         0}, {   0} },      
};

SR__ s_240[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -68} }, 
};

SR__ s_241[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       528}, { 255} }, // cadw
    { {       261}, { 256} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_242[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       279}, { 257} }, // CM
    { {         0}, {   0} },      
};

SR__ s_243[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 258} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_244[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 259} }, // RP
    { {         0}, {   0} },      
};

SR__ s_245[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -39} }, 
};

SR__ s_246[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       729}, { 260} }, // ndprdmax
    { {       261}, { 261} }, // LP      
    { {         0}, {   0} },            
};

SR__ s_247[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       468}, { 262} }, // KMDMIN
    { {         0}, {   0} },          
};

SR__ s_248[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 263} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_249[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 264} }, // RP
    { {         0}, {   0} },      
};

SR__ s_250[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -243} }, 
};

SR__ s_251[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -229} }, 
};

SR__ s_252[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 265} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_253[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 266} }, // RP
    { {         0}, {   0} },      
};

SR__ s_254[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -110} }, 
};

SR__ s_255[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       529}, { 267} }, // cdefw
    { {       261}, { 268} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_256[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       280}, { 269} }, // CADW
    { {         0}, {   0} },        
};

SR__ s_257[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 270} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_258[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 271} }, // RP
    { {         0}, {   0} },      
};

SR__ s_259[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -40} }, 
};

SR__ s_260[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       730}, { 272} }, // ndprdmin
    { {       261}, { 273} }, // LP      
    { {         0}, {   0} },            
};

SR__ s_261[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       469}, { 274} }, // NDPRDMAX
    { {         0}, {   0} },            
};

SR__ s_262[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 275} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_263[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 276} }, // RP
    { {         0}, {   0} },      
};

SR__ s_264[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -244} }, 
};

SR__ s_265[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 277} }, // RP
    { {         0}, {   0} },      
};

SR__ s_266[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -75} }, 
};

SR__ s_267[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       530}, { 278} }, // cdelw
    { {       261}, { 279} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_268[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       281}, { 280} }, // CDEFW
    { {         0}, {   0} },         
};

SR__ s_269[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 281} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_270[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 282} }, // RP
    { {         0}, {   0} },      
};

SR__ s_271[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -41} }, 
};

SR__ s_272[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       731}, { 283} }, // nsimaxdf
    { {       261}, { 284} }, // LP      
    { {         0}, {   0} },            
};

SR__ s_273[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       470}, { 285} }, // NDPRDMIN
    { {         0}, {   0} },            
};

SR__ s_274[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 286} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_275[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 287} }, // RP
    { {         0}, {   0} },      
};

SR__ s_276[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -245} }, 
};

SR__ s_277[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -232} }, 
};

SR__ s_278[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       531}, { 288} }, // ciw
    { {       261}, { 289} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_279[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       282}, { 290} }, // CDELW
    { {         0}, {   0} },         
};

SR__ s_280[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 291} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_281[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 292} }, // RP
    { {         0}, {   0} },      
};

SR__ s_282[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -42} }, 
};

SR__ s_283[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       732}, { 293} }, // pddmax
    { {       261}, { 294} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_284[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       471}, { 295} }, // NSIMAXDF
    { {         0}, {   0} },            
};

SR__ s_285[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 296} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_286[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 297} }, // RP
    { {         0}, {   0} },      
};

SR__ s_287[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -246} }, 
};

SR__ s_288[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       532}, { 298} }, // cmd
    { {       261}, { 299} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_289[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       283}, { 300} }, // CIW
    { {         0}, {   0} },       
};

SR__ s_290[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 301} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_291[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 302} }, // RP
    { {         0}, {   0} },      
};

SR__ s_292[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -43} }, 
};

SR__ s_293[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       733}, { 303} }, // pddmin
    { {       261}, { 304} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_294[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       472}, { 305} }, // PDDMAX
    { {         0}, {   0} },          
};

SR__ s_295[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 306} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_296[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 307} }, // RP
    { {         0}, {   0} },      
};

SR__ s_297[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -247} }, 
};

SR__ s_298[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       533}, { 308} }, // cmpc
    { {       261}, { 309} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_299[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       284}, { 310} }, // CMD
    { {         0}, {   0} },       
};

SR__ s_300[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 311} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_301[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 312} }, // RP
    { {         0}, {   0} },      
};

SR__ s_302[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -44} }, 
};

SR__ s_303[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       734}, { 313} }, // psdf
    { {       261}, { 314} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_304[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       473}, { 315} }, // PDDMIN
    { {         0}, {   0} },          
};

SR__ s_305[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 316} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_306[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 317} }, // RP
    { {         0}, {   0} },      
};

SR__ s_307[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -248} }, 
};

SR__ s_308[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       534}, { 318} }, // cmw
    { {       261}, { 319} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_309[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       285}, { 320} }, // CMPC
    { {         0}, {   0} },        
};

SR__ s_310[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 321} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_311[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 322} }, // RP
    { {         0}, {   0} },      
};

SR__ s_312[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -45} }, 
};

SR__ s_313[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       735}, { 323} }, // psmaxdmax
    { {       261}, { 324} }, // LP       
    { {         0}, {   0} },             
};

SR__ s_314[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       474}, { 325} }, // PSDF
    { {         0}, {   0} },        
};

SR__ s_315[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 326} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_316[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 327} }, // RP
    { {         0}, {   0} },      
};

SR__ s_317[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -249} }, 
};

SR__ s_318[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       535}, { 328} }, // crw
    { {       261}, { 329} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_319[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       286}, { 330} }, // CMW
    { {         0}, {   0} },       
};

SR__ s_320[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 331} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_321[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 332} }, // RP
    { {         0}, {   0} },      
};

SR__ s_322[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -46} }, 
};

SR__ s_323[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       736}, { 333} }, // psmaxdmin
    { {       261}, { 334} }, // LP       
    { {         0}, {   0} },             
};

SR__ s_324[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       475}, { 335} }, // PSMAXDMAX
    { {         0}, {   0} },             
};

SR__ s_325[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 336} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_326[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 337} }, // RP
    { {         0}, {   0} },      
};

SR__ s_327[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -250} }, 
};

SR__ s_328[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       536}, { 338} }, // cws
    { {       261}, { 339} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_329[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       287}, { 340} }, // CRW
    { {         0}, {   0} },       
};

SR__ s_330[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 341} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_331[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 342} }, // RP
    { {         0}, {   0} },      
};

SR__ s_332[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -47} }, 
};

SR__ s_333[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       737}, { 343} }, // pt
    { {       261}, { 344} }, // LP
    { {         0}, {   0} },      
};

SR__ s_334[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       476}, { 345} }, // PSMAXDMIN
    { {         0}, {   0} },             
};

SR__ s_335[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 346} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_336[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 347} }, // RP
    { {         0}, {   0} },      
};

SR__ s_337[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -251} }, 
};

SR__ s_338[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       537}, { 348} }, // co
    { {       261}, { 349} }, // LP
    { {         0}, {   0} },      
};

SR__ s_339[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       288}, { 350} }, // CWS
    { {         0}, {   0} },       
};

SR__ s_340[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 351} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_341[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 352} }, // RP
    { {         0}, {   0} },      
};

SR__ s_342[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -48} }, 
};

SR__ s_343[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       738}, { 353} }, // ptm
    { {       261}, { 354} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_344[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       477}, { 355} }, // PT
    { {         0}, {   0} },      
};

SR__ s_345[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 356} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_346[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 357} }, // RP
    { {         0}, {   0} },      
};

SR__ s_347[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -252} }, 
};

SR__ s_348[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       538}, { 358} }, // cop
    { {       261}, { 359} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_349[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       289}, { 360} }, // CO
    { {         0}, {   0} },      
};

SR__ s_350[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 361} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_351[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 362} }, // RP
    { {         0}, {   0} },      
};

SR__ s_352[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -49} }, 
};

SR__ s_353[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       739}, { 363} }, // rans
    { {       261}, { 364} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_354[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       478}, { 365} }, // PTM
    { {         0}, {   0} },       
};

SR__ s_355[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 366} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_356[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 367} }, // RP
    { {         0}, {   0} },      
};

SR__ s_357[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -253} }, 
};

SR__ s_358[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       539}, { 368} }, // cwr
    { {       261}, { 369} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_359[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       290}, { 370} }, // COP
    { {         0}, {   0} },       
};

SR__ s_360[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 371} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_361[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 372} }, // RP
    { {         0}, {   0} },      
};

SR__ s_362[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -50} }, 
};

SR__ s_363[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       740}, { 373} }, // simaxdf
    { {       261}, { 374} }, // LP     
    { {         0}, {   0} },           
};

SR__ s_364[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       479}, { 375} }, // RANS
    { {         0}, {   0} },        
};

SR__ s_365[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 376} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_366[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 377} }, // RP
    { {         0}, {   0} },      
};

SR__ s_367[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -254} }, 
};

SR__ s_368[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       540}, { 378} }, // cw
    { {       261}, { 379} }, // LP
    { {         0}, {   0} },      
};

SR__ s_369[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       291}, { 380} }, // CWR
    { {         0}, {   0} },       
};

SR__ s_370[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 381} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_371[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 382} }, // RP
    { {         0}, {   0} },      
};

SR__ s_372[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -51} }, 
};

SR__ s_373[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       741}, { 383} }, // submax
    { {       261}, { 384} }, // LP    
    { {         0}, {   0} },          
};

SR__ s_374[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       480}, { 385} }, // SIMAXDF
    { {         0}, {   0} },           
};

SR__ s_375[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 386} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_376[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 387} }, // RP
    { {         0}, {   0} },      
};

SR__ s_377[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -255} }, 
};

SR__ s_378[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       541}, { 388} }, // cr
    { {       261}, { 389} }, // LP
    { {         0}, {   0} },      
};

SR__ s_379[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       292}, { 390} }, // CW
    { {         0}, {   0} },      
};

SR__ s_380[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 391} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_381[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 392} }, // RP
    { {         0}, {   0} },      
};

SR__ s_382[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -52} }, 
};

SR__ s_383[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 393} }, // RP
    { {         0}, {   0} },      
};

SR__ s_384[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       481}, { 394} }, // SUBMAX
    { {         0}, {   0} },          
};

SR__ s_385[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 395} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_386[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 396} }, // RP
    { {         0}, {   0} },      
};

SR__ s_387[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -256} }, 
};

SR__ s_388[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       542}, { 397} }, // das
    { {       261}, { 398} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_389[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       293}, { 399} }, // CR
    { {         0}, {   0} },      
};

SR__ s_390[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 400} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_391[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 401} }, // RP
    { {         0}, {   0} },      
};

SR__ s_392[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -53} }, 
};

SR__ s_393[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -228} }, 
};

SR__ s_394[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 402} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_395[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 403} }, // RP
    { {         0}, {   0} },      
};

SR__ s_396[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -257} }, 
};

SR__ s_397[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       543}, { 404} }, // dpr
    { {       261}, { 405} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_398[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       294}, { 406} }, // DAS
    { {         0}, {   0} },       
};

SR__ s_399[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 407} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_400[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 408} }, // RP
    { {         0}, {   0} },      
};

SR__ s_401[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -54} }, 
};

SR__ s_402[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 409} }, // RP
    { {         0}, {   0} },      
};

SR__ s_403[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -258} }, 
};

SR__ s_404[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       544}, { 410} }, // dbt
    { {       261}, { 411} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_405[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       295}, { 412} }, // DPR
    { {         0}, {   0} },       
};

SR__ s_406[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 413} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_407[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 414} }, // RP
    { {         0}, {   0} },      
};

SR__ s_408[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -55} }, 
};

SR__ s_409[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -259} }, 
};

SR__ s_410[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       545}, { 415} }, // ed
    { {       261}, { 416} }, // LP
    { {         0}, {   0} },      
};

SR__ s_411[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       296}, { 417} }, // DBT
    { {         0}, {   0} },       
};

SR__ s_412[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 418} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_413[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 419} }, // RP
    { {         0}, {   0} },      
};

SR__ s_414[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -56} }, 
};

SR__ s_415[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       546}, { 420} }, // edt
    { {       261}, { 421} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_416[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       297}, { 422} }, // ED
    { {         0}, {   0} },      
};

SR__ s_417[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 423} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_418[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 424} }, // RP
    { {         0}, {   0} },      
};

SR__ s_419[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -57} }, 
};

SR__ s_420[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       547}, { 425} }, // ein
    { {       261}, { 426} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_421[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       298}, { 427} }, // EDT
    { {         0}, {   0} },       
};

SR__ s_422[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 428} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_423[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 429} }, // RP
    { {         0}, {   0} },      
};

SR__ s_424[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -58} }, 
};

SR__ s_425[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       548}, { 430} }, // eit
    { {       261}, { 431} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_426[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       299}, { 432} }, // EIN
    { {         0}, {   0} },       
};

SR__ s_427[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 433} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_428[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 434} }, // RP
    { {         0}, {   0} },      
};

SR__ s_429[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -60} }, 
};

SR__ s_430[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       549}, { 435} }, // ei
    { {       261}, { 436} }, // LP
    { {         0}, {   0} },      
};

SR__ s_431[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       300}, { 437} }, // EIT
    { {         0}, {   0} },       
};

SR__ s_432[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 438} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_433[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 439} }, // RP
    { {         0}, {   0} },      
};

SR__ s_434[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -61} }, 
};

SR__ s_435[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       550}, { 440} }, // em
    { {       261}, { 441} }, // LP
    { {         0}, {   0} },      
};

SR__ s_436[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       301}, { 442} }, // EI
    { {         0}, {   0} },      
};

SR__ s_437[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 443} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_438[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 444} }, // RP
    { {         0}, {   0} },      
};

SR__ s_439[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -62} }, 
};

SR__ s_440[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       551}, { 445} }, // eht
    { {       261}, { 446} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_441[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       302}, { 447} }, // EM
    { {         0}, {   0} },      
};

SR__ s_442[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 448} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_443[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 449} }, // RP
    { {         0}, {   0} },      
};

SR__ s_444[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -63} }, 
};

SR__ s_445[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       552}, { 450} }, // es
    { {       261}, { 451} }, // LP
    { {         0}, {   0} },      
};

SR__ s_446[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       303}, { 452} }, // EHT
    { {         0}, {   0} },       
};

SR__ s_447[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 453} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_448[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 454} }, // RP
    { {         0}, {   0} },      
};

SR__ s_449[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -64} }, 
};

SR__ s_450[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       553}, { 455} }, // fko
    { {       261}, { 456} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_451[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       304}, { 457} }, // ES
    { {         0}, {   0} },      
};

SR__ s_452[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 458} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_453[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 459} }, // RP
    { {         0}, {   0} },      
};

SR__ s_454[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -65} }, 
};

SR__ s_455[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       554}, { 460} }, // fc
    { {       261}, { 461} }, // LP
    { {         0}, {   0} },      
};

SR__ s_456[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       305}, { 462} }, // FKO
    { {         0}, {   0} },       
};

SR__ s_457[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 463} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_458[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 464} }, // RP
    { {         0}, {   0} },      
};

SR__ s_459[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -66} }, 
};

SR__ s_460[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       555}, { 465} }, // fdp
    { {       261}, { 466} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_461[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       306}, { 467} }, // FC
    { {         0}, {   0} },      
};

SR__ s_462[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 468} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_463[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 469} }, // RP
    { {         0}, {   0} },      
};

SR__ s_464[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -69} }, 
};

SR__ s_465[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       556}, { 470} }, // fe
    { {       261}, { 471} }, // LP
    { {         0}, {   0} },      
};

SR__ s_466[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       307}, { 472} }, // FDP
    { {         0}, {   0} },       
};

SR__ s_467[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 473} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_468[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 474} }, // RP
    { {         0}, {   0} },      
};

SR__ s_469[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -70} }, 
};

SR__ s_470[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       557}, { 475} }, // fkf
    { {       261}, { 476} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_471[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       308}, { 477} }, // FE
    { {         0}, {   0} },      
};

SR__ s_472[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 478} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_473[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 479} }, // RP
    { {         0}, {   0} },      
};

SR__ s_474[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -72} }, 
};

SR__ s_475[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       558}, { 480} }, // fsp
    { {       261}, { 481} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_476[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       309}, { 482} }, // FKF
    { {         0}, {   0} },       
};

SR__ s_477[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 483} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_478[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 484} }, // RP
    { {         0}, {   0} },      
};

SR__ s_479[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -73} }, 
};

SR__ s_480[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       559}, { 485} }, // fwp
    { {       261}, { 486} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_481[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       310}, { 487} }, // FSP
    { {         0}, {   0} },       
};

SR__ s_482[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 488} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_483[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 489} }, // RP
    { {         0}, {   0} },      
};

SR__ s_484[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -74} }, 
};

SR__ s_485[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       560}, { 490} }, // fl
    { {       261}, { 491} }, // LP
    { {         0}, {   0} },      
};

SR__ s_486[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       311}, { 492} }, // FWP
    { {         0}, {   0} },       
};

SR__ s_487[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 493} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_488[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 494} }, // RP
    { {         0}, {   0} },      
};

SR__ s_489[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -76} }, 
};

SR__ s_490[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       561}, { 495} }, // fr
    { {       261}, { 496} }, // LP
    { {         0}, {   0} },      
};

SR__ s_491[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       312}, { 497} }, // FL
    { {         0}, {   0} },      
};

SR__ s_492[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 498} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_493[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 499} }, // RP
    { {         0}, {   0} },      
};

SR__ s_494[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -77} }, 
};

SR__ s_495[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       562}, { 500} }, // glc
    { {       261}, { 501} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_496[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       313}, { 502} }, // FR
    { {         0}, {   0} },      
};

SR__ s_497[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 503} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_498[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 504} }, // RP
    { {         0}, {   0} },      
};

SR__ s_499[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -78} }, 
};

SR__ s_500[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       563}, { 505} }, // gld
    { {       261}, { 506} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_501[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       314}, { 507} }, // GLC
    { {         0}, {   0} },       
};

SR__ s_502[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 508} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_503[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 509} }, // RP
    { {         0}, {   0} },      
};

SR__ s_504[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -79} }, 
};

SR__ s_505[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       564}, { 510} }, // gldir
    { {       261}, { 511} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_506[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       315}, { 512} }, // GLD
    { {         0}, {   0} },       
};

SR__ s_507[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 513} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_508[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 514} }, // RP
    { {         0}, {   0} },      
};

SR__ s_509[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -80} }, 
};

SR__ s_510[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       565}, { 515} }, // glf
    { {       261}, { 516} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_511[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       316}, { 517} }, // GLDIR
    { {         0}, {   0} },         
};

SR__ s_512[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 518} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_513[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 519} }, // RP
    { {         0}, {   0} },      
};

SR__ s_514[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -81} }, 
};

SR__ s_515[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       566}, { 520} }, // glfn
    { {       261}, { 521} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_516[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       317}, { 522} }, // GLF
    { {         0}, {   0} },       
};

SR__ s_517[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       510}, { 523} }, // string
    { {       258}, { 524} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_518[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 525} }, // RP
    { {         0}, {   0} },      
};

SR__ s_519[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -82} }, 
};

SR__ s_520[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       567}, { 526} }, // glv
    { {       261}, { 527} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_521[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       318}, { 528} }, // GLFN
    { {         0}, {   0} },        
};

SR__ s_522[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 529} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_523[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 530} }, // RP
    { {         0}, {   0} },      
};

SR__ s_524[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -6} }, 
};

SR__ s_525[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -83} }, 
};

SR__ s_526[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       568}, { 531} }, // gl
    { {       261}, { 532} }, // LP
    { {         0}, {   0} },      
};

SR__ s_527[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       319}, { 533} }, // GLV
    { {         0}, {   0} },       
};

SR__ s_528[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       510}, { 534} }, // string
    { {       258}, { 524} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_529[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 535} }, // RP
    { {         0}, {   0} },      
};

SR__ s_530[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -84} }, 
};

SR__ s_531[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       569}, { 536} }, // gow
    { {       261}, { 537} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_532[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       320}, { 538} }, // GL
    { {         0}, {   0} },      
};

SR__ s_533[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 539} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_534[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 540} }, // RP
    { {         0}, {   0} },      
};

SR__ s_535[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -85} }, 
};

SR__ s_536[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       570}, { 541} }, // gw
    { {       261}, { 542} }, // LP
    { {         0}, {   0} },      
};

SR__ s_537[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       321}, { 543} }, // GOW
    { {         0}, {   0} },       
};

SR__ s_538[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 544} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_539[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 545} }, // RP
    { {         0}, {   0} },      
};

SR__ s_540[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -86} }, 
};

SR__ s_541[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       571}, { 546} }, // gmm
    { {       261}, { 547} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_542[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       322}, { 548} }, // GW
    { {         0}, {   0} },      
};

SR__ s_543[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 549} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_544[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 550} }, // RP
    { {         0}, {   0} },      
};

SR__ s_545[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -87} }, 
};

SR__ s_546[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       572}, { 551} }, // gg
    { {       261}, { 552} }, // LP
    { {         0}, {   0} },      
};

SR__ s_547[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       323}, { 553} }, // GMM
    { {         0}, {   0} },       
};

SR__ s_548[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 554} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_549[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 555} }, // RP
    { {         0}, {   0} },      
};

SR__ s_550[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -88} }, 
};

SR__ s_551[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       573}, { 556} }, // ht
    { {       261}, { 557} }, // LP
    { {         0}, {   0} },      
};

SR__ s_552[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       324}, { 558} }, // GG
    { {         0}, {   0} },      
};

SR__ s_553[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 559} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_554[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 560} }, // RP
    { {         0}, {   0} },      
};

SR__ s_555[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -89} }, 
};

SR__ s_556[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       574}, { 561} }, // hd
    { {       261}, { 562} }, // LP
    { {         0}, {   0} },      
};

SR__ s_557[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       325}, { 563} }, // HT
    { {         0}, {   0} },      
};

SR__ s_558[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 564} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_559[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 565} }, // RP
    { {         0}, {   0} },      
};

SR__ s_560[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -90} }, 
};

SR__ s_561[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       575}, { 566} }, // hi
    { {       261}, { 567} }, // LP
    { {         0}, {   0} },      
};

SR__ s_562[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       326}, { 568} }, // HD
    { {         0}, {   0} },      
};

SR__ s_563[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 569} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_564[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 570} }, // RP
    { {         0}, {   0} },      
};

SR__ s_565[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -91} }, 
};

SR__ s_566[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       576}, { 571} }, // hm
    { {       261}, { 572} }, // LP
    { {         0}, {   0} },      
};

SR__ s_567[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       327}, { 573} }, // HI
    { {         0}, {   0} },      
};

SR__ s_568[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 574} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_569[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 575} }, // RP
    { {         0}, {   0} },      
};

SR__ s_570[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -92} }, 
};

SR__ s_571[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       577}, { 576} }, // im
    { {       261}, { 577} }, // LP
    { {         0}, {   0} },      
};

SR__ s_572[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       328}, { 578} }, // HM
    { {         0}, {   0} },      
};

SR__ s_573[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 579} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_574[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 580} }, // RP
    { {         0}, {   0} },      
};

SR__ s_575[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -93} }, 
};

SR__ s_576[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       578}, { 581} }, // k 
    { {       261}, { 582} }, // LP
    { {         0}, {   0} },      
};

SR__ s_577[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       329}, { 583} }, // IM
    { {         0}, {   0} },      
};

SR__ s_578[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 584} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_579[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 585} }, // RP
    { {         0}, {   0} },      
};

SR__ s_580[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -94} }, 
};

SR__ s_581[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       579}, { 586} }, // kl
    { {       261}, { 587} }, // LP
    { {         0}, {   0} },      
};

SR__ s_582[] =
{
    { { REQ_TOKEN}, {   2} },     
    { {       330}, { 588} }, // K
    { {         0}, {   0} },     
};

SR__ s_583[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 589} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_584[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 590} }, // RP
    { {         0}, {   0} },      
};

SR__ s_585[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -95} }, 
};

SR__ s_586[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       580}, { 591} }, // kld
    { {       261}, { 592} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_587[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       331}, { 593} }, // KL
    { {         0}, {   0} },      
};

SR__ s_588[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 594} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_589[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 595} }, // RP
    { {         0}, {   0} },      
};

SR__ s_590[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -96} }, 
};

SR__ s_591[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       581}, { 596} }, // kldir
    { {       261}, { 597} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_592[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       332}, { 598} }, // KLD
    { {         0}, {   0} },       
};

SR__ s_593[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 599} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_594[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 600} }, // RP
    { {         0}, {   0} },      
};

SR__ s_595[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -97} }, 
};

SR__ s_596[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       582}, { 601} }, // lkf
    { {       261}, { 602} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_597[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       333}, { 603} }, // KLDIR
    { {         0}, {   0} },         
};

SR__ s_598[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 604} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_599[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 605} }, // RP
    { {         0}, {   0} },      
};

SR__ s_600[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -99} }, 
};

SR__ s_601[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       583}, { 606} }, // klfn
    { {       261}, { 607} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_602[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       334}, { 608} }, // LKF
    { {         0}, {   0} },       
};

SR__ s_603[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       510}, { 609} }, // string
    { {       258}, { 524} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_604[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 610} }, // RP
    { {         0}, {   0} },      
};

SR__ s_605[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -100} }, 
};

SR__ s_606[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       584}, { 611} }, // klg
    { {       261}, { 612} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_607[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       335}, { 613} }, // KLFN
    { {         0}, {   0} },        
};

SR__ s_608[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 614} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_609[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 615} }, // RP
    { {         0}, {   0} },      
};

SR__ s_610[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -101} }, 
};

SR__ s_611[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       585}, { 616} }, // ks
    { {       261}, { 617} }, // LP
    { {         0}, {   0} },      
};

SR__ s_612[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       336}, { 618} }, // KLG
    { {         0}, {   0} },       
};

SR__ s_613[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       510}, { 619} }, // string
    { {       258}, { 524} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_614[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 620} }, // RP
    { {         0}, {   0} },      
};

SR__ s_615[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -102} }, 
};

SR__ s_616[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       586}, { 621} }, // kw
    { {       261}, { 622} }, // LP
    { {         0}, {   0} },      
};

SR__ s_617[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       337}, { 623} }, // KS
    { {         0}, {   0} },      
};

SR__ s_618[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 624} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_619[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 625} }, // RP
    { {         0}, {   0} },      
};

SR__ s_620[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -103} }, 
};

SR__ s_621[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       587}, { 626} }, // kow
    { {       261}, { 627} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_622[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       338}, { 628} }, // KW
    { {         0}, {   0} },      
};

SR__ s_623[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 629} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_624[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 630} }, // RP
    { {         0}, {   0} },      
};

SR__ s_625[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -104} }, 
};

SR__ s_626[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       588}, { 631} }, // kpr
    { {       261}, { 632} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_627[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       339}, { 633} }, // KOW
    { {         0}, {   0} },       
};

SR__ s_628[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 634} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_629[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 635} }, // RP
    { {         0}, {   0} },      
};

SR__ s_630[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -105} }, 
};

SR__ s_631[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       589}, { 636} }, // kr
    { {       261}, { 637} }, // LP
    { {         0}, {   0} },      
};

SR__ s_632[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       340}, { 638} }, // KPR
    { {         0}, {   0} },       
};

SR__ s_633[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 639} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_634[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 640} }, // RP
    { {         0}, {   0} },      
};

SR__ s_635[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -106} }, 
};

SR__ s_636[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       590}, { 641} }, // krfl
    { {       261}, { 642} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_637[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       341}, { 643} }, // KR
    { {         0}, {   0} },      
};

SR__ s_638[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 644} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_639[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 645} }, // RP
    { {         0}, {   0} },      
};

SR__ s_640[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -107} }, 
};

SR__ s_641[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       591}, { 646} }, // krfr
    { {       261}, { 647} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_642[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       342}, { 648} }, // KRFL
    { {         0}, {   0} },        
};

SR__ s_643[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 649} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_644[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 650} }, // RP
    { {         0}, {   0} },      
};

SR__ s_645[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -108} }, 
};

SR__ s_646[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       592}, { 651} }, // km
    { {       261}, { 652} }, // LP
    { {         0}, {   0} },      
};

SR__ s_647[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       343}, { 653} }, // KRFR
    { {         0}, {   0} },        
};

SR__ s_648[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 654} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_649[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 655} }, // RP
    { {         0}, {   0} },      
};

SR__ s_650[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -109} }, 
};

SR__ s_651[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       593}, { 656} }, // lf
    { {       261}, { 657} }, // LP
    { {         0}, {   0} },      
};

SR__ s_652[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       344}, { 658} }, // KM
    { {         0}, {   0} },      
};

SR__ s_653[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 659} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_654[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 660} }, // RP
    { {         0}, {   0} },      
};

SR__ s_655[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -111} }, 
};

SR__ s_656[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       594}, { 661} }, // ldf
    { {       261}, { 662} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_657[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       345}, { 663} }, // LF
    { {         0}, {   0} },      
};

SR__ s_658[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 664} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_659[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 665} }, // RP
    { {         0}, {   0} },      
};

SR__ s_660[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -113} }, 
};

SR__ s_661[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       595}, { 666} }, // lt
    { {       261}, { 667} }, // LP
    { {         0}, {   0} },      
};

SR__ s_662[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       346}, { 668} }, // LDF
    { {         0}, {   0} },       
};

SR__ s_663[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       510}, { 669} }, // string
    { {       258}, { 524} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_664[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 670} }, // RP
    { {         0}, {   0} },      
};

SR__ s_665[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -114} }, 
};

SR__ s_666[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       596}, { 671} }, // mbtp
    { {       261}, { 672} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_667[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       347}, { 673} }, // LT
    { {         0}, {   0} },      
};

SR__ s_668[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       510}, { 674} }, // string
    { {       258}, { 524} }, // STRING
    { {         0}, {   0} },          
};

SR__ s_669[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 675} }, // RP
    { {         0}, {   0} },      
};

SR__ s_670[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -115} }, 
};

SR__ s_671[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       597}, { 676} }, // maxda
    { {       261}, { 677} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_672[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       348}, { 678} }, // MBTP
    { {         0}, {   0} },        
};

SR__ s_673[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 679} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_674[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 680} }, // RP
    { {         0}, {   0} },      
};

SR__ s_675[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -117} }, 
};

SR__ s_676[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       598}, { 681} }, // mdp
    { {       261}, { 682} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_677[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       349}, { 683} }, // MAXDA
    { {         0}, {   0} },         
};

SR__ s_678[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 684} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_679[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 685} }, // RP
    { {         0}, {   0} },      
};

SR__ s_680[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -118} }, 
};

SR__ s_681[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       599}, { 686} }, // mgk
    { {       261}, { 687} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_682[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       350}, { 688} }, // MDP
    { {         0}, {   0} },       
};

SR__ s_683[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 689} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_684[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 690} }, // RP
    { {         0}, {   0} },      
};

SR__ s_685[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -119} }, 
};

SR__ s_686[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       600}, { 691} }, // mtp
    { {       261}, { 692} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_687[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       351}, { 693} }, // MGK
    { {         0}, {   0} },       
};

SR__ s_688[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 694} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_689[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 695} }, // RP
    { {         0}, {   0} },      
};

SR__ s_690[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -120} }, 
};

SR__ s_691[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       601}, { 696} }, // maxm
    { {       261}, { 697} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_692[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       352}, { 698} }, // MTP
    { {         0}, {   0} },       
};

SR__ s_693[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 699} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_694[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 700} }, // RP
    { {         0}, {   0} },      
};

SR__ s_695[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -121} }, 
};

SR__ s_696[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       602}, { 701} }, // maxna
    { {       261}, { 702} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_697[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       353}, { 703} }, // MAXM
    { {         0}, {   0} },        
};

SR__ s_698[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 704} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_699[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 705} }, // RP
    { {         0}, {   0} },      
};

SR__ s_700[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -122} }, 
};

SR__ s_701[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       603}, { 706} }, // maxnm
    { {       261}, { 707} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_702[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       354}, { 708} }, // MAXNA
    { {         0}, {   0} },         
};

SR__ s_703[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 709} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_704[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 710} }, // RP
    { {         0}, {   0} },      
};

SR__ s_705[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -123} }, 
};

SR__ s_706[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       604}, { 711} }, // maxp
    { {       261}, { 712} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_707[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       355}, { 713} }, // MAXNM
    { {         0}, {   0} },         
};

SR__ s_708[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 714} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_709[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 715} }, // RP
    { {         0}, {   0} },      
};

SR__ s_710[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -124} }, 
};

SR__ s_711[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       605}, { 716} }, // minda
    { {       261}, { 717} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_712[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       356}, { 718} }, // MAXP
    { {         0}, {   0} },        
};

SR__ s_713[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 719} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_714[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 720} }, // RP
    { {         0}, {   0} },      
};

SR__ s_715[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -125} }, 
};

SR__ s_716[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       606}, { 721} }, // mindp
    { {       261}, { 722} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_717[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       357}, { 723} }, // MINDA
    { {         0}, {   0} },         
};

SR__ s_718[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 724} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_719[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 725} }, // RP
    { {         0}, {   0} },      
};

SR__ s_720[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -126} }, 
};

SR__ s_721[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       607}, { 726} }, // minm
    { {       261}, { 727} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_722[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       358}, { 728} }, // MINDP
    { {         0}, {   0} },         
};

SR__ s_723[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 729} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_724[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 730} }, // RP
    { {         0}, {   0} },      
};

SR__ s_725[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -127} }, 
};

SR__ s_726[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       608}, { 731} }, // minna
    { {       261}, { 732} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_727[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       359}, { 733} }, // MINM
    { {         0}, {   0} },        
};

SR__ s_728[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 734} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_729[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 735} }, // RP
    { {         0}, {   0} },      
};

SR__ s_730[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -128} }, 
};

SR__ s_731[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       609}, { 736} }, // minnm
    { {       261}, { 737} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_732[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       360}, { 738} }, // MINNA
    { {         0}, {   0} },         
};

SR__ s_733[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 739} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_734[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 740} }, // RP
    { {         0}, {   0} },      
};

SR__ s_735[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -129} }, 
};

SR__ s_736[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       610}, { 741} }, // minp
    { {       261}, { 742} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_737[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       361}, { 743} }, // MINNM
    { {         0}, {   0} },         
};

SR__ s_738[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 744} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_739[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 745} }, // RP
    { {         0}, {   0} },      
};

SR__ s_740[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -130} }, 
};

SR__ s_741[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       611}, { 746} }, // neh
    { {       261}, { 747} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_742[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       362}, { 748} }, // MINP
    { {         0}, {   0} },        
};

SR__ s_743[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 749} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_744[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 750} }, // RP
    { {         0}, {   0} },      
};

SR__ s_745[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -131} }, 
};

SR__ s_746[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       612}, { 751} }, // nnh
    { {       261}, { 752} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_747[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       363}, { 753} }, // NEH
    { {         0}, {   0} },       
};

SR__ s_748[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 754} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_749[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 755} }, // RP
    { {         0}, {   0} },      
};

SR__ s_750[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -132} }, 
};

SR__ s_751[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       613}, { 756} }, // oaas
    { {       261}, { 757} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_752[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       364}, { 758} }, // NNH
    { {         0}, {   0} },       
};

SR__ s_753[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 759} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_754[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 760} }, // RP
    { {         0}, {   0} },      
};

SR__ s_755[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -133} }, 
};

SR__ s_756[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       614}, { 761} }, // okm
    { {       261}, { 762} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_757[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       365}, { 763} }, // OAAS
    { {         0}, {   0} },        
};

SR__ s_758[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 764} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_759[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 765} }, // RP
    { {         0}, {   0} },      
};

SR__ s_760[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -134} }, 
};

SR__ s_761[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       615}, { 766} }, // op
    { {       261}, { 767} }, // LP
    { {         0}, {   0} },      
};

SR__ s_762[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       366}, { 768} }, // OKM
    { {         0}, {   0} },       
};

SR__ s_763[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 769} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_764[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 770} }, // RP
    { {         0}, {   0} },      
};

SR__ s_765[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -135} }, 
};

SR__ s_766[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       616}, { 771} }, // och
    { {       261}, { 772} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_767[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       367}, { 773} }, // OP
    { {         0}, {   0} },      
};

SR__ s_768[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 774} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_769[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 775} }, // RP
    { {         0}, {   0} },      
};

SR__ s_770[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -136} }, 
};

SR__ s_771[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       617}, { 776} }, // pamk
    { {       261}, { 777} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_772[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       368}, { 778} }, // OCH
    { {         0}, {   0} },       
};

SR__ s_773[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 779} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_774[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 780} }, // RP
    { {         0}, {   0} },      
};

SR__ s_775[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -137} }, 
};

SR__ s_776[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       618}, { 781} }, // pbsw
    { {       261}, { 782} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_777[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       369}, { 783} }, // PAMK
    { {         0}, {   0} },        
};

SR__ s_778[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 784} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_779[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 785} }, // RP
    { {         0}, {   0} },      
};

SR__ s_780[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -138} }, 
};

SR__ s_781[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       619}, { 786} }, // pcmp
    { {       261}, { 787} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_782[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       370}, { 788} }, // PBSW
    { {         0}, {   0} },        
};

SR__ s_783[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 789} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_784[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 790} }, // RP
    { {         0}, {   0} },      
};

SR__ s_785[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -139} }, 
};

SR__ s_786[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       620}, { 791} }, // pdx
    { {       261}, { 792} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_787[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       371}, { 793} }, // PCMP
    { {         0}, {   0} },        
};

SR__ s_788[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 794} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_789[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 795} }, // RP
    { {         0}, {   0} },      
};

SR__ s_790[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -140} }, 
};

SR__ s_791[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       621}, { 796} }, // pmet
    { {       261}, { 797} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_792[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       372}, { 798} }, // PDX
    { {         0}, {   0} },       
};

SR__ s_793[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 799} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_794[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 800} }, // RP
    { {         0}, {   0} },      
};

SR__ s_795[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -141} }, 
};

SR__ s_796[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       622}, { 801} }, // pmgdx
    { {       261}, { 802} }, // LP   
    { {         0}, {   0} },         
};

SR__ s_797[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       373}, { 803} }, // PMET
    { {         0}, {   0} },        
};

SR__ s_798[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 804} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_799[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 805} }, // RP
    { {         0}, {   0} },      
};

SR__ s_800[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -142} }, 
};

SR__ s_801[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       623}, { 806} }, // pnk
    { {       261}, { 807} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_802[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       374}, { 808} }, // PMGDX
    { {         0}, {   0} },         
};

SR__ s_803[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 809} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_804[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 810} }, // RP
    { {         0}, {   0} },      
};

SR__ s_805[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -143} }, 
};

SR__ s_806[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       624}, { 811} }, // prw
    { {       261}, { 812} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_807[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       375}, { 813} }, // PNK
    { {         0}, {   0} },       
};

SR__ s_808[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 814} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_809[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 815} }, // RP
    { {         0}, {   0} },      
};

SR__ s_810[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -144} }, 
};

SR__ s_811[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       625}, { 816} }, // prwa
    { {       261}, { 817} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_812[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       376}, { 818} }, // PRW
    { {         0}, {   0} },       
};

SR__ s_813[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 819} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_814[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 820} }, // RP
    { {         0}, {   0} },      
};

SR__ s_815[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -145} }, 
};

SR__ s_816[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       626}, { 821} }, // psw
    { {       261}, { 822} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_817[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       377}, { 823} }, // PRWA
    { {         0}, {   0} },        
};

SR__ s_818[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 824} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_819[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 825} }, // RP
    { {         0}, {   0} },      
};

SR__ s_820[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -146} }, 
};

SR__ s_821[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       627}, { 826} }, // ptw
    { {       261}, { 827} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_822[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       378}, { 828} }, // PSW
    { {         0}, {   0} },       
};

SR__ s_823[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 829} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_824[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 830} }, // RP
    { {         0}, {   0} },      
};

SR__ s_825[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -147} }, 
};

SR__ s_826[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       628}, { 831} }, // pso
    { {       261}, { 832} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_827[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       379}, { 833} }, // PTW
    { {         0}, {   0} },       
};

SR__ s_828[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 834} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_829[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 835} }, // RP
    { {         0}, {   0} },      
};

SR__ s_830[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -148} }, 
};

SR__ s_831[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       629}, { 836} }, // pam
    { {       261}, { 837} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_832[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       380}, { 838} }, // PSO
    { {         0}, {   0} },       
};

SR__ s_833[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 839} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_834[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 840} }, // RP
    { {         0}, {   0} },      
};

SR__ s_835[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -149} }, 
};

SR__ s_836[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       630}, { 841} }, // pd
    { {       261}, { 842} }, // LP
    { {         0}, {   0} },      
};

SR__ s_837[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       381}, { 843} }, // PAM
    { {         0}, {   0} },       
};

SR__ s_838[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 844} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_839[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 845} }, // RP
    { {         0}, {   0} },      
};

SR__ s_840[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -150} }, 
};

SR__ s_841[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       631}, { 846} }, // pr
    { {       261}, { 847} }, // LP
    { {         0}, {   0} },      
};

SR__ s_842[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       382}, { 848} }, // PD
    { {         0}, {   0} },      
};

SR__ s_843[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 849} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_844[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 850} }, // RP
    { {         0}, {   0} },      
};

SR__ s_845[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -151} }, 
};

SR__ s_846[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       632}, { 851} }, // ps
    { {       261}, { 852} }, // LP
    { {         0}, {   0} },      
};

SR__ s_847[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       383}, { 853} }, // PR
    { {         0}, {   0} },      
};

SR__ s_848[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 854} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_849[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 855} }, // RP
    { {         0}, {   0} },      
};

SR__ s_850[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -152} }, 
};

SR__ s_851[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       633}, { 856} }, // psm
    { {       261}, { 857} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_852[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       384}, { 858} }, // PS
    { {         0}, {   0} },      
};

SR__ s_853[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 859} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_854[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 860} }, // RP
    { {         0}, {   0} },      
};

SR__ s_855[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -153} }, 
};

SR__ s_856[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       634}, { 861} }, // psmm
    { {       261}, { 862} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_857[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       385}, { 863} }, // PSM
    { {         0}, {   0} },       
};

SR__ s_858[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 864} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_859[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 865} }, // RP
    { {         0}, {   0} },      
};

SR__ s_860[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -154} }, 
};

SR__ s_861[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       635}, { 866} }, // pw
    { {       261}, { 867} }, // LP
    { {         0}, {   0} },      
};

SR__ s_862[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       386}, { 868} }, // PSMM
    { {         0}, {   0} },        
};

SR__ s_863[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 869} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_864[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 870} }, // RP
    { {         0}, {   0} },      
};

SR__ s_865[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -156} }, 
};

SR__ s_866[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       636}, { 871} }, // ptb
    { {       261}, { 872} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_867[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       387}, { 873} }, // PW
    { {         0}, {   0} },      
};

SR__ s_868[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 874} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_869[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 875} }, // RP
    { {         0}, {   0} },      
};

SR__ s_870[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -157} }, 
};

SR__ s_871[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       637}, { 876} }, // ptd
    { {       261}, { 877} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_872[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       388}, { 878} }, // PTB
    { {         0}, {   0} },       
};

SR__ s_873[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 879} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_874[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 880} }, // RP
    { {         0}, {   0} },      
};

SR__ s_875[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -159} }, 
};

SR__ s_876[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       638}, { 881} }, // p 
    { {       261}, { 882} }, // LP
    { {         0}, {   0} },      
};

SR__ s_877[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       389}, { 883} }, // PTD
    { {         0}, {   0} },       
};

SR__ s_878[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 884} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_879[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 885} }, // RP
    { {         0}, {   0} },      
};

SR__ s_880[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -161} }, 
};

SR__ s_881[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       639}, { 886} }, // pfl
    { {       261}, { 887} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_882[] =
{
    { { REQ_TOKEN}, {   2} },     
    { {       390}, { 888} }, // P
    { {         0}, {   0} },     
};

SR__ s_883[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 889} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_884[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 890} }, // RP
    { {         0}, {   0} },      
};

SR__ s_885[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -162} }, 
};

SR__ s_886[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       640}, { 891} }, // pfr
    { {       261}, { 892} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_887[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       391}, { 893} }, // PFL
    { {         0}, {   0} },       
};

SR__ s_888[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 894} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_889[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 895} }, // RP
    { {         0}, {   0} },      
};

SR__ s_890[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -163} }, 
};

SR__ s_891[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       641}, { 896} }, // prof
    { {       261}, { 897} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_892[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       392}, { 898} }, // PFR
    { {         0}, {   0} },       
};

SR__ s_893[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 899} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_894[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 900} }, // RP
    { {         0}, {   0} },      
};

SR__ s_895[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -164} }, 
};

SR__ s_896[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       642}, { 901} }, // pgk
    { {       261}, { 902} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_897[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       393}, { 903} }, // PROF
    { {         0}, {   0} },        
};

SR__ s_898[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 904} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_899[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 905} }, // RP
    { {         0}, {   0} },      
};

SR__ s_900[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -165} }, 
};

SR__ s_901[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       643}, { 906} }, // qs
    { {       261}, { 907} }, // LP
    { {         0}, {   0} },      
};

SR__ s_902[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       394}, { 908} }, // PGK
    { {         0}, {   0} },       
};

SR__ s_903[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 909} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_904[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 910} }, // RP
    { {         0}, {   0} },      
};

SR__ s_905[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -166} }, 
};

SR__ s_906[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       644}, { 911} }, // qsl
    { {       261}, { 912} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_907[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       395}, { 913} }, // QS
    { {         0}, {   0} },      
};

SR__ s_908[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 914} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_909[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 915} }, // RP
    { {         0}, {   0} },      
};

SR__ s_910[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -167} }, 
};

SR__ s_911[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       645}, { 916} }, // rm
    { {       261}, { 917} }, // LP
    { {         0}, {   0} },      
};

SR__ s_912[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       396}, { 918} }, // QSL
    { {         0}, {   0} },       
};

SR__ s_913[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 919} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_914[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 920} }, // RP
    { {         0}, {   0} },      
};

SR__ s_915[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -168} }, 
};

SR__ s_916[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       646}, { 921} }, // rd
    { {       261}, { 922} }, // LP
    { {         0}, {   0} },      
};

SR__ s_917[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       397}, { 923} }, // RM
    { {         0}, {   0} },      
};

SR__ s_918[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 924} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_919[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 925} }, // RP
    { {         0}, {   0} },      
};

SR__ s_920[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -169} }, 
};

SR__ s_921[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       647}, { 926} }, // rdt
    { {       261}, { 927} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_922[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       398}, { 928} }, // RD
    { {         0}, {   0} },      
};

SR__ s_923[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 929} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_924[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 930} }, // RP
    { {         0}, {   0} },      
};

SR__ s_925[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -170} }, 
};

SR__ s_926[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       648}, { 931} }, // ri
    { {       261}, { 932} }, // LP
    { {         0}, {   0} },      
};

SR__ s_927[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       399}, { 933} }, // RDT
    { {         0}, {   0} },       
};

SR__ s_928[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 934} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_929[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 935} }, // RP
    { {         0}, {   0} },      
};

SR__ s_930[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -171} }, 
};

SR__ s_931[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       649}, { 936} }, // rmin
    { {       261}, { 937} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_932[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       400}, { 938} }, // RI
    { {         0}, {   0} },      
};

SR__ s_933[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 939} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_934[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 940} }, // RP
    { {         0}, {   0} },      
};

SR__ s_935[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -172} }, 
};

SR__ s_936[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       650}, { 941} }, // rs
    { {       261}, { 942} }, // LP
    { {         0}, {   0} },      
};

SR__ s_937[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       401}, { 943} }, // RMIN
    { {         0}, {   0} },        
};

SR__ s_938[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 944} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_939[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 945} }, // RP
    { {         0}, {   0} },      
};

SR__ s_940[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -173} }, 
};

SR__ s_941[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       651}, { 946} }, // rcp
    { {       261}, { 947} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_942[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       402}, { 948} }, // RS
    { {         0}, {   0} },      
};

SR__ s_943[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 949} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_944[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 950} }, // RP
    { {         0}, {   0} },      
};

SR__ s_945[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -174} }, 
};

SR__ s_946[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       652}, { 951} }, // sccm
    { {       261}, { 952} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_947[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       403}, { 953} }, // RCP
    { {         0}, {   0} },       
};

SR__ s_948[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 954} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_949[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 955} }, // RP
    { {         0}, {   0} },      
};

SR__ s_950[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -175} }, 
};

SR__ s_951[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       653}, { 956} }, // scms
    { {       261}, { 957} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_952[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       404}, { 958} }, // SCCM
    { {         0}, {   0} },        
};

SR__ s_953[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 959} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_954[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 960} }, // RP
    { {         0}, {   0} },      
};

SR__ s_955[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -176} }, 
};

SR__ s_956[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       654}, { 961} }, // sms
    { {       261}, { 962} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_957[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       405}, { 963} }, // SCMS
    { {         0}, {   0} },        
};

SR__ s_958[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 964} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_959[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 965} }, // RP
    { {         0}, {   0} },      
};

SR__ s_960[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -177} }, 
};

SR__ s_961[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       655}, { 966} }, // sm
    { {       261}, { 967} }, // LP
    { {         0}, {   0} },      
};

SR__ s_962[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       406}, { 968} }, // SMS
    { {         0}, {   0} },       
};

SR__ s_963[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 969} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_964[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 970} }, // RP
    { {         0}, {   0} },      
};

SR__ s_965[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -178} }, 
};

SR__ s_966[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       656}, { 971} }, // ss
    { {       261}, { 972} }, // LP
    { {         0}, {   0} },      
};

SR__ s_967[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       407}, { 973} }, // SM
    { {         0}, {   0} },      
};

SR__ s_968[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 974} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_969[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 975} }, // RP
    { {         0}, {   0} },      
};

SR__ s_970[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -179} }, 
};

SR__ s_971[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       657}, { 976} }, // svs
    { {       261}, { 977} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_972[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       408}, { 978} }, // SS
    { {         0}, {   0} },      
};

SR__ s_973[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 979} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_974[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 980} }, // RP
    { {         0}, {   0} },      
};

SR__ s_975[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -180} }, 
};

SR__ s_976[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       658}, { 981} }, // sbs
    { {       261}, { 982} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_977[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       409}, { 983} }, // SVS
    { {         0}, {   0} },       
};

SR__ s_978[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 984} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_979[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 985} }, // RP
    { {         0}, {   0} },      
};

SR__ s_980[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -181} }, 
};

SR__ s_981[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       659}, { 986} }, // sdr
    { {       261}, { 987} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_982[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       410}, { 988} }, // SBS
    { {         0}, {   0} },       
};

SR__ s_983[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 989} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_984[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 990} }, // RP
    { {         0}, {   0} },      
};

SR__ s_985[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -182} }, 
};

SR__ s_986[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       660}, { 991} }, // sims
    { {       261}, { 992} }, // LP  
    { {         0}, {   0} },        
};

SR__ s_987[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       411}, { 993} }, // SDR
    { {         0}, {   0} },       
};

SR__ s_988[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 994} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_989[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 995} }, // RP
    { {         0}, {   0} },      
};

SR__ s_990[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -183} }, 
};

SR__ s_991[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       661}, { 996} }, // sdf
    { {       261}, { 997} }, // LP 
    { {         0}, {   0} },       
};

SR__ s_992[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       412}, { 998} }, // SIMS
    { {         0}, {   0} },        
};

SR__ s_993[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       509}, { 999} }, // double
    { {       257}, {  19} }, // DOUBLE
    { {         0}, {   0} },          
};

SR__ s_994[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1000} }, // RP
    { {         0}, {    0} },      
};

SR__ s_995[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -184} }, 
};

SR__ s_996[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       662}, { 1001} }, // sotflt
    { {       261}, { 1002} }, // LP    
    { {         0}, {    0} },          
};

SR__ s_997[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       413}, { 1003} }, // SDF
    { {         0}, {    0} },       
};

SR__ s_998[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1004} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_999[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1005} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1000[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -185} }, 
};

SR__ s_1001[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       663}, { 1006} }, // sotfrt
    { {       261}, { 1007} }, // LP    
    { {         0}, {    0} },          
};

SR__ s_1002[] =
{
    { { REQ_TOKEN}, {    2} },          
    { {       414}, { 1008} }, // SOTFLT
    { {         0}, {    0} },          
};

SR__ s_1003[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1009} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1004[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1010} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1005[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -186} }, 
};

SR__ s_1006[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       664}, { 1011} }, // sc
    { {       261}, { 1012} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1007[] =
{
    { { REQ_TOKEN}, {    2} },          
    { {       415}, { 1013} }, // SOTFRT
    { {         0}, {    0} },          
};

SR__ s_1008[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1014} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1009[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1015} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1010[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -187} }, 
};

SR__ s_1011[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       665}, { 1016} }, // sim
    { {       261}, { 1017} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1012[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       416}, { 1018} }, // SC
    { {         0}, {    0} },      
};

SR__ s_1013[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1019} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1014[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1020} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1015[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -188} }, 
};

SR__ s_1016[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       666}, { 1021} }, // smax
    { {       261}, { 1022} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1017[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       417}, { 1023} }, // SIM
    { {         0}, {    0} },       
};

SR__ s_1018[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1024} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1019[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1025} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1020[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -189} }, 
};

SR__ s_1021[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       667}, { 1026} }, // sgl
    { {       261}, { 1027} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1022[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       418}, { 1028} }, // SMAX
    { {         0}, {    0} },        
};

SR__ s_1023[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1029} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1024[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1030} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1025[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -190} }, 
};

SR__ s_1026[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       668}, { 1031} }, // sgr
    { {       261}, { 1032} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1027[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       419}, { 1033} }, // SGL
    { {         0}, {    0} },       
};

SR__ s_1028[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1034} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1029[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1035} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1030[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -191} }, 
};

SR__ s_1031[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       669}, { 1036} }, // sbv
    { {       261}, { 1037} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1032[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       420}, { 1038} }, // SGR
    { {         0}, {    0} },       
};

SR__ s_1033[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1039} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1034[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1040} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1035[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -192} }, 
};

SR__ s_1036[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       670}, { 1041} }, // smics
    { {       261}, { 1042} }, // LP   
    { {         0}, {    0} },         
};

SR__ s_1037[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       421}, { 1043} }, // SBV
    { {         0}, {    0} },       
};

SR__ s_1038[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1044} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1039[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1045} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1040[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -194} }, 
};

SR__ s_1041[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       671}, { 1046} }, // smod
    { {       261}, { 1047} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1042[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       422}, { 1048} }, // SMICS
    { {         0}, {    0} },         
};

SR__ s_1043[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1049} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1044[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1050} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1045[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -195} }, 
};

SR__ s_1046[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       672}, { 1051} }, // so
    { {       261}, { 1052} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1047[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       423}, { 1053} }, // SMOD
    { {         0}, {    0} },        
};

SR__ s_1048[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1054} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1049[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1055} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1050[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -196} }, 
};

SR__ s_1051[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       673}, { 1056} }, // sso
    { {       261}, { 1057} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1052[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       424}, { 1058} }, // SO
    { {         0}, {    0} },      
};

SR__ s_1053[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1059} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1054[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1060} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1055[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -197} }, 
};

SR__ s_1056[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       674}, { 1061} }, // tbd
    { {       261}, { 1062} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1057[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       425}, { 1063} }, // SSO
    { {         0}, {    0} },       
};

SR__ s_1058[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1064} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1059[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1065} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1060[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -198} }, 
};

SR__ s_1061[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       675}, { 1066} }, // tc
    { {       261}, { 1067} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1062[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       426}, { 1068} }, // TBD
    { {         0}, {    0} },       
};

SR__ s_1063[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1069} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1064[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1070} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1065[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -199} }, 
};

SR__ s_1066[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       676}, { 1071} }, // td
    { {       261}, { 1072} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1067[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       427}, { 1073} }, // TC
    { {         0}, {    0} },      
};

SR__ s_1068[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1074} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1069[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1075} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1070[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -200} }, 
};

SR__ s_1071[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       677}, { 1076} }, // te
    { {       261}, { 1077} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1072[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       428}, { 1078} }, // TD
    { {         0}, {    0} },      
};

SR__ s_1073[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1079} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1074[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1080} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1075[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -201} }, 
};

SR__ s_1076[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       678}, { 1081} }, // tpr
    { {       261}, { 1082} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1077[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       429}, { 1083} }, // TE
    { {         0}, {    0} },      
};

SR__ s_1078[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1084} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1079[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1085} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1080[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -202} }, 
};

SR__ s_1081[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       679}, { 1086} }, // trf
    { {       261}, { 1087} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1082[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       430}, { 1088} }, // TPR
    { {         0}, {    0} },       
};

SR__ s_1083[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1089} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1084[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1090} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1085[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -203} }, 
};

SR__ s_1086[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       680}, { 1091} }, // tw
    { {       261}, { 1092} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1087[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       431}, { 1093} }, // TRF
    { {         0}, {    0} },       
};

SR__ s_1088[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1094} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1089[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1095} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1090[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -204} }, 
};

SR__ s_1091[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       681}, { 1096} }, // tan
    { {       261}, { 1097} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1092[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       432}, { 1098} }, // TW
    { {         0}, {    0} },      
};

SR__ s_1093[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1099} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1094[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1100} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1095[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -205} }, 
};

SR__ s_1096[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       682}, { 1101} }, // tls
    { {       261}, { 1102} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1097[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       433}, { 1103} }, // TAN
    { {         0}, {    0} },       
};

SR__ s_1098[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1104} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1099[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1105} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1100[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -206} }, 
};

SR__ s_1101[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       683}, { 1106} }, // trs
    { {       261}, { 1107} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1102[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       434}, { 1108} }, // TLS
    { {         0}, {    0} },       
};

SR__ s_1103[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1109} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1104[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1110} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1105[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -207} }, 
};

SR__ s_1106[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       684}, { 1111} }, // tlc
    { {       261}, { 1112} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1107[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       435}, { 1113} }, // TRS
    { {         0}, {    0} },       
};

SR__ s_1108[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       510}, { 1114} }, // string
    { {       258}, {  524} }, // STRING
    { {         0}, {    0} },          
};

SR__ s_1109[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1115} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1110[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -208} }, 
};

SR__ s_1111[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       685}, { 1116} }, // tld
    { {       261}, { 1117} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1112[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       436}, { 1118} }, // TLC
    { {         0}, {    0} },       
};

SR__ s_1113[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       510}, { 1119} }, // string
    { {       258}, {  524} }, // STRING
    { {         0}, {    0} },          
};

SR__ s_1114[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1120} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1115[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -209} }, 
};

SR__ s_1116[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       686}, { 1121} }, // tldir
    { {       261}, { 1122} }, // LP   
    { {         0}, {    0} },         
};

SR__ s_1117[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       437}, { 1123} }, // TLD
    { {         0}, {    0} },       
};

SR__ s_1118[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1124} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1119[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1125} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1120[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -210} }, 
};

SR__ s_1121[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       687}, { 1126} }, // tlf
    { {       261}, { 1127} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1122[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       438}, { 1128} }, // TLDIR
    { {         0}, {    0} },         
};

SR__ s_1123[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1129} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1124[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1130} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1125[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -211} }, 
};

SR__ s_1126[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       688}, { 1131} }, // tlfn
    { {       261}, { 1132} }, // LP  
    { {         0}, {    0} },        
};

SR__ s_1127[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       439}, { 1133} }, // TLF
    { {         0}, {    0} },       
};

SR__ s_1128[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       510}, { 1134} }, // string
    { {       258}, {  524} }, // STRING
    { {         0}, {    0} },          
};

SR__ s_1129[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1135} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1130[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -212} }, 
};

SR__ s_1131[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       689}, { 1136} }, // tl
    { {       261}, { 1137} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1132[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       440}, { 1138} }, // TLFN
    { {         0}, {    0} },        
};

SR__ s_1133[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1139} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1134[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1140} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1135[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -213} }, 
};

SR__ s_1136[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       690}, { 1141} }, // uo
    { {       261}, { 1142} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1137[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       441}, { 1143} }, // TL
    { {         0}, {    0} },      
};

SR__ s_1138[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       510}, { 1144} }, // string
    { {       258}, {  524} }, // STRING
    { {         0}, {    0} },          
};

SR__ s_1139[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1145} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1140[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -214} }, 
};

SR__ s_1141[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       691}, { 1146} }, // v 
    { {       261}, { 1147} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1142[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       442}, { 1148} }, // UO
    { {         0}, {    0} },      
};

SR__ s_1143[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1149} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1144[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1150} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1145[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -215} }, 
};

SR__ s_1146[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       692}, { 1151} }, // va
    { {       261}, { 1152} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1147[] =
{
    { { REQ_TOKEN}, {    2} },     
    { {       443}, { 1153} }, // V
    { {         0}, {    0} },     
};

SR__ s_1148[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1154} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1149[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1155} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1150[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -216} }, 
};

SR__ s_1151[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       693}, { 1156} }, // vd
    { {       261}, { 1157} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1152[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       444}, { 1158} }, // VA
    { {         0}, {    0} },      
};

SR__ s_1153[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1159} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1154[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1160} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1155[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -217} }, 
};

SR__ s_1156[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       694}, { 1161} }, // wa
    { {       261}, { 1162} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1157[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       445}, { 1163} }, // VD
    { {         0}, {    0} },      
};

SR__ s_1158[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1164} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1159[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1165} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1160[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -218} }, 
};

SR__ s_1161[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       695}, { 1166} }, // wd
    { {       261}, { 1167} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1162[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       446}, { 1168} }, // WA
    { {         0}, {    0} },      
};

SR__ s_1163[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1169} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1164[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1170} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1165[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -219} }, 
};

SR__ s_1166[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       696}, { 1171} }, // wf
    { {       261}, { 1172} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1167[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       447}, { 1173} }, // WD
    { {         0}, {    0} },      
};

SR__ s_1168[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1174} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1169[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1175} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1170[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -220} }, 
};

SR__ s_1171[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       697}, { 1176} }, // wn
    { {       261}, { 1177} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1172[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       448}, { 1178} }, // WF
    { {         0}, {    0} },      
};

SR__ s_1173[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1179} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1174[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1180} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1175[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -221} }, 
};

SR__ s_1176[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       698}, { 1181} }, // wr
    { {       261}, { 1182} }, // LP
    { {         0}, {    0} },      
};

SR__ s_1177[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       449}, { 1183} }, // WN
    { {         0}, {    0} },      
};

SR__ s_1178[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1184} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1179[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1185} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1180[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -222} }, 
};

SR__ s_1181[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       699}, { 1186} }, // wra
    { {       261}, { 1187} }, // LP 
    { {         0}, {    0} },       
};

SR__ s_1182[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       450}, { 1188} }, // WR
    { {         0}, {    0} },      
};

SR__ s_1183[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1189} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1184[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1190} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1185[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -223} }, 
};

SR__ s_1186[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1191} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1187[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       451}, { 1192} }, // WRA
    { {         0}, {    0} },       
};

SR__ s_1188[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1193} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1189[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1194} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1190[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -224} }, 
};

SR__ s_1191[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -26} }, 
};

SR__ s_1192[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       509}, { 1195} }, // double
    { {       257}, {   19} }, // DOUBLE
    { {         0}, {    0} },          
};

SR__ s_1193[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1196} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1194[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -225} }, 
};

SR__ s_1195[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       262}, { 1197} }, // RP
    { {         0}, {    0} },      
};

SR__ s_1196[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -226} }, 
};

SR__ s_1197[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -227} }, 
};


// State array:
SR__ *s_state[] =
{
  s_0,  s_1,  s_2,  s_3,  s_4,  s_5,  s_6,  s_7,  s_8,  s_9,
  s_10,  s_11,  s_12,  s_13,  s_14,  s_15,  s_16,  s_17,  s_18,  s_19,
  s_20,  s_21,  s_22,  s_23,  s_24,  s_25,  s_26,  s_27,  s_28,  s_29,
  s_30,  s_31,  s_32,  s_33,  s_34,  s_35,  s_36,  s_37,  s_38,  s_39,
  s_40,  s_41,  s_42,  s_43,  s_44,  s_45,  s_46,  s_47,  s_48,  s_49,
  s_50,  s_51,  s_52,  s_53,  s_54,  s_55,  s_56,  s_57,  s_58,  s_59,
  s_60,  s_61,  s_62,  s_63,  s_64,  s_65,  s_66,  s_67,  s_68,  s_69,
  s_70,  s_71,  s_72,  s_73,  s_74,  s_75,  s_76,  s_77,  s_78,  s_79,
  s_80,  s_81,  s_82,  s_83,  s_84,  s_85,  s_86,  s_87,  s_88,  s_89,
  s_90,  s_91,  s_92,  s_93,  s_94,  s_95,  s_96,  s_97,  s_98,  s_99,
  s_100,  s_101,  s_102,  s_103,  s_104,  s_105,  s_106,  s_107,  s_108,  s_109,
  s_110,  s_111,  s_112,  s_113,  s_114,  s_115,  s_116,  s_117,  s_118,  s_119,
  s_120,  s_121,  s_122,  s_123,  s_124,  s_125,  s_126,  s_127,  s_128,  s_129,
  s_130,  s_131,  s_132,  s_133,  s_134,  s_135,  s_136,  s_137,  s_138,  s_139,
  s_140,  s_141,  s_142,  s_143,  s_144,  s_145,  s_146,  s_147,  s_148,  s_149,
  s_150,  s_151,  s_152,  s_153,  s_154,  s_155,  s_156,  s_157,  s_158,  s_159,
  s_160,  s_161,  s_162,  s_163,  s_164,  s_165,  s_166,  s_167,  s_168,  s_169,
  s_170,  s_171,  s_172,  s_173,  s_174,  s_175,  s_176,  s_177,  s_178,  s_179,
  s_180,  s_181,  s_182,  s_183,  s_184,  s_185,  s_186,  s_187,  s_188,  s_189,
  s_190,  s_191,  s_192,  s_193,  s_194,  s_195,  s_196,  s_197,  s_198,  s_199,
  s_200,  s_201,  s_202,  s_203,  s_204,  s_205,  s_206,  s_207,  s_208,  s_209,
  s_210,  s_211,  s_212,  s_213,  s_214,  s_215,  s_216,  s_217,  s_218,  s_219,
  s_220,  s_221,  s_222,  s_223,  s_224,  s_225,  s_226,  s_227,  s_228,  s_229,
  s_230,  s_231,  s_232,  s_233,  s_234,  s_235,  s_236,  s_237,  s_238,  s_239,
  s_240,  s_241,  s_242,  s_243,  s_244,  s_245,  s_246,  s_247,  s_248,  s_249,
  s_250,  s_251,  s_252,  s_253,  s_254,  s_255,  s_256,  s_257,  s_258,  s_259,
  s_260,  s_261,  s_262,  s_263,  s_264,  s_265,  s_266,  s_267,  s_268,  s_269,
  s_270,  s_271,  s_272,  s_273,  s_274,  s_275,  s_276,  s_277,  s_278,  s_279,
  s_280,  s_281,  s_282,  s_283,  s_284,  s_285,  s_286,  s_287,  s_288,  s_289,
  s_290,  s_291,  s_292,  s_293,  s_294,  s_295,  s_296,  s_297,  s_298,  s_299,
  s_300,  s_301,  s_302,  s_303,  s_304,  s_305,  s_306,  s_307,  s_308,  s_309,
  s_310,  s_311,  s_312,  s_313,  s_314,  s_315,  s_316,  s_317,  s_318,  s_319,
  s_320,  s_321,  s_322,  s_323,  s_324,  s_325,  s_326,  s_327,  s_328,  s_329,
  s_330,  s_331,  s_332,  s_333,  s_334,  s_335,  s_336,  s_337,  s_338,  s_339,
  s_340,  s_341,  s_342,  s_343,  s_344,  s_345,  s_346,  s_347,  s_348,  s_349,
  s_350,  s_351,  s_352,  s_353,  s_354,  s_355,  s_356,  s_357,  s_358,  s_359,
  s_360,  s_361,  s_362,  s_363,  s_364,  s_365,  s_366,  s_367,  s_368,  s_369,
  s_370,  s_371,  s_372,  s_373,  s_374,  s_375,  s_376,  s_377,  s_378,  s_379,
  s_380,  s_381,  s_382,  s_383,  s_384,  s_385,  s_386,  s_387,  s_388,  s_389,
  s_390,  s_391,  s_392,  s_393,  s_394,  s_395,  s_396,  s_397,  s_398,  s_399,
  s_400,  s_401,  s_402,  s_403,  s_404,  s_405,  s_406,  s_407,  s_408,  s_409,
  s_410,  s_411,  s_412,  s_413,  s_414,  s_415,  s_416,  s_417,  s_418,  s_419,
  s_420,  s_421,  s_422,  s_423,  s_424,  s_425,  s_426,  s_427,  s_428,  s_429,
  s_430,  s_431,  s_432,  s_433,  s_434,  s_435,  s_436,  s_437,  s_438,  s_439,
  s_440,  s_441,  s_442,  s_443,  s_444,  s_445,  s_446,  s_447,  s_448,  s_449,
  s_450,  s_451,  s_452,  s_453,  s_454,  s_455,  s_456,  s_457,  s_458,  s_459,
  s_460,  s_461,  s_462,  s_463,  s_464,  s_465,  s_466,  s_467,  s_468,  s_469,
  s_470,  s_471,  s_472,  s_473,  s_474,  s_475,  s_476,  s_477,  s_478,  s_479,
  s_480,  s_481,  s_482,  s_483,  s_484,  s_485,  s_486,  s_487,  s_488,  s_489,
  s_490,  s_491,  s_492,  s_493,  s_494,  s_495,  s_496,  s_497,  s_498,  s_499,
  s_500,  s_501,  s_502,  s_503,  s_504,  s_505,  s_506,  s_507,  s_508,  s_509,
  s_510,  s_511,  s_512,  s_513,  s_514,  s_515,  s_516,  s_517,  s_518,  s_519,
  s_520,  s_521,  s_522,  s_523,  s_524,  s_525,  s_526,  s_527,  s_528,  s_529,
  s_530,  s_531,  s_532,  s_533,  s_534,  s_535,  s_536,  s_537,  s_538,  s_539,
  s_540,  s_541,  s_542,  s_543,  s_544,  s_545,  s_546,  s_547,  s_548,  s_549,
  s_550,  s_551,  s_552,  s_553,  s_554,  s_555,  s_556,  s_557,  s_558,  s_559,
  s_560,  s_561,  s_562,  s_563,  s_564,  s_565,  s_566,  s_567,  s_568,  s_569,
  s_570,  s_571,  s_572,  s_573,  s_574,  s_575,  s_576,  s_577,  s_578,  s_579,
  s_580,  s_581,  s_582,  s_583,  s_584,  s_585,  s_586,  s_587,  s_588,  s_589,
  s_590,  s_591,  s_592,  s_593,  s_594,  s_595,  s_596,  s_597,  s_598,  s_599,
  s_600,  s_601,  s_602,  s_603,  s_604,  s_605,  s_606,  s_607,  s_608,  s_609,
  s_610,  s_611,  s_612,  s_613,  s_614,  s_615,  s_616,  s_617,  s_618,  s_619,
  s_620,  s_621,  s_622,  s_623,  s_624,  s_625,  s_626,  s_627,  s_628,  s_629,
  s_630,  s_631,  s_632,  s_633,  s_634,  s_635,  s_636,  s_637,  s_638,  s_639,
  s_640,  s_641,  s_642,  s_643,  s_644,  s_645,  s_646,  s_647,  s_648,  s_649,
  s_650,  s_651,  s_652,  s_653,  s_654,  s_655,  s_656,  s_657,  s_658,  s_659,
  s_660,  s_661,  s_662,  s_663,  s_664,  s_665,  s_666,  s_667,  s_668,  s_669,
  s_670,  s_671,  s_672,  s_673,  s_674,  s_675,  s_676,  s_677,  s_678,  s_679,
  s_680,  s_681,  s_682,  s_683,  s_684,  s_685,  s_686,  s_687,  s_688,  s_689,
  s_690,  s_691,  s_692,  s_693,  s_694,  s_695,  s_696,  s_697,  s_698,  s_699,
  s_700,  s_701,  s_702,  s_703,  s_704,  s_705,  s_706,  s_707,  s_708,  s_709,
  s_710,  s_711,  s_712,  s_713,  s_714,  s_715,  s_716,  s_717,  s_718,  s_719,
  s_720,  s_721,  s_722,  s_723,  s_724,  s_725,  s_726,  s_727,  s_728,  s_729,
  s_730,  s_731,  s_732,  s_733,  s_734,  s_735,  s_736,  s_737,  s_738,  s_739,
  s_740,  s_741,  s_742,  s_743,  s_744,  s_745,  s_746,  s_747,  s_748,  s_749,
  s_750,  s_751,  s_752,  s_753,  s_754,  s_755,  s_756,  s_757,  s_758,  s_759,
  s_760,  s_761,  s_762,  s_763,  s_764,  s_765,  s_766,  s_767,  s_768,  s_769,
  s_770,  s_771,  s_772,  s_773,  s_774,  s_775,  s_776,  s_777,  s_778,  s_779,
  s_780,  s_781,  s_782,  s_783,  s_784,  s_785,  s_786,  s_787,  s_788,  s_789,
  s_790,  s_791,  s_792,  s_793,  s_794,  s_795,  s_796,  s_797,  s_798,  s_799,
  s_800,  s_801,  s_802,  s_803,  s_804,  s_805,  s_806,  s_807,  s_808,  s_809,
  s_810,  s_811,  s_812,  s_813,  s_814,  s_815,  s_816,  s_817,  s_818,  s_819,
  s_820,  s_821,  s_822,  s_823,  s_824,  s_825,  s_826,  s_827,  s_828,  s_829,
  s_830,  s_831,  s_832,  s_833,  s_834,  s_835,  s_836,  s_837,  s_838,  s_839,
  s_840,  s_841,  s_842,  s_843,  s_844,  s_845,  s_846,  s_847,  s_848,  s_849,
  s_850,  s_851,  s_852,  s_853,  s_854,  s_855,  s_856,  s_857,  s_858,  s_859,
  s_860,  s_861,  s_862,  s_863,  s_864,  s_865,  s_866,  s_867,  s_868,  s_869,
  s_870,  s_871,  s_872,  s_873,  s_874,  s_875,  s_876,  s_877,  s_878,  s_879,
  s_880,  s_881,  s_882,  s_883,  s_884,  s_885,  s_886,  s_887,  s_888,  s_889,
  s_890,  s_891,  s_892,  s_893,  s_894,  s_895,  s_896,  s_897,  s_898,  s_899,
  s_900,  s_901,  s_902,  s_903,  s_904,  s_905,  s_906,  s_907,  s_908,  s_909,
  s_910,  s_911,  s_912,  s_913,  s_914,  s_915,  s_916,  s_917,  s_918,  s_919,
  s_920,  s_921,  s_922,  s_923,  s_924,  s_925,  s_926,  s_927,  s_928,  s_929,
  s_930,  s_931,  s_932,  s_933,  s_934,  s_935,  s_936,  s_937,  s_938,  s_939,
  s_940,  s_941,  s_942,  s_943,  s_944,  s_945,  s_946,  s_947,  s_948,  s_949,
  s_950,  s_951,  s_952,  s_953,  s_954,  s_955,  s_956,  s_957,  s_958,  s_959,
  s_960,  s_961,  s_962,  s_963,  s_964,  s_965,  s_966,  s_967,  s_968,  s_969,
  s_970,  s_971,  s_972,  s_973,  s_974,  s_975,  s_976,  s_977,  s_978,  s_979,
  s_980,  s_981,  s_982,  s_983,  s_984,  s_985,  s_986,  s_987,  s_988,  s_989,
  s_990,  s_991,  s_992,  s_993,  s_994,  s_995,  s_996,  s_997,  s_998,  s_999,
  s_1000,  s_1001,  s_1002,  s_1003,  s_1004,  s_1005,  s_1006,  s_1007,  s_1008,  s_1009,
  s_1010,  s_1011,  s_1012,  s_1013,  s_1014,  s_1015,  s_1016,  s_1017,  s_1018,  s_1019,
  s_1020,  s_1021,  s_1022,  s_1023,  s_1024,  s_1025,  s_1026,  s_1027,  s_1028,  s_1029,
  s_1030,  s_1031,  s_1032,  s_1033,  s_1034,  s_1035,  s_1036,  s_1037,  s_1038,  s_1039,
  s_1040,  s_1041,  s_1042,  s_1043,  s_1044,  s_1045,  s_1046,  s_1047,  s_1048,  s_1049,
  s_1050,  s_1051,  s_1052,  s_1053,  s_1054,  s_1055,  s_1056,  s_1057,  s_1058,  s_1059,
  s_1060,  s_1061,  s_1062,  s_1063,  s_1064,  s_1065,  s_1066,  s_1067,  s_1068,  s_1069,
  s_1070,  s_1071,  s_1072,  s_1073,  s_1074,  s_1075,  s_1076,  s_1077,  s_1078,  s_1079,
  s_1080,  s_1081,  s_1082,  s_1083,  s_1084,  s_1085,  s_1086,  s_1087,  s_1088,  s_1089,
  s_1090,  s_1091,  s_1092,  s_1093,  s_1094,  s_1095,  s_1096,  s_1097,  s_1098,  s_1099,
  s_1100,  s_1101,  s_1102,  s_1103,  s_1104,  s_1105,  s_1106,  s_1107,  s_1108,  s_1109,
  s_1110,  s_1111,  s_1112,  s_1113,  s_1114,  s_1115,  s_1116,  s_1117,  s_1118,  s_1119,
  s_1120,  s_1121,  s_1122,  s_1123,  s_1124,  s_1125,  s_1126,  s_1127,  s_1128,  s_1129,
  s_1130,  s_1131,  s_1132,  s_1133,  s_1134,  s_1135,  s_1136,  s_1137,  s_1138,  s_1139,
  s_1140,  s_1141,  s_1142,  s_1143,  s_1144,  s_1145,  s_1146,  s_1147,  s_1148,  s_1149,
  s_1150,  s_1151,  s_1152,  s_1153,  s_1154,  s_1155,  s_1156,  s_1157,  s_1158,  s_1159,
  s_1160,  s_1161,  s_1162,  s_1163,  s_1164,  s_1165,  s_1166,  s_1167,  s_1168,  s_1169,
  s_1170,  s_1171,  s_1172,  s_1173,  s_1174,  s_1175,  s_1176,  s_1177,  s_1178,  s_1179,
  s_1180,  s_1181,  s_1182,  s_1183,  s_1184,  s_1185,  s_1186,  s_1187,  s_1188,  s_1189,
  s_1190,  s_1191,  s_1192,  s_1193,  s_1194,  s_1195,  s_1196,  s_1197,
};

} // anonymous namespace ends



// If the parsing function call uses arguments, then provide an overloaded
// function.  The code below doesn't rely on parameters, so no arguments are
// required.  Furthermore, parse uses a function try block to allow us to do
// ACCEPT and ABORT from anywhere, even from within members called by actions,
// simply throwing the appropriate exceptions.

ParserBase::ParserBase()
:
    d_stackIdx__(-1),
    // $insert debuginit
    d_debug__(false),
    d_nErrors__(0),
    // $insert requiredtokens
    d_requiredTokens__(0),
    d_acceptedTokens__(d_requiredTokens__),
    d_token__(_UNDETERMINED_),
    d_nextToken__(_UNDETERMINED_)
{}


void Parser::print__()
{
// $insert print
}

void ParserBase::clearin()
{
    d_token__ = d_nextToken__ = _UNDETERMINED_;
}

void ParserBase::push__(size_t state)
{
    if (static_cast<size_t>(d_stackIdx__ + 1) == d_stateStack__.size())
    {
        size_t newSize = d_stackIdx__ + STACK_EXPANSION;
        d_stateStack__.resize(newSize);
        d_valueStack__.resize(newSize);
    }
    ++d_stackIdx__;
    d_stateStack__[d_stackIdx__] = d_state__ = state;
    *(d_vsp__ = &d_valueStack__[d_stackIdx__]) = d_val__;
}

void ParserBase::popToken__()
{
    d_token__ = d_nextToken__;

    d_val__ = d_nextVal__;
    d_nextVal__ = STYPE__();

    d_nextToken__ = _UNDETERMINED_;
}
     
void ParserBase::pushToken__(int token)
{
    d_nextToken__ = d_token__;
    d_nextVal__ = d_val__;
    d_token__ = token;
}
     
void ParserBase::pop__(size_t count)
{
    if (d_stackIdx__ < static_cast<int>(count))
    {
        ABORT();
    }

    d_stackIdx__ -= count;
    d_state__ = d_stateStack__[d_stackIdx__];
    d_vsp__ = &d_valueStack__[d_stackIdx__];
}

inline size_t ParserBase::top__() const
{
    return d_stateStack__[d_stackIdx__];
}

void Parser::executeAction(int production)
{
    if (d_token__ != _UNDETERMINED_)
        pushToken__(d_token__);     // save an already available token

                                    // save default non-nested block $$
    if (int size = s_productionInfo[production].d_size)
        d_val__ = d_vsp__[1 - size];

    switch (production)
    {
        // $insert actioncases
        
        case 5:
#line 48 "./parser.y"
        {d_val__.d = atof(d_scanner->matched().c_str());}
        break;

        case 6:
#line 49 "./parser.y"
        {d_val__.s = new std::string(d_scanner->matched().c_str());}
        break;

        case 7:
#line 51 "./parser.y"
        {parent->model.play_mode = (Model::play_mode_type)d_vsp__[-1].i; cout << "init Response received " << parent->model.play_mode << endl;}
        break;

        case 8:
#line 52 "./parser.y"
        {d_val__.i = Model::before_kick_off ;}
        break;

        case 9:
#line 53 "./parser.y"
        {d_val__.i = Model::play_on ;}
        break;

        case 10:
#line 54 "./parser.y"
        {d_val__.i = Model::time_over ;}
        break;

        case 11:
#line 55 "./parser.y"
        {d_val__.i = Model::kick_off_l ;}
        break;

        case 12:
#line 56 "./parser.y"
        {d_val__.i = Model::kick_off_r ;}
        break;

        case 13:
#line 57 "./parser.y"
        {d_val__.i = Model::kick_in_l ;}
        break;

        case 14:
#line 58 "./parser.y"
        {d_val__.i = Model::kick_in_r ;}
        break;

        case 15:
#line 59 "./parser.y"
        {d_val__.i = Model::free_kick_l ;}
        break;

        case 16:
#line 60 "./parser.y"
        {d_val__.i = Model::free_kick_r ;}
        break;

        case 17:
#line 61 "./parser.y"
        {d_val__.i = Model::corner_kick_l ;}
        break;

        case 18:
#line 62 "./parser.y"
        {d_val__.i = Model::corner_kick_r ;}
        break;

        case 19:
#line 63 "./parser.y"
        {d_val__.i = Model::goal_kick_l ;}
        break;

        case 20:
#line 64 "./parser.y"
        {d_val__.i = Model::goal_kick_r ;}
        break;

        case 21:
#line 65 "./parser.y"
        {d_val__.i = Model::goal_l ;}
        break;

        case 22:
#line 66 "./parser.y"
        {d_val__.i = Model::goal_r ;}
        break;

        case 23:
#line 67 "./parser.y"
        {d_val__.i = Model::drop_ball ;}
        break;

        case 24:
#line 68 "./parser.y"
        {d_val__.i = Model::offside_l ;}
        break;

        case 25:
#line 69 "./parser.y"
        {d_val__.i = Model::offside_r ;}
        break;

        case 26:
#line 81 "./parser.y"
        {cout << "end of server_param version 15" << endl;}
        break;

        case 27:
#line 95 "./parser.y"
        {parent->model.server.audio_cut_dist = d_vsp__[-1].d;}
        break;

        case 28:
#line 96 "./parser.y"
        {parent->model.server.auto_mode = (d_vsp__[-1].d==0?false:true);}
        break;

        case 29:
#line 97 "./parser.y"
        {parent->model.server.back_dash_rate = d_vsp__[-1].d;}
        break;

        case 30:
#line 98 "./parser.y"
        {parent->model.server.back_passes = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 31:
#line 99 "./parser.y"
        {parent->model.server.ball_accel_max = d_vsp__[-1].d;}
        break;

        case 32:
#line 100 "./parser.y"
        {parent->model.server.ball_decay = d_vsp__[-1].d;}
        break;

        case 33:
#line 101 "./parser.y"
        {parent->model.server.ball_rand = d_vsp__[-1].d;}
        break;

        case 34:
#line 102 "./parser.y"
        {parent->model.server.ball_size = d_vsp__[-1].d;}
        break;

        case 35:
#line 103 "./parser.y"
        {parent->model.server.ball_speed_max = d_vsp__[-1].d;}
        break;

        case 36:
#line 104 "./parser.y"
        {parent->model.server.ball_stuck_area = d_vsp__[-1].d;}
        break;

        case 37:
#line 105 "./parser.y"
        {parent->model.server.ball_weight = d_vsp__[-1].d;}
        break;

        case 38:
#line 106 "./parser.y"
        {parent->model.server.catch_ban_cycle = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 39:
#line 107 "./parser.y"
        {parent->model.server.catch_probability = d_vsp__[-1].d;}
        break;

        case 40:
#line 108 "./parser.y"
        {parent->model.server.catchable_area_l = d_vsp__[-1].d;}
        break;

        case 41:
#line 109 "./parser.y"
        {parent->model.server.catchable_area_w = d_vsp__[-1].d;}
        break;

        case 42:
#line 110 "./parser.y"
        {parent->model.server.ckick_margin = d_vsp__[-1].d;}
        break;

        case 43:
#line 111 "./parser.y"
        {parent->model.server.clang_advice_win = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 44:
#line 112 "./parser.y"
        {parent->model.server.clang_define_win = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 45:
#line 113 "./parser.y"
        {parent->model.server.clang_del_win = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 46:
#line 114 "./parser.y"
        {parent->model.server.clang_info_win = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 47:
#line 115 "./parser.y"
        {parent->model.server.clang_mess_delay = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 48:
#line 116 "./parser.y"
        {parent->model.server.clang_mess_per_cycle = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 49:
#line 117 "./parser.y"
        {parent->model.server.clang_meta_win = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 50:
#line 118 "./parser.y"
        {parent->model.server.clang_rule_win = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 51:
#line 119 "./parser.y"
        {parent->model.server.clang_win_size = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 52:
#line 120 "./parser.y"
        {parent->model.server.coach = (d_vsp__[-1].d==0?false:true);}
        break;

        case 53:
#line 121 "./parser.y"
        {parent->model.server.coach_port = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 54:
#line 122 "./parser.y"
        {parent->model.server.coach_w_referee = (d_vsp__[-1].d==0?false:true);}
        break;

        case 55:
#line 123 "./parser.y"
        {parent->model.server.connect_wait = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 56:
#line 124 "./parser.y"
        {parent->model.server.control_radius = d_vsp__[-1].d;}
        break;

        case 57:
#line 125 "./parser.y"
        {parent->model.server.dash_angle_step = d_vsp__[-1].d;}
        break;

        case 58:
#line 126 "./parser.y"
        {parent->model.server.dash_power_rate = d_vsp__[-1].d;}
        break;

        case 59:
#line 127 "./parser.y"
        {currentType->dash_power_rate = (d_vsp__[-1].d);}
        break;

        case 60:
#line 128 "./parser.y"
        {parent->model.server.drop_ball_time = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 61:
#line 129 "./parser.y"
        {parent->model.server.effort_dec = (d_vsp__[-1].d);}
        break;

        case 62:
#line 130 "./parser.y"
        {parent->model.server.effort_dec_thr = (d_vsp__[-1].d);}
        break;

        case 63:
#line 131 "./parser.y"
        {parent->model.server.effort_inc = (d_vsp__[-1].d);}
        break;

        case 64:
#line 132 "./parser.y"
        {parent->model.server.effort_inc_thr = (d_vsp__[-1].d);}
        break;

        case 65:
#line 133 "./parser.y"
        {parent->model.server.effort_init = (d_vsp__[-1].d);}
        break;

        case 66:
#line 134 "./parser.y"
        {parent->model.server.effort_min = (d_vsp__[-1].d);}
        break;

        case 67:
#line 135 "./parser.y"
        {currentType->effort_max = (d_vsp__[-1].d);}
        break;

        case 68:
#line 136 "./parser.y"
        {currentType->effort_min = (d_vsp__[-1].d);}
        break;

        case 69:
#line 137 "./parser.y"
        {parent->model.server.extra_half_time = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 70:
#line 138 "./parser.y"
        {parent->model.server.extra_stamina = (d_vsp__[-1].d);}
        break;

        case 71:
#line 139 "./parser.y"
        {currentType->extra_stamina = (d_vsp__[-1].d);}
        break;

        case 72:
#line 140 "./parser.y"
        {parent->model.server.forbid_kick_off_offside = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 73:
#line 141 "./parser.y"
        {parent->model.server.foul_cycles = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 74:
#line 142 "./parser.y"
        {parent->model.server.foul_detect_probability = d_vsp__[-1].d;}
        break;

        case 75:
#line 143 "./parser.y"
        {currentType->foul_detect_probability = d_vsp__[-1].d;}
        break;

        case 76:
#line 144 "./parser.y"
        {parent->model.server.foul_exponent = d_vsp__[-1].d;}
        break;

        case 77:
#line 145 "./parser.y"
        {parent->model.server.free_kick_faults = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 78:
#line 146 "./parser.y"
        {parent->model.server.freeform_send_period = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 79:
#line 147 "./parser.y"
        {parent->model.server.freeform_wait_period = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 80:
#line 148 "./parser.y"
        {parent->model.server.fullstate_l = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 81:
#line 149 "./parser.y"
        {parent->model.server.fullstate_r = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 82:
#line 150 "./parser.y"
        {parent->model.server.game_log_compression = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 83:
#line 151 "./parser.y"
        {parent->model.server.game_log_dated = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 84:
#line 152 "./parser.y"
        {parent->model.server.game_log_dir = *(d_vsp__[-1].s);}
        break;

        case 85:
#line 153 "./parser.y"
        {parent->model.server.game_log_fixed= static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 86:
#line 154 "./parser.y"
        {parent->model.server.game_log_fixed_name = *(d_vsp__[-1].s);}
        break;

        case 87:
#line 155 "./parser.y"
        {parent->model.server.game_log_version = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 88:
#line 156 "./parser.y"
        {parent->model.server.game_logging = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 89:
#line 157 "./parser.y"
        {parent->model.server.game_over_wait = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 90:
#line 158 "./parser.y"
        {parent->model.server.goal_width = (d_vsp__[-1].d);}
        break;

        case 91:
#line 159 "./parser.y"
        {parent->model.server.goalie_max_moves = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 92:
#line 160 "./parser.y"
        {parent->model.server.golden_goal = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 93:
#line 161 "./parser.y"
        {parent->model.server.half_time = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 94:
#line 162 "./parser.y"
        {parent->model.server.hear_decay = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 95:
#line 163 "./parser.y"
        {parent->model.server.hear_inc = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 96:
#line 164 "./parser.y"
        {parent->model.server.hear_max = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 97:
#line 165 "./parser.y"
        {parent->model.server.inertia_moment = (d_vsp__[-1].d);}
        break;

        case 98:
#line 166 "./parser.y"
        {currentType->inertia_moment = (d_vsp__[-1].d);}
        break;

        case 99:
#line 167 "./parser.y"
        {parent->model.server.keepaway = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 100:
#line 168 "./parser.y"
        {parent->model.server.keepaway_length = (d_vsp__[-1].d);}
        break;

        case 101:
#line 169 "./parser.y"
        {parent->model.server.keepaway_log_dated = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 102:
#line 170 "./parser.y"
        {parent->model.server.keepaway_log_dir = *(d_vsp__[-1].s);}
        break;

        case 103:
#line 171 "./parser.y"
        {parent->model.server.keepaway_log_fixed = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 104:
#line 172 "./parser.y"
        {parent->model.server.keepaway_log_fixed_name = *(d_vsp__[-1].s);}
        break;

        case 105:
#line 173 "./parser.y"
        {parent->model.server.keepaway_logging = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 106:
#line 174 "./parser.y"
        {parent->model.server.keepaway_start = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 107:
#line 175 "./parser.y"
        {parent->model.server.keepaway_width = (d_vsp__[-1].d);}
        break;

        case 108:
#line 176 "./parser.y"
        {parent->model.server.kick_off_wait = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 109:
#line 177 "./parser.y"
        {parent->model.server.kick_power_rate = (d_vsp__[-1].d);}
        break;

        case 110:
#line 178 "./parser.y"
        {currentType->kick_power_rate= (d_vsp__[-1].d);}
        break;

        case 111:
#line 179 "./parser.y"
        {parent->model.server.kick_rand = (d_vsp__[-1].d);}
        break;

        case 112:
#line 180 "./parser.y"
        {currentType->kick_rand = (d_vsp__[-1].d);}
        break;

        case 113:
#line 181 "./parser.y"
        {parent->model.server.kick_rand_factor_l = (d_vsp__[-1].d);}
        break;

        case 114:
#line 182 "./parser.y"
        {parent->model.server.kick_rand_factor_r = (d_vsp__[-1].d);}
        break;

        case 115:
#line 183 "./parser.y"
        {parent->model.server.kickable_margin = (d_vsp__[-1].d);}
        break;

        case 116:
#line 184 "./parser.y"
        {currentType->kickable_margin = (d_vsp__[-1].d);}
        break;

        case 117:
#line 185 "./parser.y"
        {parent->model.server.landmark_file = *(d_vsp__[-1].s);}
        break;

        case 118:
#line 186 "./parser.y"
        {parent->model.server.log_date_format = *(d_vsp__[-1].s);}
        break;

        case 119:
#line 187 "./parser.y"
        {parent->model.server.log_times = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 120:
#line 188 "./parser.y"
        {parent->model.server.max_back_tackle_power = (d_vsp__[-1].d);}
        break;

        case 121:
#line 189 "./parser.y"
        {parent->model.server.max_dash_angle = (d_vsp__[-1].d);}
        break;

        case 122:
#line 190 "./parser.y"
        {parent->model.server.max_dash_power = (d_vsp__[-1].d);}
        break;

        case 123:
#line 191 "./parser.y"
        {parent->model.server.max_goal_kicks = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 124:
#line 192 "./parser.y"
        {parent->model.server.max_tackle_power = (d_vsp__[-1].d);}
        break;

        case 125:
#line 193 "./parser.y"
        {parent->model.server.maxmoment = (d_vsp__[-1].d);}
        break;

        case 126:
#line 194 "./parser.y"
        {parent->model.server.maxneckang = (d_vsp__[-1].d);}
        break;

        case 127:
#line 195 "./parser.y"
        {parent->model.server.maxneckmoment = (d_vsp__[-1].d);}
        break;

        case 128:
#line 196 "./parser.y"
        {parent->model.server.maxpower = (d_vsp__[-1].d);}
        break;

        case 129:
#line 197 "./parser.y"
        {parent->model.server.min_dash_angle = (d_vsp__[-1].d);}
        break;

        case 130:
#line 198 "./parser.y"
        {parent->model.server.min_dash_power = (d_vsp__[-1].d);}
        break;

        case 131:
#line 199 "./parser.y"
        {parent->model.server.minmoment = (d_vsp__[-1].d);}
        break;

        case 132:
#line 200 "./parser.y"
        {parent->model.server.minneckang = (d_vsp__[-1].d);}
        break;

        case 133:
#line 201 "./parser.y"
        {parent->model.server.minneckmoment = (d_vsp__[-1].d);}
        break;

        case 134:
#line 202 "./parser.y"
        {parent->model.server.minpower = (d_vsp__[-1].d);}
        break;

        case 135:
#line 203 "./parser.y"
        {parent->model.server.nr_extra_halfs = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 136:
#line 204 "./parser.y"
        {parent->model.server.nr_normal_halfs = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 137:
#line 205 "./parser.y"
        {parent->model.server.offside_active_area_size = (d_vsp__[-1].d);}
        break;

        case 138:
#line 206 "./parser.y"
        {parent->model.server.offside_kick_margin = (d_vsp__[-1].d);}
        break;

        case 139:
#line 207 "./parser.y"
        {parent->model.server.olcoach_port = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 140:
#line 208 "./parser.y"
        {parent->model.server.old_coach_hear = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 141:
#line 209 "./parser.y"
        {parent->model.server.pen_allow_mult_kicks = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 142:
#line 210 "./parser.y"
        {parent->model.server.pen_before_setup_wait = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 143:
#line 211 "./parser.y"
        {parent->model.server.pen_coach_moves_players = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 144:
#line 212 "./parser.y"
        {parent->model.server.pen_dist_x = (d_vsp__[-1].d);}
        break;

        case 145:
#line 213 "./parser.y"
        {parent->model.server.pen_max_extra_kicks = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 146:
#line 214 "./parser.y"
        {parent->model.server.pen_max_goalie_dist_x = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 147:
#line 215 "./parser.y"
        {parent->model.server.pen_nr_kicks = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 148:
#line 216 "./parser.y"
        {parent->model.server.pen_random_winner = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 149:
#line 217 "./parser.y"
        {parent->model.server.pen_ready_wait = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 150:
#line 218 "./parser.y"
        {parent->model.server.pen_setup_wait = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 151:
#line 219 "./parser.y"
        {parent->model.server.pen_taken_wait = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 152:
#line 220 "./parser.y"
        {parent->model.server.penalty_shoot_outs = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 153:
#line 221 "./parser.y"
        {parent->model.server.player_accel_max = (d_vsp__[-1].d);}
        break;

        case 154:
#line 222 "./parser.y"
        {parent->model.server.player_decay = (d_vsp__[-1].d);}
        break;

        case 155:
#line 223 "./parser.y"
        {currentType->player_decay= (d_vsp__[-1].d);}
        break;

        case 156:
#line 224 "./parser.y"
        {parent->model.server.player_rand = (d_vsp__[-1].d);}
        break;

        case 157:
#line 225 "./parser.y"
        {parent->model.server.player_size = (d_vsp__[-1].d);}
        break;

        case 158:
#line 226 "./parser.y"
        {currentType->player_size = (d_vsp__[-1].d);}
        break;

        case 159:
#line 227 "./parser.y"
        {parent->model.server.player_speed_max = (d_vsp__[-1].d);}
        break;

        case 160:
#line 228 "./parser.y"
        {currentType->player_speed_max = (d_vsp__[-1].d);}
        break;

        case 161:
#line 229 "./parser.y"
        {parent->model.server.player_speed_max_min = (d_vsp__[-1].d);}
        break;

        case 162:
#line 230 "./parser.y"
        {parent->model.server.player_weight = (d_vsp__[-1].d);}
        break;

        case 163:
#line 231 "./parser.y"
        {parent->model.server.point_to_ban = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 164:
#line 232 "./parser.y"
        {parent->model.server.point_to_duration = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 165:
#line 233 "./parser.y"
        {parent->model.server.port = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 166:
#line 234 "./parser.y"
        {parent->model.server.prand_factor_l = (d_vsp__[-1].d);}
        break;

        case 167:
#line 235 "./parser.y"
        {parent->model.server.prand_factor_r = (d_vsp__[-1].d);}
        break;

        case 168:
#line 236 "./parser.y"
        {parent->model.server.profile = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 169:
#line 237 "./parser.y"
        {parent->model.server.proper_goal_kicks = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 170:
#line 238 "./parser.y"
        {parent->model.server.quantize_step = (d_vsp__[-1].d);}
        break;

        case 171:
#line 239 "./parser.y"
        {parent->model.server.quantize_step_l = (d_vsp__[-1].d);}
        break;

        case 172:
#line 240 "./parser.y"
        {parent->model.server.record_messages = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 173:
#line 241 "./parser.y"
        {parent->model.server.recover_dec = (d_vsp__[-1].d);}
        break;

        case 174:
#line 242 "./parser.y"
        {parent->model.server.recover_dec_thr = (d_vsp__[-1].d);}
        break;

        case 175:
#line 243 "./parser.y"
        {parent->model.server.recover_init = (d_vsp__[-1].d);}
        break;

        case 176:
#line 244 "./parser.y"
        {parent->model.server.recover_min = (d_vsp__[-1].d);}
        break;

        case 177:
#line 245 "./parser.y"
        {parent->model.server.recv_step = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 178:
#line 246 "./parser.y"
        {parent->model.server.red_card_probability = (d_vsp__[-1].d);}
        break;

        case 179:
#line 247 "./parser.y"
        {parent->model.server.say_coach_cnt_max = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 180:
#line 248 "./parser.y"
        {parent->model.server.say_coach_msg_size = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 181:
#line 249 "./parser.y"
        {parent->model.server.say_msg_size = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 182:
#line 250 "./parser.y"
        {parent->model.server.send_comms = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 183:
#line 251 "./parser.y"
        {parent->model.server.send_step = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 184:
#line 252 "./parser.y"
        {parent->model.server.send_vi_step = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 185:
#line 253 "./parser.y"
        {parent->model.server.sense_body_step = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 186:
#line 254 "./parser.y"
        {parent->model.server.side_dash_rate = (d_vsp__[-1].d);}
        break;

        case 187:
#line 255 "./parser.y"
        {parent->model.server.simulator_step = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 188:
#line 256 "./parser.y"
        {parent->model.server.slow_down_factor = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 189:
#line 257 "./parser.y"
        {parent->model.server.slowness_on_top_for_left_team = (d_vsp__[-1].d);}
        break;

        case 190:
#line 258 "./parser.y"
        {parent->model.server.slowness_on_top_for_right_team = (d_vsp__[-1].d);}
        break;

        case 191:
#line 259 "./parser.y"
        {parent->model.server.stamina_capacity = (d_vsp__[-1].d);}
        break;

        case 192:
#line 260 "./parser.y"
        {parent->model.server.stamina_inc_max = (d_vsp__[-1].d);}
        break;

        case 193:
#line 261 "./parser.y"
        {currentType->stamina_inc_max = (d_vsp__[-1].d);}
        break;

        case 194:
#line 262 "./parser.y"
        {parent->model.server.stamina_max = (d_vsp__[-1].d);}
        break;

        case 195:
#line 263 "./parser.y"
        {parent->model.server.start_goal_l = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 196:
#line 264 "./parser.y"
        {parent->model.server.start_goal_r = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 197:
#line 265 "./parser.y"
        {parent->model.server.stopped_ball_vel = (d_vsp__[-1].d);}
        break;

        case 198:
#line 266 "./parser.y"
        {parent->model.server.synch_micro_sleep = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 199:
#line 267 "./parser.y"
        {parent->model.server.synch_mode = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 200:
#line 268 "./parser.y"
        {parent->model.server.synch_offset = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 201:
#line 269 "./parser.y"
        {parent->model.server.synch_see_offset = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 202:
#line 270 "./parser.y"
        {parent->model.server.tackle_back_dist = (d_vsp__[-1].d);}
        break;

        case 203:
#line 271 "./parser.y"
        {parent->model.server.tackle_cycles = static_cast<unsigned int>(d_vsp__[-1].d);}
        break;

        case 204:
#line 272 "./parser.y"
        {parent->model.server.tackle_dist = (d_vsp__[-1].d);}
        break;

        case 205:
#line 273 "./parser.y"
        {parent->model.server.tackle_exponent = (d_vsp__[-1].d);}
        break;

        case 206:
#line 274 "./parser.y"
        {parent->model.server.tackle_power_rate = (d_vsp__[-1].d);}
        break;

        case 207:
#line 275 "./parser.y"
        {parent->model.server.tackle_rand_factor = (d_vsp__[-1].d);}
        break;

        case 208:
#line 276 "./parser.y"
        {parent->model.server.tackle_width = (d_vsp__[-1].d);}
        break;

        case 209:
#line 277 "./parser.y"
        {parent->model.server.team_actuator_noise = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 210:
#line 278 "./parser.y"
        {parent->model.server.team_l_start = *(d_vsp__[-1].s);}
        break;

        case 211:
#line 279 "./parser.y"
        {parent->model.server.team_r_start = (d_vsp__[-1].d);}
        break;

        case 212:
#line 280 "./parser.y"
        {parent->model.server.text_log_compression = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 213:
#line 281 "./parser.y"
        {parent->model.server.text_log_dated = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 214:
#line 282 "./parser.y"
        {parent->model.server.text_log_dir = *(d_vsp__[-1].s);}
        break;

        case 215:
#line 283 "./parser.y"
        {parent->model.server.text_log_fixed = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 216:
#line 284 "./parser.y"
        {parent->model.server.text_log_fixed_name = *(d_vsp__[-1].s);}
        break;

        case 217:
#line 285 "./parser.y"
        {parent->model.server.text_logging = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 218:
#line 286 "./parser.y"
        {parent->model.server.use_offside = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 219:
#line 287 "./parser.y"
        {parent->model.server.verbose = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 220:
#line 288 "./parser.y"
        {parent->model.server.visible_angle = (d_vsp__[-1].d);}
        break;

        case 221:
#line 289 "./parser.y"
        {parent->model.server.visible_distance = (d_vsp__[-1].d);}
        break;

        case 222:
#line 290 "./parser.y"
        {parent->model.server.wind_ang = (d_vsp__[-1].d);}
        break;

        case 223:
#line 291 "./parser.y"
        {parent->model.server.wind_dir = (d_vsp__[-1].d);}
        break;

        case 224:
#line 292 "./parser.y"
        {parent->model.server.wind_force = (d_vsp__[-1].d);}
        break;

        case 225:
#line 293 "./parser.y"
        {parent->model.server.wind_none = static_cast<bool>(d_vsp__[-1].d);}
        break;

        case 226:
#line 294 "./parser.y"
        {parent->model.server.wind_rand = (d_vsp__[-1].d);}
        break;

        case 227:
#line 295 "./parser.y"
        {parent->model.server.wind_random = (d_vsp__[-1].d);}
        break;

        case 228:
#line 299 "./parser.y"
        {cout << "player parameters received" << endl;}
        break;

        case 229:
#line 302 "./parser.y"
        {cout << "seen player_type " << currentType->id << endl;}
        break;

        case 230:
#line 304 "./parser.y"
        {parent->model.player.allow_mult_default_type = (d_vsp__[-1].d);}
        break;

        case 231:
#line 305 "./parser.y"
        {parent->model.player.catchable_area_l_stretch_max = (d_vsp__[-1].d);}
        break;

        case 232:
#line 306 "./parser.y"
        {currentType->catchable_area_l_stretch = (d_vsp__[-1].d);}
        break;

        case 233:
#line 307 "./parser.y"
        {parent->model.player.catchable_area_l_stretch_min = (d_vsp__[-1].d);}
        break;

        case 234:
#line 308 "./parser.y"
        {parent->model.player.dash_power_rate_delta_max = (d_vsp__[-1].d);}
        break;

        case 235:
#line 309 "./parser.y"
        {parent->model.player.dash_power_rate_delta_min = (d_vsp__[-1].d);}
        break;

        case 236:
#line 310 "./parser.y"
        {parent->model.player.effort_max_delta_factor = (d_vsp__[-1].d);}
        break;

        case 237:
#line 311 "./parser.y"
        {parent->model.player.effort_min_delta_factor = (d_vsp__[-1].d);}
        break;

        case 238:
#line 312 "./parser.y"
        {parent->model.player.extra_stamina_delta_max = (d_vsp__[-1].d);}
        break;

        case 239:
#line 313 "./parser.y"
        {parent->model.player.extra_stamina_delta_min = (d_vsp__[-1].d);}
        break;

        case 240:
#line 314 "./parser.y"
        {parent->model.player.foul_detect_probability_delta_factor = (d_vsp__[-1].d);}
        break;

        case 241:
#line 315 "./parser.y"
        {parent->model.player.inertia_moment_delta_factor = (d_vsp__[-1].d);}
        break;

        case 242:
#line 316 "./parser.y"
        {parent->model.player.kick_power_rate_delta_max = (d_vsp__[-1].d);}
        break;

        case 243:
#line 317 "./parser.y"
        {parent->model.player.kick_power_rate_delta_min = (d_vsp__[-1].d);}
        break;

        case 244:
#line 318 "./parser.y"
        {parent->model.player.kick_rand_delta_factor = (d_vsp__[-1].d);}
        break;

        case 245:
#line 319 "./parser.y"
        {parent->model.player.kickable_margin_delta_max = (d_vsp__[-1].d);}
        break;

        case 246:
#line 320 "./parser.y"
        {parent->model.player.kickable_margin_delta_min = (d_vsp__[-1].d);}
        break;

        case 247:
#line 321 "./parser.y"
        {parent->model.player.new_dash_power_rate_delta_max = (d_vsp__[-1].d);}
        break;

        case 248:
#line 322 "./parser.y"
        {parent->model.player.new_dash_power_rate_delta_min = (d_vsp__[-1].d);}
        break;

        case 249:
#line 323 "./parser.y"
        {parent->model.player.new_stamina_inc_max_delta_factor = (d_vsp__[-1].d);}
        break;

        case 250:
#line 324 "./parser.y"
        {parent->model.player.player_decay_delta_max = (d_vsp__[-1].d);}
        break;

        case 251:
#line 325 "./parser.y"
        {parent->model.player.player_decay_delta_min = (d_vsp__[-1].d);}
        break;

        case 252:
#line 326 "./parser.y"
        {parent->model.player.player_size_delta_factor = (d_vsp__[-1].d);}
        break;

        case 253:
#line 327 "./parser.y"
        {parent->model.player.player_speed_max_delta_max = (d_vsp__[-1].d);}
        break;

        case 254:
#line 328 "./parser.y"
        {parent->model.player.player_speed_max_delta_min = (d_vsp__[-1].d);}
        break;

        case 255:
#line 329 "./parser.y"
        {parent->model.player.player_types = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 256:
#line 330 "./parser.y"
        {parent->model.player.pt_max = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 257:
#line 331 "./parser.y"
        {parent->model.player.random_seed = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 258:
#line 332 "./parser.y"
        {parent->model.player.stamina_inc_max_delta_factor = (d_vsp__[-1].d);}
        break;

        case 259:
#line 333 "./parser.y"
        {parent->model.player.subs_max = static_cast<int>(d_vsp__[-1].d);}
        break;

        case 260:
#line 335 "./parser.y"
        {
         t_player_type x;
         parent->model.player_types.push_back(x);
         currentType = parent->model.player_types.rbegin();
         currentType->id = static_cast<unsigned short int>(d_vsp__[-1].d);
        }
        break;

    }
}

inline void ParserBase::reduce__(PI__ const &pi)
{
    d_token__ = pi.d_nonTerm;
    pop__(pi.d_size);

}

// If d_token__ is _UNDETERMINED_ then if d_nextToken__ is _UNDETERMINED_ another
// token is obtained from lex(). Then d_nextToken__ is assigned to d_token__.
void Parser::nextToken()
{
    if (d_token__ != _UNDETERMINED_)        // no need for a token: got one
        return;                             // already

    if (d_nextToken__ != _UNDETERMINED_)
    {
        popToken__();                       // consume pending token
    }
    else
    {
        ++d_acceptedTokens__;               // accept another token (see
                                            // errorRecover())
        d_token__ = lex();
        if (d_token__ <= 0)
            d_token__ = _EOF_;
    }
    print();
}

// if the final transition is negative, then we should reduce by the rule
// given by its positive value. Note that the `recovery' parameter is only
// used with the --debug option
int Parser::lookup(bool recovery)
{
    // $insert threading
    SR__ *sr = s_state[d_state__];        // get the appropriate state-table
    int lastIdx = sr->d_lastIdx;        // sentinel-index in the SR__ array

    SR__ *lastElementPtr = sr + lastIdx;
    SR__ *elementPtr = sr + 1;            // start the search at s_xx[1]

    lastElementPtr->d_token = d_token__;// set search-token

    while (elementPtr->d_token != d_token__)
        ++elementPtr;

    if (elementPtr == lastElementPtr)   // reached the last element
    {
        if (elementPtr->d_action < 0)   // default reduction
        {
            return elementPtr->d_action;                
        }

        // No default reduction, so token not found, so error.
        throw UNEXPECTED_TOKEN__;
    }

    // not at the last element: inspect the nature of the action
    // (< 0: reduce, 0: ACCEPT, > 0: shift)

    int action = elementPtr->d_action;


    return action;
}

    // When an error has occurred, pop elements off the stack until the top
    // state has an error-item. If none is found, the default recovery
    // mode (which is to abort) is activated. 
    //
    // If EOF is encountered without being appropriate for the current state,
    // then the error recovery will fall back to the default recovery mode.
    // (i.e., parsing terminates)
void Parser::errorRecovery()
try
{
    if (d_acceptedTokens__ >= d_requiredTokens__)// only generate an error-
    {                                           // message if enough tokens 
        ++d_nErrors__;                          // were accepted. Otherwise
        error("Syntax error");                  // simply skip input

    }


    // get the error state
    while (not (s_state[top__()][0].d_type & ERR_ITEM))
    {
        pop__();
    }

    // In the error state, lookup a token allowing us to proceed.
    // Continuation may be possible following multiple reductions,
    // but eventuall a shift will be used, requiring the retrieval of
    // a terminal token. If a retrieved token doesn't match, the catch below 
    // will ensure the next token is requested in the while(true) block
    // implemented below:

    int lastToken = d_token__;                  // give the unexpected token a
                                                // chance to be processed
                                                // again.

    pushToken__(_error_);                       // specify _error_ as next token
    push__(lookup(true));                       // push the error state

    d_token__ = lastToken;                      // reactivate the unexpected
                                                // token (we're now in an
                                                // ERROR state).

    bool gotToken = true;                       // the next token is a terminal

    while (true)
    {
        try
        {
            if (s_state[d_state__]->d_type & REQ_TOKEN)
            {
                gotToken = d_token__ == _UNDETERMINED_;
                nextToken();                    // obtain next token
            }
            
            int action = lookup(true);

            if (action > 0)                 // push a new state
            {
                push__(action);
                popToken__();

                if (gotToken)
                {

                    d_acceptedTokens__ = 0;
                    return;
                }
            }
            else if (action < 0)
            {
                // no actions executed on recovery but save an already 
                // available token:
                if (d_token__ != _UNDETERMINED_)
                    pushToken__(d_token__);
 
                                            // next token is the rule's LHS
                reduce__(s_productionInfo[-action]); 
            }
            else
                ABORT();                    // abort when accepting during
                                            // error recovery
        }
        catch (...)
        {
            if (d_token__ == _EOF_)
                ABORT();                    // saw inappropriate _EOF_
                      
            popToken__();                   // failing token now skipped
        }
    }
}
catch (ErrorRecovery__)       // This is: DEFAULT_RECOVERY_MODE
{
    ABORT();
}

    // The parsing algorithm:
    // Initially, state 0 is pushed on the stack, and d_token__ as well as
    // d_nextToken__ are initialized to _UNDETERMINED_. 
    //
    // Then, in an eternal loop:
    //
    //  1. If a state does not have REQ_TOKEN no token is assigned to
    //     d_token__. If the state has REQ_TOKEN, nextToken() is called to
    //      determine d_nextToken__ and d_token__ is set to
    //     d_nextToken__. nextToken() will not call lex() unless d_nextToken__ is 
    //     _UNDETERMINED_. 
    //
    //  2. lookup() is called: 
    //     d_token__ is stored in the final element's d_token field of the
    //     state's SR_ array. 
    //
    //  3. The current token is looked up in the state's SR_ array
    //
    //  4. Depending on the result of the lookup() function the next state is
    //     shifted on the parser's stack, a reduction by some rule is applied,
    //     or the parsing function returns ACCEPT(). When a reduction is
    //     called for, any action that may have been defined for that
    //     reduction is executed.
    //
    //  5. An error occurs if d_token__ is not found, and the state has no
    //     default reduction. Error handling was described at the top of this
    //     file.

int Parser::parse()
try 
{
    push__(0);                              // initial state
    clearin();                              // clear the tokens.

    while (true)
    {
        try
        {
            if (s_state[d_state__]->d_type & REQ_TOKEN)
                nextToken();                // obtain next token


            int action = lookup(false);     // lookup d_token__ in d_state__

            if (action > 0)                 // SHIFT: push a new state
            {
                push__(action);
                popToken__();               // token processed
            }
            else if (action < 0)            // REDUCE: execute and pop.
            {
                executeAction(-action);
                                            // next token is the rule's LHS
                reduce__(s_productionInfo[-action]); 
            }
            else 
                ACCEPT();
        }
        catch (ErrorRecovery__)
        {
            errorRecovery();
        }
    }
}
catch (Return__ retValue)
{
    return retValue;
}




