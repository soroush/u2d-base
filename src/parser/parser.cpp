// Generated by Bisonc++ V6.04.01 on Fri, 18 Feb 2022 00:39:46 +0100

// base/comment

// $insert class.ih
#include <u2d/parser/parser-impl.hpp>

// The FIRST element of SR arrays shown below uses `d_type', defining the
// state's type, and `d_lastIdx' containing the last element's index. If
// d_lastIdx contains the REQ_TOKEN bitflag (see below) then the state needs
// a token: if in this state d_token is Reserved_::UNDETERMINED_, nextToken() will be
// called

// The LAST element of SR arrays uses `d_token' containing the last retrieved
// token to speed up the (linear) seach.  Except for the first element of SR
// arrays, the field `d_action' is used to determine what to do next. If
// positive, it represents the next state (used with SHIFT); if zero, it
// indicates `ACCEPT', if negative, -d_action represents the number of the
// rule to reduce to.

// `lookup()' tries to find d_token in the current SR array. If it fails, and
// there is no default reduction UNEXPECTED_TOKEN_ is thrown, which is then
// caught by the error-recovery function.

// The error-recovery function will pop elements off the stack until a state
// having bit flag ERR_ITEM is found. This state has a transition on errTok_
// which is applied. In this errTok_ state, while the current token is not a
// proper continuation, new tokens are obtained by nextToken(). If such a
// token is found, error recovery is successful and the token is
// handled according to the error state's SR table and parsing continues.
// During error recovery semantic actions are ignored.

// A state flagged with the DEF_RED flag will perform a default
// reduction if no other continuations are available for the current token.

// The ACCEPT STATE never shows a default reduction: when it is reached the
// parser returns ACCEPT(). During the grammar
// analysis phase a default reduction may have been defined, but it is
// removed during the state-definition phase.

// So:
//      s_x[] = 
//      {
//                  [_field_1_]         [_field_2_]
//
// First element:   {state-type,        idx of last element},
// Other elements:  {required token,    action to perform},
//                                      ( < 0: reduce, 
//                                          0: ACCEPT,
//                                        > 0: next state)
//      }

// base/declarations

namespace // anonymous
{
    char const author[] = "Frank B. Brokken (f.b.brokken@rug.nl)";

    enum Reserved_
    {
        UNDETERMINED_   = -2,
        EOF_            = -1,
        errTok_         = 256
    };
    enum StateType       // modify statetype/data.cc when this enum changes
    {
        NORMAL,
        ERR_ITEM,
        REQ_TOKEN,
        ERR_REQ,    // ERR_ITEM | REQ_TOKEN
        DEF_RED,    // state having default reduction
        ERR_DEF,    // ERR_ITEM | DEF_RED
        REQ_DEF,    // REQ_TOKEN | DEF_RED
        ERR_REQ_DEF // ERR_ITEM | REQ_TOKEN | DEF_RED
    };    
    inline bool operator&(StateType lhs, StateType rhs)
    {
        return (static_cast<int>(lhs) & rhs) != 0;
    }
    enum StateTransition
    {
        ACCEPT_   = 0,     // `ACCEPT' TRANSITION
    };

    struct PI_     // Production Info
    {
        size_t d_nonTerm; // identification number of this production's
                            // non-terminal 
        size_t d_size;    // number of elements in this production 
    };

    struct SR_     // Shift Reduce info, see its description above
    {
        union
        {
            int _field_1_;      // initializer, allowing initializations 
                                // of the SR s_[] arrays
            StateType d_type;
            int       d_token;
        };
        union
        {
            int _field_2_;

            int d_lastIdx;          // if negative, the state uses SHIFT
            int d_action;           // may be negative (reduce), 
                                    // postive (shift), or 0 (accept)
        };
    };

    // $insert staticdata
    
    enum                        // size to expand the state-stack with when
    {                           // full
        STACK_EXPANSION_ = 10
    };

// Productions Info Records:
PI_ const s_productionInfo[] = 
{
     {0, 0}, // not used: reduction values are negative
     {570, 1}, // 1: start ->  init
     {570, 1}, // 2: start ->  server_param
     {570, 1}, // 3: start ->  player_param
     {570, 1}, // 4: start ->  player_type
     {570, 1}, // 5: start ->  sense_body
     {570, 1}, // 6: start ->  see
     {570, 1}, // 7: start ->  hear
     {578, 1}, // 8: bool (_0) ->  _0
     {578, 1}, // 9: bool (_1) ->  _1
     {579, 1}, // 10: int (INTEGER) ->  INTEGER
     {579, 1}, // 11: int ->  bool
     {579, 1}, // 12: int (_10) ->  _10
     {579, 1}, // 13: int (_20) ->  _20
     {579, 1}, // 14: int (_30) ->  _30
     {579, 1}, // 15: int (_40) ->  _40
     {579, 1}, // 16: int (_50) ->  _50
     {580, 1}, // 17: double (DOUBLE) ->  DOUBLE
     {580, 1}, // 18: double ->  int
     {581, 1}, // 19: string (STRING) ->  STRING
     {571, 6}, // 20: init (LP) ->  LP INIT side double play_mode RP
     {582, 1}, // 21: play_mode (PM_BKO) ->  PM_BKO
     {582, 1}, // 22: play_mode (PM_PO) ->  PM_PO
     {582, 1}, // 23: play_mode (PM_TO) ->  PM_TO
     {582, 1}, // 24: play_mode (PM_KOL) ->  PM_KOL
     {582, 1}, // 25: play_mode (PM_KOR) ->  PM_KOR
     {582, 1}, // 26: play_mode (PM_KIL) ->  PM_KIL
     {582, 1}, // 27: play_mode (PM_KIR) ->  PM_KIR
     {582, 1}, // 28: play_mode (PM_FKL) ->  PM_FKL
     {582, 1}, // 29: play_mode (PM_FKR) ->  PM_FKR
     {582, 1}, // 30: play_mode (PM_CKL) ->  PM_CKL
     {582, 1}, // 31: play_mode (PM_CKR) ->  PM_CKR
     {582, 1}, // 32: play_mode (PM_GKL) ->  PM_GKL
     {582, 1}, // 33: play_mode (PM_GKR) ->  PM_GKR
     {582, 1}, // 34: play_mode (PM_GOALL) ->  PM_GOALL
     {582, 1}, // 35: play_mode (PM_GOALR) ->  PM_GOALR
     {582, 1}, // 36: play_mode (PM_DB) ->  PM_DB
     {582, 1}, // 37: play_mode (PM_OL) ->  PM_OL
     {582, 1}, // 38: play_mode (PM_OR) ->  PM_OR
     {572, 191}, // 39: server_param (LP) ->  LP SERVER acd am bdr bp bam bd br bs bsm bsa bw cbc cp cal caw cm cadw cdefw cdelw ciw cmd cmpc cmw crw cws co cop cwr cw cr das dpr dbt ed edt ein eit ei em eht es fko fc fdp fe fkf fsp fwp fl fr glc gld gldir glf glfn glv gl gow gw gmm gg ht hd hi hm im k kl kld kldir lkf klfn klg ks kw kow kpr kr krfl krfr km lf ldf lt mbtp maxda mdp mgk mtp maxm maxna maxnm maxp minda mindp minm minna minnm minp neh nnh oaas okm op och pamk pbsw pcmp pdx pmet pmgdx pnk prw prwa psw ptw pso pam pd pr ps psm psmm pw ptb ptd p pfl pfr prof pgk qs qsl rm rd rdt ri rmin rs rcp sccm scms sms sm ss svs sbs sdr sims sdf sotflt sotfrt sc sim smax sgl sgr sbv smics smod so sso tbd tc td te tpr trf tw tan tls trs tlc tld tldir tlf tlfn tl uo v va vd wa wd wf wn wr wra RP
     {583, 4}, // 40: acd (LP) ->  LP ACD double RP
     {584, 4}, // 41: am (LP) ->  LP AM bool RP
     {585, 4}, // 42: bdr (LP) ->  LP BDR double RP
     {586, 4}, // 43: bp (LP) ->  LP BP double RP
     {587, 4}, // 44: bam (LP) ->  LP BAM double RP
     {588, 4}, // 45: bd (LP) ->  LP BD double RP
     {589, 4}, // 46: br (LP) ->  LP BR double RP
     {590, 4}, // 47: bs (LP) ->  LP BS double RP
     {591, 4}, // 48: bsm (LP) ->  LP BSM double RP
     {592, 4}, // 49: bsa (LP) ->  LP BSA double RP
     {593, 4}, // 50: bw (LP) ->  LP BW double RP
     {594, 4}, // 51: cbc (LP) ->  LP CBC int RP
     {595, 4}, // 52: cp (LP) ->  LP CP double RP
     {596, 4}, // 53: cal (LP) ->  LP CAL double RP
     {597, 4}, // 54: caw (LP) ->  LP CAW double RP
     {598, 4}, // 55: cm (LP) ->  LP CM double RP
     {599, 4}, // 56: cadw (LP) ->  LP CADW int RP
     {600, 4}, // 57: cdefw (LP) ->  LP CDEFW int RP
     {601, 4}, // 58: cdelw (LP) ->  LP CDELW int RP
     {602, 4}, // 59: ciw (LP) ->  LP CIW int RP
     {603, 4}, // 60: cmd (LP) ->  LP CMD int RP
     {604, 4}, // 61: cmpc (LP) ->  LP CMPC int RP
     {605, 4}, // 62: cmw (LP) ->  LP CMW int RP
     {606, 4}, // 63: crw (LP) ->  LP CRW int RP
     {607, 4}, // 64: cws (LP) ->  LP CWS int RP
     {608, 4}, // 65: co (LP) ->  LP CO double RP
     {609, 4}, // 66: cop (LP) ->  LP COP int RP
     {610, 4}, // 67: cwr (LP) ->  LP CWR double RP
     {611, 4}, // 68: cw (LP) ->  LP CW int RP
     {612, 4}, // 69: cr (LP) ->  LP CR double RP
     {613, 4}, // 70: das (LP) ->  LP DAS double RP
     {614, 4}, // 71: dpr (LP) ->  LP DPR double RP
     {615, 4}, // 72: dbt (LP) ->  LP DBT int RP
     {616, 4}, // 73: ed (LP) ->  LP ED double RP
     {617, 4}, // 74: edt (LP) ->  LP EDT double RP
     {618, 4}, // 75: ein (LP) ->  LP EIN double RP
     {619, 4}, // 76: eit (LP) ->  LP EIT double RP
     {620, 4}, // 77: ei (LP) ->  LP EI double RP
     {621, 4}, // 78: em (LP) ->  LP EM double RP
     {622, 4}, // 79: eht (LP) ->  LP EHT int RP
     {623, 4}, // 80: es (LP) ->  LP ES double RP
     {624, 4}, // 81: fko (LP) ->  LP FKO double RP
     {625, 4}, // 82: fc (LP) ->  LP FC int RP
     {626, 4}, // 83: fdp (LP) ->  LP FDP double RP
     {627, 4}, // 84: fe (LP) ->  LP FE double RP
     {628, 4}, // 85: fkf (LP) ->  LP FKF double RP
     {629, 4}, // 86: fsp (LP) ->  LP FSP double RP
     {630, 4}, // 87: fwp (LP) ->  LP FWP double RP
     {631, 4}, // 88: fl (LP) ->  LP FL int RP
     {632, 4}, // 89: fr (LP) ->  LP FR int RP
     {633, 4}, // 90: glc (LP) ->  LP GLC int RP
     {634, 4}, // 91: gld (LP) ->  LP GLD int RP
     {635, 4}, // 92: gldir (LP) ->  LP GLDIR string RP
     {636, 4}, // 93: glf (LP) ->  LP GLF double RP
     {637, 4}, // 94: glfn (LP) ->  LP GLFN string RP
     {638, 4}, // 95: glv (LP) ->  LP GLV int RP
     {639, 4}, // 96: gl (LP) ->  LP GL double RP
     {640, 4}, // 97: gow (LP) ->  LP GOW double RP
     {641, 4}, // 98: gw (LP) ->  LP GW double RP
     {642, 4}, // 99: gmm (LP) ->  LP GMM int RP
     {643, 4}, // 100: gg (LP) ->  LP GG double RP
     {644, 4}, // 101: ht (LP) ->  LP HT int RP
     {645, 4}, // 102: hd (LP) ->  LP HD double RP
     {646, 4}, // 103: hi (LP) ->  LP HI double RP
     {647, 4}, // 104: hm (LP) ->  LP HM double RP
     {648, 4}, // 105: im (LP) ->  LP IM double RP
     {649, 4}, // 106: k (LP) ->  LP K double RP
     {650, 4}, // 107: kl (LP) ->  LP KL double RP
     {651, 4}, // 108: kld (LP) ->  LP KLD double RP
     {652, 4}, // 109: kldir (LP) ->  LP KLDIR string RP
     {653, 4}, // 110: lkf (LP) ->  LP LKF double RP
     {654, 4}, // 111: klfn (LP) ->  LP KLFN string RP
     {655, 4}, // 112: klg (LP) ->  LP KLG double RP
     {656, 4}, // 113: ks (LP) ->  LP KS int RP
     {657, 4}, // 114: kw (LP) ->  LP KW double RP
     {658, 4}, // 115: kow (LP) ->  LP KOW int RP
     {659, 4}, // 116: kpr (LP) ->  LP KPR double RP
     {660, 4}, // 117: kr (LP) ->  LP KR double RP
     {661, 4}, // 118: krfl (LP) ->  LP KRFL double RP
     {662, 4}, // 119: krfr (LP) ->  LP KRFR double RP
     {663, 4}, // 120: km (LP) ->  LP KM double RP
     {664, 4}, // 121: lf (LP) ->  LP LF string RP
     {665, 4}, // 122: ldf (LP) ->  LP LDF string RP
     {666, 4}, // 123: lt (LP) ->  LP LT int RP
     {667, 4}, // 124: mbtp (LP) ->  LP MBTP double RP
     {668, 4}, // 125: maxda (LP) ->  LP MAXDA double RP
     {669, 4}, // 126: mdp (LP) ->  LP MDP double RP
     {670, 4}, // 127: mgk (LP) ->  LP MGK int RP
     {671, 4}, // 128: mtp (LP) ->  LP MTP double RP
     {672, 4}, // 129: maxm (LP) ->  LP MAXM double RP
     {673, 4}, // 130: maxna (LP) ->  LP MAXNA double RP
     {674, 4}, // 131: maxnm (LP) ->  LP MAXNM double RP
     {675, 4}, // 132: maxp (LP) ->  LP MAXP double RP
     {676, 4}, // 133: minda (LP) ->  LP MINDA double RP
     {677, 4}, // 134: mindp (LP) ->  LP MINDP double RP
     {678, 4}, // 135: minm (LP) ->  LP MINM double RP
     {679, 4}, // 136: minna (LP) ->  LP MINNA double RP
     {680, 4}, // 137: minnm (LP) ->  LP MINNM double RP
     {681, 4}, // 138: minp (LP) ->  LP MINP double RP
     {682, 4}, // 139: neh (LP) ->  LP NEH int RP
     {683, 4}, // 140: nnh (LP) ->  LP NNH int RP
     {684, 4}, // 141: oaas (LP) ->  LP OAAS double RP
     {685, 4}, // 142: okm (LP) ->  LP OKM double RP
     {686, 4}, // 143: op (LP) ->  LP OP int RP
     {687, 4}, // 144: och (LP) ->  LP OCH double RP
     {688, 4}, // 145: pamk (LP) ->  LP PAMK double RP
     {689, 4}, // 146: pbsw (LP) ->  LP PBSW double RP
     {690, 4}, // 147: pcmp (LP) ->  LP PCMP double RP
     {691, 4}, // 148: pdx (LP) ->  LP PDX double RP
     {692, 4}, // 149: pmet (LP) ->  LP PMET int RP
     {693, 4}, // 150: pmgdx (LP) ->  LP PMGDX int RP
     {694, 4}, // 151: pnk (LP) ->  LP PNK int RP
     {695, 4}, // 152: prw (LP) ->  LP PRW double RP
     {696, 4}, // 153: prwa (LP) ->  LP PRWA int RP
     {697, 4}, // 154: psw (LP) ->  LP PSW int RP
     {698, 4}, // 155: ptw (LP) ->  LP PTW int RP
     {699, 4}, // 156: pso (LP) ->  LP PSO double RP
     {700, 4}, // 157: pam (LP) ->  LP PAM double RP
     {701, 4}, // 158: pd (LP) ->  LP PD double RP
     {702, 4}, // 159: pr (LP) ->  LP PR double RP
     {703, 4}, // 160: ps (LP) ->  LP PS double RP
     {704, 4}, // 161: psm (LP) ->  LP PSM double RP
     {705, 4}, // 162: psmm (LP) ->  LP PSMM double RP
     {706, 4}, // 163: pw (LP) ->  LP PW double RP
     {707, 4}, // 164: ptb (LP) ->  LP PTB int RP
     {708, 4}, // 165: ptd (LP) ->  LP PTD int RP
     {709, 4}, // 166: p (LP) ->  LP P int RP
     {710, 4}, // 167: pfl (LP) ->  LP PFL double RP
     {711, 4}, // 168: pfr (LP) ->  LP PFR double RP
     {712, 4}, // 169: prof (LP) ->  LP PROF double RP
     {713, 4}, // 170: pgk (LP) ->  LP PGK double RP
     {714, 4}, // 171: qs (LP) ->  LP QS double RP
     {715, 4}, // 172: qsl (LP) ->  LP QSL double RP
     {716, 4}, // 173: rm (LP) ->  LP RM double RP
     {717, 4}, // 174: rd (LP) ->  LP RD double RP
     {718, 4}, // 175: rdt (LP) ->  LP RDT double RP
     {719, 4}, // 176: ri (LP) ->  LP RI double RP
     {720, 4}, // 177: rmin (LP) ->  LP RMIN double RP
     {721, 4}, // 178: rs (LP) ->  LP RS int RP
     {722, 4}, // 179: rcp (LP) ->  LP RCP double RP
     {723, 4}, // 180: sccm (LP) ->  LP SCCM int RP
     {724, 4}, // 181: scms (LP) ->  LP SCMS int RP
     {725, 4}, // 182: sms (LP) ->  LP SMS int RP
     {726, 4}, // 183: sm (LP) ->  LP SM double RP
     {727, 4}, // 184: ss (LP) ->  LP SS int RP
     {728, 4}, // 185: svs (LP) ->  LP SVS int RP
     {729, 4}, // 186: sbs (LP) ->  LP SBS int RP
     {730, 4}, // 187: sdr (LP) ->  LP SDR double RP
     {731, 4}, // 188: sims (LP) ->  LP SIMS int RP
     {732, 4}, // 189: sdf (LP) ->  LP SDF int RP
     {733, 4}, // 190: sotflt (LP) ->  LP SOTFLT double RP
     {734, 4}, // 191: sotfrt (LP) ->  LP SOTFRT double RP
     {735, 4}, // 192: sc (LP) ->  LP SC double RP
     {736, 4}, // 193: sim (LP) ->  LP SIM double RP
     {737, 4}, // 194: smax (LP) ->  LP SMAX double RP
     {738, 4}, // 195: sgl (LP) ->  LP SGL int RP
     {739, 4}, // 196: sgr (LP) ->  LP SGR int RP
     {740, 4}, // 197: sbv (LP) ->  LP SBV double RP
     {741, 4}, // 198: smics (LP) ->  LP SMICS double RP
     {742, 4}, // 199: smod (LP) ->  LP SMOD double RP
     {743, 4}, // 200: so (LP) ->  LP SO double RP
     {744, 4}, // 201: sso (LP) ->  LP SSO double RP
     {745, 4}, // 202: tbd (LP) ->  LP TBD double RP
     {746, 4}, // 203: tc (LP) ->  LP TC double RP
     {747, 4}, // 204: td (LP) ->  LP TD double RP
     {748, 4}, // 205: te (LP) ->  LP TE double RP
     {749, 4}, // 206: tpr (LP) ->  LP TPR double RP
     {750, 4}, // 207: trf (LP) ->  LP TRF double RP
     {751, 4}, // 208: tw (LP) ->  LP TW double RP
     {752, 4}, // 209: tan (LP) ->  LP TAN double RP
     {753, 4}, // 210: tls (LP) ->  LP TLS string RP
     {754, 4}, // 211: trs (LP) ->  LP TRS string RP
     {755, 4}, // 212: tlc (LP) ->  LP TLC int RP
     {756, 4}, // 213: tld (LP) ->  LP TLD int RP
     {757, 4}, // 214: tldir (LP) ->  LP TLDIR string RP
     {758, 4}, // 215: tlf (LP) ->  LP TLF int RP
     {759, 4}, // 216: tlfn (LP) ->  LP TLFN string RP
     {760, 4}, // 217: tl (LP) ->  LP TL double RP
     {761, 4}, // 218: uo (LP) ->  LP UO double RP
     {762, 4}, // 219: v (LP) ->  LP V bool RP
     {763, 4}, // 220: va (LP) ->  LP VA double RP
     {764, 4}, // 221: vd (LP) ->  LP VD double RP
     {765, 4}, // 222: wa (LP) ->  LP WA double RP
     {766, 4}, // 223: wd (LP) ->  LP WD double RP
     {767, 4}, // 224: wf (LP) ->  LP WF double RP
     {768, 4}, // 225: wn (LP) ->  LP WN double RP
     {769, 4}, // 226: wr (LP) ->  LP WR double RP
     {770, 4}, // 227: wra (LP) ->  LP WRA double RP
     {573, 32}, // 228: player_param (LP) ->  LP PP amdt calsmax calsmin dprdmax dprdmin emaxdf emindf esdmax esdmin fdpdf imdf kprdmax kprdmin kprdf kmdmax kmdmin ndprdmax ndprdmin nsimaxdf pddmax pddmin psdf psmaxdmax psmaxdmin pt ptm rans simaxdf submax RP
     {771, 4}, // 229: amdt (LP) ->  LP AMDT double RP
     {772, 4}, // 230: calsmax (LP) ->  LP CALSMAX double RP
     {773, 4}, // 231: calsmin (LP) ->  LP CALSMIN double RP
     {774, 4}, // 232: dprdmax (LP) ->  LP DPRDMAX double RP
     {775, 4}, // 233: dprdmin (LP) ->  LP DPRDMIN double RP
     {776, 4}, // 234: emaxdf (LP) ->  LP EMAXDF double RP
     {777, 4}, // 235: emindf (LP) ->  LP EMINDF double RP
     {778, 4}, // 236: esdmax (LP) ->  LP ESDMAX double RP
     {779, 4}, // 237: esdmin (LP) ->  LP ESDMIN double RP
     {780, 4}, // 238: fdpdf (LP) ->  LP FDPDF double RP
     {781, 4}, // 239: imdf (LP) ->  LP IMDF double RP
     {782, 4}, // 240: kprdmax (LP) ->  LP KPRDMAX double RP
     {783, 4}, // 241: kprdmin (LP) ->  LP KPRDMIN double RP
     {784, 4}, // 242: kprdf (LP) ->  LP KPRDF double RP
     {785, 4}, // 243: kmdmax (LP) ->  LP KMDMAX double RP
     {786, 4}, // 244: kmdmin (LP) ->  LP KMDMIN double RP
     {787, 4}, // 245: ndprdmax (LP) ->  LP NDPRDMAX double RP
     {788, 4}, // 246: ndprdmin (LP) ->  LP NDPRDMIN double RP
     {789, 4}, // 247: nsimaxdf (LP) ->  LP NSIMAXDF double RP
     {790, 4}, // 248: pddmax (LP) ->  LP PDDMAX double RP
     {791, 4}, // 249: pddmin (LP) ->  LP PDDMIN double RP
     {792, 4}, // 250: psdf (LP) ->  LP PSDF double RP
     {793, 4}, // 251: psmaxdmax (LP) ->  LP PSMAXDMAX double RP
     {794, 4}, // 252: psmaxdmin (LP) ->  LP PSMAXDMIN double RP
     {795, 4}, // 253: pt (LP) ->  LP PT int RP
     {796, 4}, // 254: ptm (LP) ->  LP PTM int RP
     {797, 4}, // 255: rans (LP) ->  LP RANS int RP
     {798, 4}, // 256: simaxdf (LP) ->  LP SIMAXDF double RP
     {799, 4}, // 257: submax (LP) ->  LP SUBMAX int RP
     {574, 18}, // 258: player_type (LP) ->  LP PTY id pt_psm pt_sim pt_pd pt_im pt_dpr pt_ps pt_km pt_kr pt_es pt_emx pt_emi pt_kpr pt_fdp pt_cals RP
     {800, 4}, // 259: id (LP) ->  LP ID int RP
     {801, 4}, // 260: pt_psm (LP) ->  LP PSM double RP
     {802, 4}, // 261: pt_sim (LP) ->  LP SIM double RP
     {803, 4}, // 262: pt_pd (LP) ->  LP PD double RP
     {804, 4}, // 263: pt_im (LP) ->  LP IM double RP
     {805, 4}, // 264: pt_dpr (LP) ->  LP DPR double RP
     {806, 4}, // 265: pt_ps (LP) ->  LP PS double RP
     {807, 4}, // 266: pt_km (LP) ->  LP KM double RP
     {808, 4}, // 267: pt_kr (LP) ->  LP KR double RP
     {809, 4}, // 268: pt_es (LP) ->  LP ES double RP
     {810, 4}, // 269: pt_emx (LP) ->  LP EMAX double RP
     {811, 4}, // 270: pt_emi (LP) ->  LP EM double RP
     {812, 4}, // 271: pt_kpr (LP) ->  LP KPR double RP
     {813, 4}, // 272: pt_fdp (LP) ->  LP FDP double RP
     {814, 4}, // 273: pt_cals (LP) ->  LP CALS double RP
     {575, 21}, // 274: sense_body (LP) ->  LP SEN int vm st sp ha kick dash turn say tneck catch move chview arm focus tackle collision foul RP
     {815, 5}, // 275: vm (LP) ->  LP VM v_q v_w RP
     {832, 1}, // 276: v_q (VQ_H) ->  VQ_H
     {832, 1}, // 277: v_q (VQ_L) ->  VQ_L
     {833, 1}, // 278: v_w (VW_NO) ->  VW_NO
     {833, 1}, // 279: v_w (VW_NA) ->  VW_NA
     {833, 1}, // 280: v_w (VW_WI) ->  VW_WI
     {816, 6}, // 281: st (LP) ->  LP ST double double double RP
     {817, 5}, // 282: sp (LP) ->  LP SP double double RP
     {818, 4}, // 283: ha (LP) ->  LP HA double RP
     {819, 4}, // 284: kick (LP) ->  LP KICK int RP
     {820, 4}, // 285: dash (LP) ->  LP DASH int RP
     {821, 4}, // 286: turn (LP) ->  LP TURN int RP
     {822, 4}, // 287: say (LP) ->  LP SAY int RP
     {823, 4}, // 288: tneck (LP) ->  LP TNECK int RP
     {824, 4}, // 289: catch (LP) ->  LP CATCH int RP
     {825, 4}, // 290: move (LP) ->  LP MOVE int RP
     {826, 4}, // 291: chview (LP) ->  LP CHVIEW int RP
     {827, 7}, // 292: arm (LP) ->  LP ARM movable expires target count RP
     {834, 4}, // 293: movable (LP) ->  LP MOVABLE int RP
     {835, 4}, // 294: expires (LP) ->  LP EXP int RP
     {836, 5}, // 295: target (LP) ->  LP TAR double double RP
     {837, 4}, // 296: count (LP) ->  LP COUNT int RP
     {828, 5}, // 297: focus (LP) ->  LP FOCUS f_target f_count RP
     {838, 4}, // 298: f_target (LP) ->  LP TAR target_type RP
     {839, 4}, // 299: f_count (LP) ->  LP COUNT int RP
     {840, 1}, // 300: target_type (_L) ->  _L
     {840, 1}, // 301: target_type (_R) ->  _R
     {840, 1}, // 302: target_type (NONE) ->  NONE
     {829, 5}, // 303: tackle (LP) ->  LP TACKLE t_expires t_count RP
     {841, 4}, // 304: t_expires (LP) ->  LP EXP int RP
     {842, 4}, // 305: t_count (LP) ->  LP COUNT int RP
     {830, 4}, // 306: collision (LP) ->  LP COLL col_type RP
     {843, 1}, // 307: col_type (NONE) ->  NONE
     {843, 1}, // 308: col_type (BALL) ->  BALL
     {843, 1}, // 309: col_type (PLAYER) ->  PLAYER
     {843, 1}, // 310: col_type (POST) ->  POST
     {831, 5}, // 311: foul (LP) ->  LP FOUL charged card RP
     {844, 4}, // 312: charged (LP) ->  LP CHARGED int RP
     {845, 4}, // 313: card (LP) ->  LP CARD card_type RP
     {846, 1}, // 314: card_type (NONE) ->  NONE
     {846, 1}, // 315: card_type (YELLOW) ->  YELLOW
     {576, 5}, // 316: see (LP) ->  LP SEE int objects RP
     {847, 2}, // 317: objects ->  object objects
     {847, 1}, // 318: objects ->  object
     {848, 1}, // 319: object ->  o_ball
     {848, 1}, // 320: object ->  o_player
     {848, 1}, // 321: object ->  o_goal
     {848, 1}, // 322: object ->  o_flag
     {848, 1}, // 323: object ->  o_line
     {848, 1}, // 324: object ->  o_unknown
     {849, 7}, // 325: o_ball (LP) ->  LP LP _B RP double double RP
     {849, 9}, // 326: o_ball (LP) ->  LP LP _B RP double double double double RP
     {850, 13}, // 327: o_player (LP) ->  LP LP _P string int RP double double double double double double RP
     {850, 14}, // 328: o_player (LP) ->  LP LP _P string int GOALIE RP double double double double double double RP
     {850, 8}, // 329: o_player (LP) ->  LP LP _P string RP double double RP
     {850, 7}, // 330: o_player (LP) ->  LP LP _P RP double double RP
     {851, 8}, // 331: o_goal (LP) ->  LP LP _G side RP double double RP
     {851, 10}, // 332: o_goal (LP) ->  LP LP _G side RP double double double double RP
     {852, 7}, // 333: o_flag (LP) ->  LP LP flag_name RP double double RP
     {852, 9}, // 334: o_flag (LP) ->  LP LP flag_name RP double double double double RP
     {854, 7}, // 335: o_unknown (LP) ->  LP LP unknown RP double double RP
     {854, 9}, // 336: o_unknown (LP) ->  LP LP unknown RP double double double double RP
     {853, 7}, // 337: o_line (LP) ->  LP LP line_name RP double double RP
     {855, 2}, // 338: flag_name (_F) ->  _F _C
     {855, 3}, // 339: flag_name (_F) ->  _F _L _T
     {855, 3}, // 340: flag_name (_F) ->  _F _L _B
     {855, 3}, // 341: flag_name (_F) ->  _F _R _T
     {855, 3}, // 342: flag_name (_F) ->  _F _R _B
     {855, 3}, // 343: flag_name (_F) ->  _F _C _T
     {855, 3}, // 344: flag_name (_F) ->  _F _C _B
     {855, 4}, // 345: flag_name (_F) ->  _F _P _L _T
     {855, 4}, // 346: flag_name (_F) ->  _F _P _L _C
     {855, 4}, // 347: flag_name (_F) ->  _F _P _L _B
     {855, 4}, // 348: flag_name (_F) ->  _F _P _R _T
     {855, 4}, // 349: flag_name (_F) ->  _F _P _R _C
     {855, 4}, // 350: flag_name (_F) ->  _F _P _R _B
     {855, 4}, // 351: flag_name (_F) ->  _F _G _L _T
     {855, 4}, // 352: flag_name (_F) ->  _F _G _L _B
     {855, 4}, // 353: flag_name (_F) ->  _F _G _R _T
     {855, 4}, // 354: flag_name (_F) ->  _F _G _R _B
     {855, 3}, // 355: flag_name (_F) ->  _F _L _0
     {855, 3}, // 356: flag_name (_F) ->  _F _R _0
     {855, 3}, // 357: flag_name (_F) ->  _F _T _0
     {855, 3}, // 358: flag_name (_F) ->  _F _B _0
     {855, 4}, // 359: flag_name (_F) ->  _F _T _L _10
     {855, 4}, // 360: flag_name (_F) ->  _F _T _L _20
     {855, 4}, // 361: flag_name (_F) ->  _F _T _L _30
     {855, 4}, // 362: flag_name (_F) ->  _F _T _L _40
     {855, 4}, // 363: flag_name (_F) ->  _F _T _L _50
     {855, 4}, // 364: flag_name (_F) ->  _F _T _R _10
     {855, 4}, // 365: flag_name (_F) ->  _F _T _R _20
     {855, 4}, // 366: flag_name (_F) ->  _F _T _R _30
     {855, 4}, // 367: flag_name (_F) ->  _F _T _R _40
     {855, 4}, // 368: flag_name (_F) ->  _F _T _R _50
     {855, 4}, // 369: flag_name (_F) ->  _F _B _L _10
     {855, 4}, // 370: flag_name (_F) ->  _F _B _L _20
     {855, 4}, // 371: flag_name (_F) ->  _F _B _L _30
     {855, 4}, // 372: flag_name (_F) ->  _F _B _L _40
     {855, 4}, // 373: flag_name (_F) ->  _F _B _L _50
     {855, 4}, // 374: flag_name (_F) ->  _F _B _R _10
     {855, 4}, // 375: flag_name (_F) ->  _F _B _R _20
     {855, 4}, // 376: flag_name (_F) ->  _F _B _R _30
     {855, 4}, // 377: flag_name (_F) ->  _F _B _R _40
     {855, 4}, // 378: flag_name (_F) ->  _F _B _R _50
     {855, 4}, // 379: flag_name (_F) ->  _F _L _T _10
     {855, 4}, // 380: flag_name (_F) ->  _F _L _T _20
     {855, 4}, // 381: flag_name (_F) ->  _F _L _T _30
     {855, 4}, // 382: flag_name (_F) ->  _F _L _B _10
     {855, 4}, // 383: flag_name (_F) ->  _F _L _B _20
     {855, 4}, // 384: flag_name (_F) ->  _F _L _B _30
     {855, 4}, // 385: flag_name (_F) ->  _F _R _T _10
     {855, 4}, // 386: flag_name (_F) ->  _F _R _T _20
     {855, 4}, // 387: flag_name (_F) ->  _F _R _T _30
     {855, 4}, // 388: flag_name (_F) ->  _F _R _B _10
     {855, 4}, // 389: flag_name (_F) ->  _F _R _B _20
     {855, 4}, // 390: flag_name (_F) ->  _F _R _B _30
     {857, 2}, // 391: line_name (_L) ->  _L _L
     {857, 2}, // 392: line_name (_L) ->  _L _R
     {857, 2}, // 393: line_name (_L) ->  _L _T
     {857, 2}, // 394: line_name (_L) ->  _L _B
     {858, 1}, // 395: side (_L) ->  _L
     {858, 1}, // 396: side (_R) ->  _R
     {856, 1}, // 397: unknown (_BB) ->  _BB
     {856, 1}, // 398: unknown (_FF) ->  _FF
     {856, 1}, // 399: unknown (_GG) ->  _GG
     {856, 1}, // 400: unknown (_PP) ->  _PP
     {577, 6}, // 401: hear (LP) ->  LP HEAR int sender string RP
     {859, 1}, // 402: sender (OCL) ->  OCL
     {859, 1}, // 403: sender (OCR) ->  OCR
     {859, 1}, // 404: sender (CO) ->  CO
     {859, 1}, // 405: sender (REFEREE) ->  REFEREE
     {859, 1}, // 406: sender (SELF) ->  SELF
     {859, 1}, // 407: sender ->  double
     {860, 1}, // 408: start_$ ->  start
};

// State info and SR_ transitions for each state.


SR_ const s_0[] =
{
    { { REQ_TOKEN}, { 10} },                
    { {       570}, {  1} }, // start       
    { {       571}, {  2} }, // init        
    { {       572}, {  3} }, // server_param
    { {       573}, {  4} }, // player_param
    { {       574}, {  5} }, // player_type 
    { {       575}, {  6} }, // sense_body  
    { {       576}, {  7} }, // see         
    { {       577}, {  8} }, // hear        
    { {       262}, {  9} }, // LP          
    { {         0}, {  0} },                
};

SR_ const s_1[] =
{
    { { REQ_TOKEN}, {       2} }, 
    { {      EOF_}, { ACCEPT_} }, 
    { {         0}, {       0} }, 
};

SR_ const s_2[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -1} }, 
};

SR_ const s_3[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -2} }, 
};

SR_ const s_4[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -3} }, 
};

SR_ const s_5[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -4} }, 
};

SR_ const s_6[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -5} }, 
};

SR_ const s_7[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -6} }, 
};

SR_ const s_8[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -7} }, 
};

SR_ const s_9[] =
{
    { { REQ_TOKEN}, {  8} },          
    { {       260}, { 10} }, // INIT  
    { {       261}, { 11} }, // SERVER
    { {       459}, { 12} }, // PP    
    { {       489}, { 13} }, // PTY   
    { {       511}, { 14} }, // SEN   
    { {       545}, { 15} }, // SEE   
    { {       559}, { 16} }, // HEAR  
    { {         0}, {  0} },          
};

SR_ const s_10[] =
{
    { { REQ_TOKEN}, {  4} },        
    { {       858}, { 17} }, // side
    { {       551}, { 18} }, // _L  
    { {       552}, { 19} }, // _R  
    { {         0}, {  0} },        
};

SR_ const s_11[] =
{
    { { REQ_TOKEN}, {  3} },       
    { {       583}, { 20} }, // acd
    { {       262}, { 21} }, // LP 
    { {         0}, {  0} },       
};

SR_ const s_12[] =
{
    { { REQ_TOKEN}, {  3} },        
    { {       771}, { 22} }, // amdt
    { {       262}, { 23} }, // LP  
    { {         0}, {  0} },        
};

SR_ const s_13[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       800}, { 24} }, // id
    { {       262}, { 25} }, // LP
    { {         0}, {  0} },      
};

SR_ const s_14[] =
{
    { { REQ_TOKEN}, { 11} },           
    { {       579}, { 26} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       578}, { 28} }, // bool   
    { {       266}, { 29} }, // _10    
    { {       267}, { 30} }, // _20    
    { {       268}, { 31} }, // _30    
    { {       269}, { 32} }, // _40    
    { {       270}, { 33} }, // _50    
    { {       264}, { 34} }, // _0     
    { {       265}, { 35} }, // _1     
    { {         0}, {  0} },           
};

SR_ const s_15[] =
{
    { { REQ_TOKEN}, { 11} },           
    { {       579}, { 36} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       578}, { 28} }, // bool   
    { {       266}, { 29} }, // _10    
    { {       267}, { 30} }, // _20    
    { {       268}, { 31} }, // _30    
    { {       269}, { 32} }, // _40    
    { {       270}, { 33} }, // _50    
    { {       264}, { 34} }, // _0     
    { {       265}, { 35} }, // _1     
    { {         0}, {  0} },           
};

SR_ const s_16[] =
{
    { { REQ_TOKEN}, { 11} },           
    { {       579}, { 37} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       578}, { 28} }, // bool   
    { {       266}, { 29} }, // _10    
    { {       267}, { 30} }, // _20    
    { {       268}, { 31} }, // _30    
    { {       269}, { 32} }, // _40    
    { {       270}, { 33} }, // _50    
    { {       264}, { 34} }, // _0     
    { {       265}, { 35} }, // _1     
    { {         0}, {  0} },           
};

SR_ const s_17[] =
{
    { { REQ_TOKEN}, { 13} },           
    { {       580}, { 38} }, // double 
    { {       257}, { 39} }, // DOUBLE 
    { {       579}, { 40} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       578}, { 28} }, // bool   
    { {       266}, { 29} }, // _10    
    { {       267}, { 30} }, // _20    
    { {       268}, { 31} }, // _30    
    { {       269}, { 32} }, // _40    
    { {       270}, { 33} }, // _50    
    { {       264}, { 34} }, // _0     
    { {       265}, { 35} }, // _1     
    { {         0}, {  0} },           
};

SR_ const s_18[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -395} }, 
};

SR_ const s_19[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -396} }, 
};

SR_ const s_20[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       584}, { 41} }, // am
    { {       262}, { 42} }, // LP
    { {         0}, {  0} },      
};

SR_ const s_21[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       271}, { 43} }, // ACD
    { {         0}, {  0} },       
};

SR_ const s_22[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       772}, { 44} }, // calsmax
    { {       262}, { 45} }, // LP     
    { {         0}, {  0} },           
};

SR_ const s_23[] =
{
    { { REQ_TOKEN}, {  2} },        
    { {       460}, { 46} }, // AMDT
    { {         0}, {  0} },        
};

SR_ const s_24[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       801}, { 47} }, // pt_psm
    { {       262}, { 48} }, // LP    
    { {         0}, {  0} },          
};

SR_ const s_25[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       490}, { 49} }, // ID
    { {         0}, {  0} },      
};

SR_ const s_26[] =
{
    { { REQ_TOKEN}, {  3} },      
    { {       815}, { 50} }, // vm
    { {       262}, { 51} }, // LP
    { {         0}, {  0} },      
};

SR_ const s_27[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -10} }, 
};

SR_ const s_28[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -11} }, 
};

SR_ const s_29[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -12} }, 
};

SR_ const s_30[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -13} }, 
};

SR_ const s_31[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -14} }, 
};

SR_ const s_32[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -15} }, 
};

SR_ const s_33[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -16} }, 
};

SR_ const s_34[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -8} }, 
};

SR_ const s_35[] =
{
    { { DEF_RED}, {  1} }, 
    { {       0}, { -9} }, 
};

SR_ const s_36[] =
{
    { { REQ_TOKEN}, { 10} },             
    { {       847}, { 52} }, // objects  
    { {       848}, { 53} }, // object   
    { {       849}, { 54} }, // o_ball   
    { {       850}, { 55} }, // o_player 
    { {       851}, { 56} }, // o_goal   
    { {       852}, { 57} }, // o_flag   
    { {       853}, { 58} }, // o_line   
    { {       854}, { 59} }, // o_unknown
    { {       262}, { 60} }, // LP       
    { {         0}, {  0} },             
};

SR_ const s_37[] =
{
    { { REQ_TOKEN}, { 19} },           
    { {       859}, { 61} }, // sender 
    { {       560}, { 62} }, // OCL    
    { {       561}, { 63} }, // OCR    
    { {       296}, { 64} }, // CO     
    { {       562}, { 65} }, // REFEREE
    { {       563}, { 66} }, // SELF   
    { {       580}, { 67} }, // double 
    { {       257}, { 39} }, // DOUBLE 
    { {       579}, { 40} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       578}, { 28} }, // bool   
    { {       266}, { 29} }, // _10    
    { {       267}, { 30} }, // _20    
    { {       268}, { 31} }, // _30    
    { {       269}, { 32} }, // _40    
    { {       270}, { 33} }, // _50    
    { {       264}, { 34} }, // _0     
    { {       265}, { 35} }, // _1     
    { {         0}, {  0} },           
};

SR_ const s_38[] =
{
    { { REQ_TOKEN}, { 20} },             
    { {       582}, { 68} }, // play_mode
    { {       493}, { 69} }, // PM_BKO   
    { {       494}, { 70} }, // PM_PO    
    { {       495}, { 71} }, // PM_TO    
    { {       496}, { 72} }, // PM_KOL   
    { {       497}, { 73} }, // PM_KOR   
    { {       498}, { 74} }, // PM_KIL   
    { {       499}, { 75} }, // PM_KIR   
    { {       500}, { 76} }, // PM_FKL   
    { {       501}, { 77} }, // PM_FKR   
    { {       502}, { 78} }, // PM_CKL   
    { {       503}, { 79} }, // PM_CKR   
    { {       504}, { 80} }, // PM_GKL   
    { {       505}, { 81} }, // PM_GKR   
    { {       506}, { 82} }, // PM_GOALL 
    { {       507}, { 83} }, // PM_GOALR 
    { {       508}, { 84} }, // PM_DB    
    { {       509}, { 85} }, // PM_OL    
    { {       510}, { 86} }, // PM_OR    
    { {         0}, {  0} },             
};

SR_ const s_39[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -17} }, 
};

SR_ const s_40[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -18} }, 
};

SR_ const s_41[] =
{
    { { REQ_TOKEN}, {  3} },       
    { {       585}, { 87} }, // bdr
    { {       262}, { 88} }, // LP 
    { {         0}, {  0} },       
};

SR_ const s_42[] =
{
    { { REQ_TOKEN}, {  2} },      
    { {       272}, { 89} }, // AM
    { {         0}, {  0} },      
};

SR_ const s_43[] =
{
    { { REQ_TOKEN}, { 13} },           
    { {       580}, { 90} }, // double 
    { {       257}, { 39} }, // DOUBLE 
    { {       579}, { 40} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       578}, { 28} }, // bool   
    { {       266}, { 29} }, // _10    
    { {       267}, { 30} }, // _20    
    { {       268}, { 31} }, // _30    
    { {       269}, { 32} }, // _40    
    { {       270}, { 33} }, // _50    
    { {       264}, { 34} }, // _0     
    { {       265}, { 35} }, // _1     
    { {         0}, {  0} },           
};

SR_ const s_44[] =
{
    { { REQ_TOKEN}, {  3} },           
    { {       773}, { 91} }, // calsmin
    { {       262}, { 92} }, // LP     
    { {         0}, {  0} },           
};

SR_ const s_45[] =
{
    { { REQ_TOKEN}, {  2} },           
    { {       461}, { 93} }, // CALSMAX
    { {         0}, {  0} },           
};

SR_ const s_46[] =
{
    { { REQ_TOKEN}, { 13} },           
    { {       580}, { 94} }, // double 
    { {       257}, { 39} }, // DOUBLE 
    { {       579}, { 40} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       578}, { 28} }, // bool   
    { {       266}, { 29} }, // _10    
    { {       267}, { 30} }, // _20    
    { {       268}, { 31} }, // _30    
    { {       269}, { 32} }, // _40    
    { {       270}, { 33} }, // _50    
    { {       264}, { 34} }, // _0     
    { {       265}, { 35} }, // _1     
    { {         0}, {  0} },           
};

SR_ const s_47[] =
{
    { { REQ_TOKEN}, {  3} },          
    { {       802}, { 95} }, // pt_sim
    { {       262}, { 96} }, // LP    
    { {         0}, {  0} },          
};

SR_ const s_48[] =
{
    { { REQ_TOKEN}, {  2} },       
    { {       392}, { 97} }, // PSM
    { {         0}, {  0} },       
};

SR_ const s_49[] =
{
    { { REQ_TOKEN}, { 11} },           
    { {       579}, { 98} }, // int    
    { {       258}, { 27} }, // INTEGER
    { {       578}, { 28} }, // bool   
    { {       266}, { 29} }, // _10    
    { {       267}, { 30} }, // _20    
    { {       268}, { 31} }, // _30    
    { {       269}, { 32} }, // _40    
    { {       270}, { 33} }, // _50    
    { {       264}, { 34} }, // _0     
    { {       265}, { 35} }, // _1     
    { {         0}, {  0} },           
};

SR_ const s_50[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       816}, {  99} }, // st
    { {       262}, { 100} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_51[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       512}, { 101} }, // VM
    { {         0}, {   0} },      
};

SR_ const s_52[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 102} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_53[] =
{
    { { REQ_DEF}, {   10} },             
    { {     847}, {  103} }, // objects  
    { {     848}, {   53} }, // object   
    { {     849}, {   54} }, // o_ball   
    { {     850}, {   55} }, // o_player 
    { {     851}, {   56} }, // o_goal   
    { {     852}, {   57} }, // o_flag   
    { {     853}, {   58} }, // o_line   
    { {     854}, {   59} }, // o_unknown
    { {     262}, {   60} }, // LP       
    { {       0}, { -318} },             
};

SR_ const s_54[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -319} }, 
};

SR_ const s_55[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -320} }, 
};

SR_ const s_56[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -321} }, 
};

SR_ const s_57[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -322} }, 
};

SR_ const s_58[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -323} }, 
};

SR_ const s_59[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -324} }, 
};

SR_ const s_60[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       262}, { 104} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_61[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       581}, { 105} }, // string
    { {       259}, { 106} }, // STRING
    { {         0}, {   0} },          
};

SR_ const s_62[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -402} }, 
};

SR_ const s_63[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -403} }, 
};

SR_ const s_64[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -404} }, 
};

SR_ const s_65[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -405} }, 
};

SR_ const s_66[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -406} }, 
};

SR_ const s_67[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -407} }, 
};

SR_ const s_68[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 107} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_69[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -21} }, 
};

SR_ const s_70[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -22} }, 
};

SR_ const s_71[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -23} }, 
};

SR_ const s_72[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -24} }, 
};

SR_ const s_73[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -25} }, 
};

SR_ const s_74[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -26} }, 
};

SR_ const s_75[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -27} }, 
};

SR_ const s_76[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -28} }, 
};

SR_ const s_77[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -29} }, 
};

SR_ const s_78[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -30} }, 
};

SR_ const s_79[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -31} }, 
};

SR_ const s_80[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -32} }, 
};

SR_ const s_81[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -33} }, 
};

SR_ const s_82[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -34} }, 
};

SR_ const s_83[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -35} }, 
};

SR_ const s_84[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -36} }, 
};

SR_ const s_85[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -37} }, 
};

SR_ const s_86[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -38} }, 
};

SR_ const s_87[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       586}, { 108} }, // bp
    { {       262}, { 109} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_88[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       273}, { 110} }, // BDR
    { {         0}, {   0} },       
};

SR_ const s_89[] =
{
    { { REQ_TOKEN}, {   4} },        
    { {       578}, { 111} }, // bool
    { {       264}, {  34} }, // _0  
    { {       265}, {  35} }, // _1  
    { {         0}, {   0} },        
};

SR_ const s_90[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 112} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_91[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       774}, { 113} }, // dprdmax
    { {       262}, { 114} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_92[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       462}, { 115} }, // CALSMIN
    { {         0}, {   0} },           
};

SR_ const s_93[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 116} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_94[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 117} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_95[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       803}, { 118} }, // pt_pd
    { {       262}, { 119} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_96[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       424}, { 120} }, // SIM
    { {         0}, {   0} },       
};

SR_ const s_97[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 121} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_98[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 122} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_99[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       817}, { 123} }, // sp
    { {       262}, { 124} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_100[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       518}, { 125} }, // ST
    { {         0}, {   0} },      
};

SR_ const s_101[] =
{
    { { REQ_TOKEN}, {   4} },        
    { {       832}, { 126} }, // v_q 
    { {       514}, { 127} }, // VQ_H
    { {       513}, { 128} }, // VQ_L
    { {         0}, {   0} },        
};

SR_ const s_102[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -316} }, 
};

SR_ const s_103[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -317} }, 
};

SR_ const s_104[] =
{
    { { REQ_TOKEN}, {  13} },             
    { {       547}, { 129} }, // _B       
    { {       549}, { 130} }, // _P       
    { {       550}, { 131} }, // _G       
    { {       855}, { 132} }, // flag_name
    { {       857}, { 133} }, // line_name
    { {       856}, { 134} }, // unknown  
    { {       548}, { 135} }, // _F       
    { {       551}, { 136} }, // _L       
    { {       554}, { 137} }, // _BB      
    { {       555}, { 138} }, // _FF      
    { {       556}, { 139} }, // _GG      
    { {       557}, { 140} }, // _PP      
    { {         0}, {   0} },             
};

SR_ const s_105[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 141} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_106[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -19} }, 
};

SR_ const s_107[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -20} }, 
};

SR_ const s_108[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       587}, { 142} }, // bam
    { {       262}, { 143} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_109[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       274}, { 144} }, // BP
    { {         0}, {   0} },      
};

SR_ const s_110[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 145} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_111[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 146} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_112[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -40} }, 
};

SR_ const s_113[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       775}, { 147} }, // dprdmin
    { {       262}, { 148} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_114[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       463}, { 149} }, // DPRDMAX
    { {         0}, {   0} },           
};

SR_ const s_115[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 150} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_116[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 151} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_117[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -229} }, 
};

SR_ const s_118[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       804}, { 152} }, // pt_im
    { {       262}, { 153} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_119[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       389}, { 154} }, // PD
    { {         0}, {   0} },      
};

SR_ const s_120[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 155} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_121[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 156} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_122[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -259} }, 
};

SR_ const s_123[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       818}, { 157} }, // ha
    { {       262}, { 158} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_124[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       519}, { 159} }, // SP
    { {         0}, {   0} },      
};

SR_ const s_125[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 160} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_126[] =
{
    { { REQ_TOKEN}, {   5} },         
    { {       833}, { 161} }, // v_w  
    { {       516}, { 162} }, // VW_NO
    { {       515}, { 163} }, // VW_NA
    { {       517}, { 164} }, // VW_WI
    { {         0}, {   0} },         
};

SR_ const s_127[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -276} }, 
};

SR_ const s_128[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -277} }, 
};

SR_ const s_129[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 165} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_130[] =
{
    { { REQ_TOKEN}, {   4} },          
    { {       581}, { 166} }, // string
    { {       263}, { 167} }, // RP    
    { {       259}, { 106} }, // STRING
    { {         0}, {   0} },          
};

SR_ const s_131[] =
{
    { { REQ_TOKEN}, {   4} },        
    { {       858}, { 168} }, // side
    { {       551}, {  18} }, // _L  
    { {       552}, {  19} }, // _R  
    { {         0}, {   0} },        
};

SR_ const s_132[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 169} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_133[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 170} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_134[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 171} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_135[] =
{
    { { REQ_TOKEN}, {   8} },      
    { {       546}, { 172} }, // _C
    { {       551}, { 173} }, // _L
    { {       552}, { 174} }, // _R
    { {       549}, { 175} }, // _P
    { {       550}, { 176} }, // _G
    { {       553}, { 177} }, // _T
    { {       547}, { 178} }, // _B
    { {         0}, {   0} },      
};

SR_ const s_136[] =
{
    { { REQ_TOKEN}, {   5} },      
    { {       551}, { 179} }, // _L
    { {       552}, { 180} }, // _R
    { {       553}, { 181} }, // _T
    { {       547}, { 182} }, // _B
    { {         0}, {   0} },      
};

SR_ const s_137[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -397} }, 
};

SR_ const s_138[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -398} }, 
};

SR_ const s_139[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -399} }, 
};

SR_ const s_140[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -400} }, 
};

SR_ const s_141[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -401} }, 
};

SR_ const s_142[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       588}, { 183} }, // bd
    { {       262}, { 184} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_143[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       275}, { 185} }, // BAM
    { {         0}, {   0} },       
};

SR_ const s_144[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 186} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_145[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 187} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_146[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -41} }, 
};

SR_ const s_147[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       776}, { 188} }, // emaxdf
    { {       262}, { 189} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_148[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       464}, { 190} }, // DPRDMIN
    { {         0}, {   0} },           
};

SR_ const s_149[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 191} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_150[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 192} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_151[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -230} }, 
};

SR_ const s_152[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       805}, { 193} }, // pt_dpr
    { {       262}, { 194} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_153[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       336}, { 195} }, // IM
    { {         0}, {   0} },      
};

SR_ const s_154[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 196} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_155[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 197} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_156[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -260} }, 
};

SR_ const s_157[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       819}, { 198} }, // kick
    { {       262}, { 199} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_158[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       520}, { 200} }, // HA
    { {         0}, {   0} },      
};

SR_ const s_159[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 201} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_160[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 202} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_161[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 203} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_162[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -278} }, 
};

SR_ const s_163[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -279} }, 
};

SR_ const s_164[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -280} }, 
};

SR_ const s_165[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 204} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_166[] =
{
    { { REQ_TOKEN}, {  12} },           
    { {       579}, { 205} }, // int    
    { {       263}, { 206} }, // RP     
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_167[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 207} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_168[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 208} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_169[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 209} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_170[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 210} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_171[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 211} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_172[] =
{
    { { REQ_DEF}, {    3} },      
    { {     553}, {  212} }, // _T
    { {     547}, {  213} }, // _B
    { {       0}, { -338} },      
};

SR_ const s_173[] =
{
    { { REQ_TOKEN}, {   4} },      
    { {       553}, { 214} }, // _T
    { {       547}, { 215} }, // _B
    { {       264}, { 216} }, // _0
    { {         0}, {   0} },      
};

SR_ const s_174[] =
{
    { { REQ_TOKEN}, {   4} },      
    { {       553}, { 217} }, // _T
    { {       547}, { 218} }, // _B
    { {       264}, { 219} }, // _0
    { {         0}, {   0} },      
};

SR_ const s_175[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       551}, { 220} }, // _L
    { {       552}, { 221} }, // _R
    { {         0}, {   0} },      
};

SR_ const s_176[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       551}, { 222} }, // _L
    { {       552}, { 223} }, // _R
    { {         0}, {   0} },      
};

SR_ const s_177[] =
{
    { { REQ_TOKEN}, {   4} },      
    { {       264}, { 224} }, // _0
    { {       551}, { 225} }, // _L
    { {       552}, { 226} }, // _R
    { {         0}, {   0} },      
};

SR_ const s_178[] =
{
    { { REQ_TOKEN}, {   4} },      
    { {       264}, { 227} }, // _0
    { {       551}, { 228} }, // _L
    { {       552}, { 229} }, // _R
    { {         0}, {   0} },      
};

SR_ const s_179[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -391} }, 
};

SR_ const s_180[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -392} }, 
};

SR_ const s_181[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -393} }, 
};

SR_ const s_182[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -394} }, 
};

SR_ const s_183[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       589}, { 230} }, // br
    { {       262}, { 231} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_184[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       276}, { 232} }, // BD
    { {         0}, {   0} },      
};

SR_ const s_185[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 233} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_186[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 234} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_187[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -42} }, 
};

SR_ const s_188[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       777}, { 235} }, // emindf
    { {       262}, { 236} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_189[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       465}, { 237} }, // EMAXDF
    { {         0}, {   0} },          
};

SR_ const s_190[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 238} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_191[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 239} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_192[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -231} }, 
};

SR_ const s_193[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       806}, { 240} }, // pt_ps
    { {       262}, { 241} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_194[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       302}, { 242} }, // DPR
    { {         0}, {   0} },       
};

SR_ const s_195[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 243} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_196[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 244} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_197[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -261} }, 
};

SR_ const s_198[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       820}, { 245} }, // dash
    { {       262}, { 246} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_199[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       521}, { 247} }, // KICK
    { {         0}, {   0} },        
};

SR_ const s_200[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 248} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_201[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 249} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_202[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 250} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_203[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -275} }, 
};

SR_ const s_204[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 251} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_205[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       263}, { 252} }, // RP    
    { {       558}, { 253} }, // GOALIE
    { {         0}, {   0} },          
};

SR_ const s_206[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 254} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_207[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 255} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_208[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 256} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_209[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 257} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_210[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 258} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_211[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 259} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_212[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -343} }, 
};

SR_ const s_213[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -344} }, 
};

SR_ const s_214[] =
{
    { { REQ_DEF}, {    4} },       
    { {     266}, {  260} }, // _10
    { {     267}, {  261} }, // _20
    { {     268}, {  262} }, // _30
    { {       0}, { -339} },       
};

SR_ const s_215[] =
{
    { { REQ_DEF}, {    4} },       
    { {     266}, {  263} }, // _10
    { {     267}, {  264} }, // _20
    { {     268}, {  265} }, // _30
    { {       0}, { -340} },       
};

SR_ const s_216[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -355} }, 
};

SR_ const s_217[] =
{
    { { REQ_DEF}, {    4} },       
    { {     266}, {  266} }, // _10
    { {     267}, {  267} }, // _20
    { {     268}, {  268} }, // _30
    { {       0}, { -341} },       
};

SR_ const s_218[] =
{
    { { REQ_DEF}, {    4} },       
    { {     266}, {  269} }, // _10
    { {     267}, {  270} }, // _20
    { {     268}, {  271} }, // _30
    { {       0}, { -342} },       
};

SR_ const s_219[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -356} }, 
};

SR_ const s_220[] =
{
    { { REQ_TOKEN}, {   4} },      
    { {       553}, { 272} }, // _T
    { {       546}, { 273} }, // _C
    { {       547}, { 274} }, // _B
    { {         0}, {   0} },      
};

SR_ const s_221[] =
{
    { { REQ_TOKEN}, {   4} },      
    { {       553}, { 275} }, // _T
    { {       546}, { 276} }, // _C
    { {       547}, { 277} }, // _B
    { {         0}, {   0} },      
};

SR_ const s_222[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       553}, { 278} }, // _T
    { {       547}, { 279} }, // _B
    { {         0}, {   0} },      
};

SR_ const s_223[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       553}, { 280} }, // _T
    { {       547}, { 281} }, // _B
    { {         0}, {   0} },      
};

SR_ const s_224[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -357} }, 
};

SR_ const s_225[] =
{
    { { REQ_TOKEN}, {   6} },       
    { {       266}, { 282} }, // _10
    { {       267}, { 283} }, // _20
    { {       268}, { 284} }, // _30
    { {       269}, { 285} }, // _40
    { {       270}, { 286} }, // _50
    { {         0}, {   0} },       
};

SR_ const s_226[] =
{
    { { REQ_TOKEN}, {   6} },       
    { {       266}, { 287} }, // _10
    { {       267}, { 288} }, // _20
    { {       268}, { 289} }, // _30
    { {       269}, { 290} }, // _40
    { {       270}, { 291} }, // _50
    { {         0}, {   0} },       
};

SR_ const s_227[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -358} }, 
};

SR_ const s_228[] =
{
    { { REQ_TOKEN}, {   6} },       
    { {       266}, { 292} }, // _10
    { {       267}, { 293} }, // _20
    { {       268}, { 294} }, // _30
    { {       269}, { 295} }, // _40
    { {       270}, { 296} }, // _50
    { {         0}, {   0} },       
};

SR_ const s_229[] =
{
    { { REQ_TOKEN}, {   6} },       
    { {       266}, { 297} }, // _10
    { {       267}, { 298} }, // _20
    { {       268}, { 299} }, // _30
    { {       269}, { 300} }, // _40
    { {       270}, { 301} }, // _50
    { {         0}, {   0} },       
};

SR_ const s_230[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       590}, { 302} }, // bs
    { {       262}, { 303} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_231[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       277}, { 304} }, // BR
    { {         0}, {   0} },      
};

SR_ const s_232[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 305} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_233[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 306} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_234[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -43} }, 
};

SR_ const s_235[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       778}, { 307} }, // esdmax
    { {       262}, { 308} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_236[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       466}, { 309} }, // EMINDF
    { {         0}, {   0} },          
};

SR_ const s_237[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 310} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_238[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 311} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_239[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -232} }, 
};

SR_ const s_240[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       807}, { 312} }, // pt_km
    { {       262}, { 313} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_241[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       391}, { 314} }, // PS
    { {         0}, {   0} },      
};

SR_ const s_242[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 315} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_243[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 316} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_244[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -262} }, 
};

SR_ const s_245[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       821}, { 317} }, // turn
    { {       262}, { 318} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_246[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       522}, { 319} }, // DASH
    { {         0}, {   0} },        
};

SR_ const s_247[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 320} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_248[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 321} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_249[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 322} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_250[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 323} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_251[] =
{
    { { REQ_TOKEN}, {  14} },           
    { {       263}, { 324} }, // RP     
    { {       580}, { 325} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_252[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 326} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_253[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 327} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_254[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 328} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_255[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 329} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_256[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 330} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_257[] =
{
    { { REQ_TOKEN}, {  14} },           
    { {       263}, { 331} }, // RP     
    { {       580}, { 332} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_258[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 333} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_259[] =
{
    { { REQ_TOKEN}, {  14} },           
    { {       263}, { 334} }, // RP     
    { {       580}, { 335} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_260[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -379} }, 
};

SR_ const s_261[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -380} }, 
};

SR_ const s_262[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -381} }, 
};

SR_ const s_263[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -382} }, 
};

SR_ const s_264[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -383} }, 
};

SR_ const s_265[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -384} }, 
};

SR_ const s_266[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -385} }, 
};

SR_ const s_267[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -386} }, 
};

SR_ const s_268[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -387} }, 
};

SR_ const s_269[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -388} }, 
};

SR_ const s_270[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -389} }, 
};

SR_ const s_271[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -390} }, 
};

SR_ const s_272[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -345} }, 
};

SR_ const s_273[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -346} }, 
};

SR_ const s_274[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -347} }, 
};

SR_ const s_275[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -348} }, 
};

SR_ const s_276[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -349} }, 
};

SR_ const s_277[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -350} }, 
};

SR_ const s_278[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -351} }, 
};

SR_ const s_279[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -352} }, 
};

SR_ const s_280[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -353} }, 
};

SR_ const s_281[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -354} }, 
};

SR_ const s_282[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -359} }, 
};

SR_ const s_283[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -360} }, 
};

SR_ const s_284[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -361} }, 
};

SR_ const s_285[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -362} }, 
};

SR_ const s_286[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -363} }, 
};

SR_ const s_287[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -364} }, 
};

SR_ const s_288[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -365} }, 
};

SR_ const s_289[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -366} }, 
};

SR_ const s_290[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -367} }, 
};

SR_ const s_291[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -368} }, 
};

SR_ const s_292[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -369} }, 
};

SR_ const s_293[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -370} }, 
};

SR_ const s_294[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -371} }, 
};

SR_ const s_295[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -372} }, 
};

SR_ const s_296[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -373} }, 
};

SR_ const s_297[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -374} }, 
};

SR_ const s_298[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -375} }, 
};

SR_ const s_299[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -376} }, 
};

SR_ const s_300[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -377} }, 
};

SR_ const s_301[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -378} }, 
};

SR_ const s_302[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       591}, { 336} }, // bsm
    { {       262}, { 337} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_303[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       278}, { 338} }, // BS
    { {         0}, {   0} },      
};

SR_ const s_304[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 339} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_305[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 340} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_306[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -44} }, 
};

SR_ const s_307[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       779}, { 341} }, // esdmin
    { {       262}, { 342} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_308[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       467}, { 343} }, // ESDMAX
    { {         0}, {   0} },          
};

SR_ const s_309[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 344} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_310[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 345} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_311[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -233} }, 
};

SR_ const s_312[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       808}, { 346} }, // pt_kr
    { {       262}, { 347} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_313[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       351}, { 348} }, // KM
    { {         0}, {   0} },      
};

SR_ const s_314[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 349} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_315[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 350} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_316[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -263} }, 
};

SR_ const s_317[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       822}, { 351} }, // say
    { {       262}, { 352} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_318[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       523}, { 353} }, // TURN
    { {         0}, {   0} },        
};

SR_ const s_319[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 354} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_320[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 355} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_321[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -283} }, 
};

SR_ const s_322[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -282} }, 
};

SR_ const s_323[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -281} }, 
};

SR_ const s_324[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -325} }, 
};

SR_ const s_325[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 356} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_326[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 357} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_327[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 358} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_328[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 359} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_329[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -330} }, 
};

SR_ const s_330[] =
{
    { { REQ_TOKEN}, {  14} },           
    { {       263}, { 360} }, // RP     
    { {       580}, { 361} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_331[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -333} }, 
};

SR_ const s_332[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 362} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_333[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -337} }, 
};

SR_ const s_334[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -335} }, 
};

SR_ const s_335[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 363} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_336[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       592}, { 364} }, // bsa
    { {       262}, { 365} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_337[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       279}, { 366} }, // BSM
    { {         0}, {   0} },       
};

SR_ const s_338[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 367} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_339[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 368} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_340[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -45} }, 
};

SR_ const s_341[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       780}, { 369} }, // fdpdf
    { {       262}, { 370} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_342[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       468}, { 371} }, // ESDMIN
    { {         0}, {   0} },          
};

SR_ const s_343[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 372} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_344[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 373} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_345[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -234} }, 
};

SR_ const s_346[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       809}, { 374} }, // pt_es
    { {       262}, { 375} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_347[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       348}, { 376} }, // KR
    { {         0}, {   0} },      
};

SR_ const s_348[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 377} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_349[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 378} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_350[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -264} }, 
};

SR_ const s_351[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       823}, { 379} }, // tneck
    { {       262}, { 380} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_352[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       524}, { 381} }, // SAY
    { {         0}, {   0} },       
};

SR_ const s_353[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 382} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_354[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 383} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_355[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -284} }, 
};

SR_ const s_356[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 384} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_357[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 385} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_358[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 386} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_359[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -329} }, 
};

SR_ const s_360[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -331} }, 
};

SR_ const s_361[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 387} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_362[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 388} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_363[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 389} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_364[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       593}, { 390} }, // bw
    { {       262}, { 391} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_365[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       280}, { 392} }, // BSA
    { {         0}, {   0} },       
};

SR_ const s_366[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 393} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_367[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 394} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_368[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -46} }, 
};

SR_ const s_369[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       781}, { 395} }, // imdf
    { {       262}, { 396} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_370[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       469}, { 397} }, // FDPDF
    { {         0}, {   0} },         
};

SR_ const s_371[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 398} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_372[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 399} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_373[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -235} }, 
};

SR_ const s_374[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       810}, { 400} }, // pt_emx
    { {       262}, { 401} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_375[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       311}, { 402} }, // ES
    { {         0}, {   0} },      
};

SR_ const s_376[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 403} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_377[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 404} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_378[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -265} }, 
};

SR_ const s_379[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       824}, { 405} }, // catch
    { {       262}, { 406} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_380[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       525}, { 407} }, // TNECK
    { {         0}, {   0} },         
};

SR_ const s_381[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 408} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_382[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 409} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_383[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -285} }, 
};

SR_ const s_384[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -326} }, 
};

SR_ const s_385[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 410} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_386[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 411} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_387[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 412} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_388[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -334} }, 
};

SR_ const s_389[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -336} }, 
};

SR_ const s_390[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       594}, { 413} }, // cbc
    { {       262}, { 414} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_391[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       281}, { 415} }, // BW
    { {         0}, {   0} },      
};

SR_ const s_392[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 416} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_393[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 417} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_394[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -47} }, 
};

SR_ const s_395[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       782}, { 418} }, // kprdmax
    { {       262}, { 419} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_396[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       470}, { 420} }, // IMDF
    { {         0}, {   0} },        
};

SR_ const s_397[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 421} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_398[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 422} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_399[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -236} }, 
};

SR_ const s_400[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       811}, { 423} }, // pt_emi
    { {       262}, { 424} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_401[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       491}, { 425} }, // EMAX
    { {         0}, {   0} },        
};

SR_ const s_402[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 426} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_403[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 427} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_404[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -266} }, 
};

SR_ const s_405[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       825}, { 428} }, // move
    { {       262}, { 429} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_406[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       526}, { 430} }, // CATCH
    { {         0}, {   0} },         
};

SR_ const s_407[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 431} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_408[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 432} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_409[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -286} }, 
};

SR_ const s_410[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 433} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_411[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 434} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_412[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -332} }, 
};

SR_ const s_413[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       595}, { 435} }, // cp
    { {       262}, { 436} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_414[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       282}, { 437} }, // CBC
    { {         0}, {   0} },       
};

SR_ const s_415[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 438} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_416[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 439} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_417[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -48} }, 
};

SR_ const s_418[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       783}, { 440} }, // kprdmin
    { {       262}, { 441} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_419[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       471}, { 442} }, // KPRDMAX
    { {         0}, {   0} },           
};

SR_ const s_420[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 443} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_421[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 444} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_422[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -237} }, 
};

SR_ const s_423[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       812}, { 445} }, // pt_kpr
    { {       262}, { 446} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_424[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       309}, { 447} }, // EM
    { {         0}, {   0} },      
};

SR_ const s_425[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 448} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_426[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 449} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_427[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -267} }, 
};

SR_ const s_428[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       826}, { 450} }, // chview
    { {       262}, { 451} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_429[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       527}, { 452} }, // MOVE
    { {         0}, {   0} },        
};

SR_ const s_430[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 453} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_431[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 454} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_432[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -287} }, 
};

SR_ const s_433[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 455} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_434[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 456} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_435[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       596}, { 457} }, // cal
    { {       262}, { 458} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_436[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       283}, { 459} }, // CP
    { {         0}, {   0} },      
};

SR_ const s_437[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 460} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_438[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 461} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_439[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -49} }, 
};

SR_ const s_440[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       784}, { 462} }, // kprdf
    { {       262}, { 463} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_441[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       472}, { 464} }, // KPRDMIN
    { {         0}, {   0} },           
};

SR_ const s_442[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 465} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_443[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 466} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_444[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -238} }, 
};

SR_ const s_445[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       813}, { 467} }, // pt_fdp
    { {       262}, { 468} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_446[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       347}, { 469} }, // KPR
    { {         0}, {   0} },       
};

SR_ const s_447[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 470} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_448[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 471} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_449[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -268} }, 
};

SR_ const s_450[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       827}, { 472} }, // arm
    { {       262}, { 473} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_451[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       528}, { 474} }, // CHVIEW
    { {         0}, {   0} },          
};

SR_ const s_452[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 475} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_453[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 476} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_454[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -288} }, 
};

SR_ const s_455[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 477} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_456[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 478} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_457[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       597}, { 479} }, // caw
    { {       262}, { 480} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_458[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       284}, { 481} }, // CAL
    { {         0}, {   0} },       
};

SR_ const s_459[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 482} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_460[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 483} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_461[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -50} }, 
};

SR_ const s_462[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       785}, { 484} }, // kmdmax
    { {       262}, { 485} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_463[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       473}, { 486} }, // KPRDF
    { {         0}, {   0} },         
};

SR_ const s_464[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 487} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_465[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 488} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_466[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -239} }, 
};

SR_ const s_467[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       814}, { 489} }, // pt_cals
    { {       262}, { 490} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_468[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       314}, { 491} }, // FDP
    { {         0}, {   0} },       
};

SR_ const s_469[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 492} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_470[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 493} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_471[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -269} }, 
};

SR_ const s_472[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       828}, { 494} }, // focus
    { {       262}, { 495} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_473[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       529}, { 496} }, // ARM
    { {         0}, {   0} },       
};

SR_ const s_474[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 497} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_475[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 498} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_476[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -289} }, 
};

SR_ const s_477[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -327} }, 
};

SR_ const s_478[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 499} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_479[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       598}, { 500} }, // cm
    { {       262}, { 501} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_480[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       285}, { 502} }, // CAW
    { {         0}, {   0} },       
};

SR_ const s_481[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 503} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_482[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 504} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_483[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -51} }, 
};

SR_ const s_484[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       786}, { 505} }, // kmdmin
    { {       262}, { 506} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_485[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       474}, { 507} }, // KMDMAX
    { {         0}, {   0} },          
};

SR_ const s_486[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 508} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_487[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 509} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_488[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -240} }, 
};

SR_ const s_489[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 510} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_490[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       492}, { 511} }, // CALS
    { {         0}, {   0} },        
};

SR_ const s_491[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 512} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_492[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 513} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_493[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -270} }, 
};

SR_ const s_494[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       829}, { 514} }, // tackle
    { {       262}, { 515} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_495[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       534}, { 516} }, // FOCUS
    { {         0}, {   0} },         
};

SR_ const s_496[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       834}, { 517} }, // movable
    { {       262}, { 518} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_497[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 519} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_498[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -290} }, 
};

SR_ const s_499[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -328} }, 
};

SR_ const s_500[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       599}, { 520} }, // cadw
    { {       262}, { 521} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_501[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       286}, { 522} }, // CM
    { {         0}, {   0} },      
};

SR_ const s_502[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 523} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_503[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 524} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_504[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -52} }, 
};

SR_ const s_505[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       787}, { 525} }, // ndprdmax
    { {       262}, { 526} }, // LP      
    { {         0}, {   0} },            
};

SR_ const s_506[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       475}, { 527} }, // KMDMIN
    { {         0}, {   0} },          
};

SR_ const s_507[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 528} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_508[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 529} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_509[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -241} }, 
};

SR_ const s_510[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -258} }, 
};

SR_ const s_511[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 530} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_512[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 531} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_513[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -271} }, 
};

SR_ const s_514[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       830}, { 532} }, // collision
    { {       262}, { 533} }, // LP       
    { {         0}, {   0} },             
};

SR_ const s_515[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       536}, { 534} }, // TACKLE
    { {         0}, {   0} },          
};

SR_ const s_516[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       838}, { 535} }, // f_target
    { {       262}, { 536} }, // LP      
    { {         0}, {   0} },            
};

SR_ const s_517[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       835}, { 537} }, // expires
    { {       262}, { 538} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_518[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       530}, { 539} }, // MOVABLE
    { {         0}, {   0} },           
};

SR_ const s_519[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -291} }, 
};

SR_ const s_520[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       600}, { 540} }, // cdefw
    { {       262}, { 541} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_521[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       287}, { 542} }, // CADW
    { {         0}, {   0} },        
};

SR_ const s_522[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 543} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_523[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 544} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_524[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -53} }, 
};

SR_ const s_525[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       788}, { 545} }, // ndprdmin
    { {       262}, { 546} }, // LP      
    { {         0}, {   0} },            
};

SR_ const s_526[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       476}, { 547} }, // NDPRDMAX
    { {         0}, {   0} },            
};

SR_ const s_527[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 548} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_528[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 549} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_529[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -242} }, 
};

SR_ const s_530[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 550} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_531[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -272} }, 
};

SR_ const s_532[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       831}, { 551} }, // foul
    { {       262}, { 552} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_533[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       537}, { 553} }, // COLL
    { {         0}, {   0} },        
};

SR_ const s_534[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       841}, { 554} }, // t_expires
    { {       262}, { 555} }, // LP       
    { {         0}, {   0} },             
};

SR_ const s_535[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       839}, { 556} }, // f_count
    { {       262}, { 557} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_536[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       532}, { 558} }, // TAR
    { {         0}, {   0} },       
};

SR_ const s_537[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       836}, { 559} }, // target
    { {       262}, { 560} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_538[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       531}, { 561} }, // EXP
    { {         0}, {   0} },       
};

SR_ const s_539[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 562} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_540[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       601}, { 563} }, // cdelw
    { {       262}, { 564} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_541[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       288}, { 565} }, // CDEFW
    { {         0}, {   0} },         
};

SR_ const s_542[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 566} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_543[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 567} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_544[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -54} }, 
};

SR_ const s_545[] =
{
    { { REQ_TOKEN}, {   3} },            
    { {       789}, { 568} }, // nsimaxdf
    { {       262}, { 569} }, // LP      
    { {         0}, {   0} },            
};

SR_ const s_546[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       477}, { 570} }, // NDPRDMIN
    { {         0}, {   0} },            
};

SR_ const s_547[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 571} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_548[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 572} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_549[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -243} }, 
};

SR_ const s_550[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -273} }, 
};

SR_ const s_551[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 573} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_552[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       541}, { 574} }, // FOUL
    { {         0}, {   0} },        
};

SR_ const s_553[] =
{
    { { REQ_TOKEN}, {   6} },            
    { {       843}, { 575} }, // col_type
    { {       535}, { 576} }, // NONE    
    { {       538}, { 577} }, // BALL    
    { {       539}, { 578} }, // PLAYER  
    { {       540}, { 579} }, // POST    
    { {         0}, {   0} },            
};

SR_ const s_554[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       842}, { 580} }, // t_count
    { {       262}, { 581} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_555[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       531}, { 582} }, // EXP
    { {         0}, {   0} },       
};

SR_ const s_556[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 583} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_557[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       533}, { 584} }, // COUNT
    { {         0}, {   0} },         
};

SR_ const s_558[] =
{
    { { REQ_TOKEN}, {   5} },               
    { {       840}, { 585} }, // target_type
    { {       551}, { 586} }, // _L         
    { {       552}, { 587} }, // _R         
    { {       535}, { 588} }, // NONE       
    { {         0}, {   0} },               
};

SR_ const s_559[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       837}, { 589} }, // count
    { {       262}, { 590} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_560[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       532}, { 591} }, // TAR
    { {         0}, {   0} },       
};

SR_ const s_561[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 592} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_562[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 593} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_563[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       602}, { 594} }, // ciw
    { {       262}, { 595} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_564[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       289}, { 596} }, // CDELW
    { {         0}, {   0} },         
};

SR_ const s_565[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 597} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_566[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 598} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_567[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -55} }, 
};

SR_ const s_568[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       790}, { 599} }, // pddmax
    { {       262}, { 600} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_569[] =
{
    { { REQ_TOKEN}, {   2} },            
    { {       478}, { 601} }, // NSIMAXDF
    { {         0}, {   0} },            
};

SR_ const s_570[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 602} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_571[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 603} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_572[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -244} }, 
};

SR_ const s_573[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -274} }, 
};

SR_ const s_574[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       844}, { 604} }, // charged
    { {       262}, { 605} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_575[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 606} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_576[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -307} }, 
};

SR_ const s_577[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -308} }, 
};

SR_ const s_578[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -309} }, 
};

SR_ const s_579[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -310} }, 
};

SR_ const s_580[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 607} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_581[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       533}, { 608} }, // COUNT
    { {         0}, {   0} },         
};

SR_ const s_582[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 609} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_583[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -297} }, 
};

SR_ const s_584[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 610} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_585[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 611} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_586[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -300} }, 
};

SR_ const s_587[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -301} }, 
};

SR_ const s_588[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -302} }, 
};

SR_ const s_589[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 612} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_590[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       533}, { 613} }, // COUNT
    { {         0}, {   0} },         
};

SR_ const s_591[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 614} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_592[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 615} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_593[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -293} }, 
};

SR_ const s_594[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       603}, { 616} }, // cmd
    { {       262}, { 617} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_595[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       290}, { 618} }, // CIW
    { {         0}, {   0} },       
};

SR_ const s_596[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 619} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_597[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 620} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_598[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -56} }, 
};

SR_ const s_599[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       791}, { 621} }, // pddmin
    { {       262}, { 622} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_600[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       479}, { 623} }, // PDDMAX
    { {         0}, {   0} },          
};

SR_ const s_601[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 624} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_602[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 625} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_603[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -245} }, 
};

SR_ const s_604[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       845}, { 626} }, // card
    { {       262}, { 627} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_605[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       542}, { 628} }, // CHARGED
    { {         0}, {   0} },           
};

SR_ const s_606[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -306} }, 
};

SR_ const s_607[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -303} }, 
};

SR_ const s_608[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 629} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_609[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 630} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_610[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 631} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_611[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -298} }, 
};

SR_ const s_612[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -292} }, 
};

SR_ const s_613[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 632} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_614[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 633} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_615[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -294} }, 
};

SR_ const s_616[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       604}, { 634} }, // cmpc
    { {       262}, { 635} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_617[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       291}, { 636} }, // CMD
    { {         0}, {   0} },       
};

SR_ const s_618[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 637} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_619[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 638} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_620[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -57} }, 
};

SR_ const s_621[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       792}, { 639} }, // psdf
    { {       262}, { 640} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_622[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       480}, { 641} }, // PDDMIN
    { {         0}, {   0} },          
};

SR_ const s_623[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 642} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_624[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 643} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_625[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -246} }, 
};

SR_ const s_626[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 644} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_627[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       543}, { 645} }, // CARD
    { {         0}, {   0} },        
};

SR_ const s_628[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 646} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_629[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 647} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_630[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -304} }, 
};

SR_ const s_631[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -299} }, 
};

SR_ const s_632[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 648} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_633[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 649} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_634[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       605}, { 650} }, // cmw
    { {       262}, { 651} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_635[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       292}, { 652} }, // CMPC
    { {         0}, {   0} },        
};

SR_ const s_636[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 653} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_637[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 654} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_638[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -58} }, 
};

SR_ const s_639[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       793}, { 655} }, // psmaxdmax
    { {       262}, { 656} }, // LP       
    { {         0}, {   0} },             
};

SR_ const s_640[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       481}, { 657} }, // PSDF
    { {         0}, {   0} },        
};

SR_ const s_641[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 658} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_642[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 659} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_643[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -247} }, 
};

SR_ const s_644[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -311} }, 
};

SR_ const s_645[] =
{
    { { REQ_TOKEN}, {   4} },             
    { {       846}, { 660} }, // card_type
    { {       535}, { 661} }, // NONE     
    { {       544}, { 662} }, // YELLOW   
    { {         0}, {   0} },             
};

SR_ const s_646[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 663} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_647[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -305} }, 
};

SR_ const s_648[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -296} }, 
};

SR_ const s_649[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -295} }, 
};

SR_ const s_650[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       606}, { 664} }, // crw
    { {       262}, { 665} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_651[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       293}, { 666} }, // CMW
    { {         0}, {   0} },       
};

SR_ const s_652[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 667} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_653[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 668} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_654[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -59} }, 
};

SR_ const s_655[] =
{
    { { REQ_TOKEN}, {   3} },             
    { {       794}, { 669} }, // psmaxdmin
    { {       262}, { 670} }, // LP       
    { {         0}, {   0} },             
};

SR_ const s_656[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       482}, { 671} }, // PSMAXDMAX
    { {         0}, {   0} },             
};

SR_ const s_657[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 672} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_658[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 673} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_659[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -248} }, 
};

SR_ const s_660[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 674} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_661[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -314} }, 
};

SR_ const s_662[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -315} }, 
};

SR_ const s_663[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -312} }, 
};

SR_ const s_664[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       607}, { 675} }, // cws
    { {       262}, { 676} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_665[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       294}, { 677} }, // CRW
    { {         0}, {   0} },       
};

SR_ const s_666[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 678} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_667[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 679} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_668[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -60} }, 
};

SR_ const s_669[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       795}, { 680} }, // pt
    { {       262}, { 681} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_670[] =
{
    { { REQ_TOKEN}, {   2} },             
    { {       483}, { 682} }, // PSMAXDMIN
    { {         0}, {   0} },             
};

SR_ const s_671[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 683} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_672[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 684} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_673[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -249} }, 
};

SR_ const s_674[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -313} }, 
};

SR_ const s_675[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       608}, { 685} }, // co
    { {       262}, { 686} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_676[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       295}, { 687} }, // CWS
    { {         0}, {   0} },       
};

SR_ const s_677[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 688} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_678[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 689} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_679[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -61} }, 
};

SR_ const s_680[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       796}, { 690} }, // ptm
    { {       262}, { 691} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_681[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       484}, { 692} }, // PT
    { {         0}, {   0} },      
};

SR_ const s_682[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 693} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_683[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 694} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_684[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -250} }, 
};

SR_ const s_685[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       609}, { 695} }, // cop
    { {       262}, { 696} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_686[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       296}, { 697} }, // CO
    { {         0}, {   0} },      
};

SR_ const s_687[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 698} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_688[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 699} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_689[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -62} }, 
};

SR_ const s_690[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       797}, { 700} }, // rans
    { {       262}, { 701} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_691[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       485}, { 702} }, // PTM
    { {         0}, {   0} },       
};

SR_ const s_692[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 703} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_693[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 704} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_694[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -251} }, 
};

SR_ const s_695[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       610}, { 705} }, // cwr
    { {       262}, { 706} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_696[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       297}, { 707} }, // COP
    { {         0}, {   0} },       
};

SR_ const s_697[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 708} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_698[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 709} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_699[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -63} }, 
};

SR_ const s_700[] =
{
    { { REQ_TOKEN}, {   3} },           
    { {       798}, { 710} }, // simaxdf
    { {       262}, { 711} }, // LP     
    { {         0}, {   0} },           
};

SR_ const s_701[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       486}, { 712} }, // RANS
    { {         0}, {   0} },        
};

SR_ const s_702[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 713} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_703[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 714} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_704[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -252} }, 
};

SR_ const s_705[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       611}, { 715} }, // cw
    { {       262}, { 716} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_706[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       298}, { 717} }, // CWR
    { {         0}, {   0} },       
};

SR_ const s_707[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 718} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_708[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 719} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_709[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -64} }, 
};

SR_ const s_710[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       799}, { 720} }, // submax
    { {       262}, { 721} }, // LP    
    { {         0}, {   0} },          
};

SR_ const s_711[] =
{
    { { REQ_TOKEN}, {   2} },           
    { {       487}, { 722} }, // SIMAXDF
    { {         0}, {   0} },           
};

SR_ const s_712[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 723} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_713[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 724} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_714[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -253} }, 
};

SR_ const s_715[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       612}, { 725} }, // cr
    { {       262}, { 726} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_716[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       299}, { 727} }, // CW
    { {         0}, {   0} },      
};

SR_ const s_717[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 728} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_718[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 729} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_719[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -65} }, 
};

SR_ const s_720[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 730} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_721[] =
{
    { { REQ_TOKEN}, {   2} },          
    { {       488}, { 731} }, // SUBMAX
    { {         0}, {   0} },          
};

SR_ const s_722[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 732} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_723[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 733} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_724[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -254} }, 
};

SR_ const s_725[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       613}, { 734} }, // das
    { {       262}, { 735} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_726[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       300}, { 736} }, // CR
    { {         0}, {   0} },      
};

SR_ const s_727[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 737} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_728[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 738} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_729[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -66} }, 
};

SR_ const s_730[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -228} }, 
};

SR_ const s_731[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 739} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_732[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 740} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_733[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -255} }, 
};

SR_ const s_734[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       614}, { 741} }, // dpr
    { {       262}, { 742} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_735[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       301}, { 743} }, // DAS
    { {         0}, {   0} },       
};

SR_ const s_736[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 744} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_737[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 745} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_738[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -67} }, 
};

SR_ const s_739[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 746} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_740[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -256} }, 
};

SR_ const s_741[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       615}, { 747} }, // dbt
    { {       262}, { 748} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_742[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       302}, { 749} }, // DPR
    { {         0}, {   0} },       
};

SR_ const s_743[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 750} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_744[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 751} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_745[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -68} }, 
};

SR_ const s_746[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -257} }, 
};

SR_ const s_747[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       616}, { 752} }, // ed
    { {       262}, { 753} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_748[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       303}, { 754} }, // DBT
    { {         0}, {   0} },       
};

SR_ const s_749[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 755} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_750[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 756} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_751[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -69} }, 
};

SR_ const s_752[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       617}, { 757} }, // edt
    { {       262}, { 758} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_753[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       304}, { 759} }, // ED
    { {         0}, {   0} },      
};

SR_ const s_754[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 760} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_755[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 761} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_756[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -70} }, 
};

SR_ const s_757[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       618}, { 762} }, // ein
    { {       262}, { 763} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_758[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       305}, { 764} }, // EDT
    { {         0}, {   0} },       
};

SR_ const s_759[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 765} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_760[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 766} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_761[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -71} }, 
};

SR_ const s_762[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       619}, { 767} }, // eit
    { {       262}, { 768} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_763[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       306}, { 769} }, // EIN
    { {         0}, {   0} },       
};

SR_ const s_764[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 770} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_765[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 771} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_766[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -72} }, 
};

SR_ const s_767[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       620}, { 772} }, // ei
    { {       262}, { 773} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_768[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       307}, { 774} }, // EIT
    { {         0}, {   0} },       
};

SR_ const s_769[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 775} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_770[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 776} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_771[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -73} }, 
};

SR_ const s_772[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       621}, { 777} }, // em
    { {       262}, { 778} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_773[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       308}, { 779} }, // EI
    { {         0}, {   0} },      
};

SR_ const s_774[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 780} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_775[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 781} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_776[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -74} }, 
};

SR_ const s_777[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       622}, { 782} }, // eht
    { {       262}, { 783} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_778[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       309}, { 784} }, // EM
    { {         0}, {   0} },      
};

SR_ const s_779[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 785} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_780[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 786} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_781[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -75} }, 
};

SR_ const s_782[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       623}, { 787} }, // es
    { {       262}, { 788} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_783[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       310}, { 789} }, // EHT
    { {         0}, {   0} },       
};

SR_ const s_784[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 790} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_785[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 791} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_786[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -76} }, 
};

SR_ const s_787[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       624}, { 792} }, // fko
    { {       262}, { 793} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_788[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       311}, { 794} }, // ES
    { {         0}, {   0} },      
};

SR_ const s_789[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 795} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_790[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 796} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_791[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -77} }, 
};

SR_ const s_792[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       625}, { 797} }, // fc
    { {       262}, { 798} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_793[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       312}, { 799} }, // FKO
    { {         0}, {   0} },       
};

SR_ const s_794[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 800} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_795[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 801} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_796[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -78} }, 
};

SR_ const s_797[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       626}, { 802} }, // fdp
    { {       262}, { 803} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_798[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       313}, { 804} }, // FC
    { {         0}, {   0} },      
};

SR_ const s_799[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 805} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_800[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 806} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_801[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -79} }, 
};

SR_ const s_802[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       627}, { 807} }, // fe
    { {       262}, { 808} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_803[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       314}, { 809} }, // FDP
    { {         0}, {   0} },       
};

SR_ const s_804[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 810} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_805[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 811} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_806[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -80} }, 
};

SR_ const s_807[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       628}, { 812} }, // fkf
    { {       262}, { 813} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_808[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       315}, { 814} }, // FE
    { {         0}, {   0} },      
};

SR_ const s_809[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 815} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_810[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 816} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_811[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -81} }, 
};

SR_ const s_812[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       629}, { 817} }, // fsp
    { {       262}, { 818} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_813[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       316}, { 819} }, // FKF
    { {         0}, {   0} },       
};

SR_ const s_814[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 820} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_815[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 821} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_816[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -82} }, 
};

SR_ const s_817[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       630}, { 822} }, // fwp
    { {       262}, { 823} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_818[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       317}, { 824} }, // FSP
    { {         0}, {   0} },       
};

SR_ const s_819[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 825} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_820[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 826} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_821[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -83} }, 
};

SR_ const s_822[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       631}, { 827} }, // fl
    { {       262}, { 828} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_823[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       318}, { 829} }, // FWP
    { {         0}, {   0} },       
};

SR_ const s_824[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 830} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_825[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 831} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_826[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -84} }, 
};

SR_ const s_827[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       632}, { 832} }, // fr
    { {       262}, { 833} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_828[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       319}, { 834} }, // FL
    { {         0}, {   0} },      
};

SR_ const s_829[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 835} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_830[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 836} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_831[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -85} }, 
};

SR_ const s_832[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       633}, { 837} }, // glc
    { {       262}, { 838} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_833[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       320}, { 839} }, // FR
    { {         0}, {   0} },      
};

SR_ const s_834[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 840} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_835[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 841} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_836[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -86} }, 
};

SR_ const s_837[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       634}, { 842} }, // gld
    { {       262}, { 843} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_838[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       321}, { 844} }, // GLC
    { {         0}, {   0} },       
};

SR_ const s_839[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 845} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_840[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 846} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_841[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -87} }, 
};

SR_ const s_842[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       635}, { 847} }, // gldir
    { {       262}, { 848} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_843[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       322}, { 849} }, // GLD
    { {         0}, {   0} },       
};

SR_ const s_844[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 850} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_845[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 851} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_846[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -88} }, 
};

SR_ const s_847[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       636}, { 852} }, // glf
    { {       262}, { 853} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_848[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       323}, { 854} }, // GLDIR
    { {         0}, {   0} },         
};

SR_ const s_849[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 855} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_850[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 856} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_851[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -89} }, 
};

SR_ const s_852[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       637}, { 857} }, // glfn
    { {       262}, { 858} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_853[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       324}, { 859} }, // GLF
    { {         0}, {   0} },       
};

SR_ const s_854[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       581}, { 860} }, // string
    { {       259}, { 106} }, // STRING
    { {         0}, {   0} },          
};

SR_ const s_855[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 861} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_856[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -90} }, 
};

SR_ const s_857[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       638}, { 862} }, // glv
    { {       262}, { 863} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_858[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       325}, { 864} }, // GLFN
    { {         0}, {   0} },        
};

SR_ const s_859[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 865} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_860[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 866} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_861[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -91} }, 
};

SR_ const s_862[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       639}, { 867} }, // gl
    { {       262}, { 868} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_863[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       326}, { 869} }, // GLV
    { {         0}, {   0} },       
};

SR_ const s_864[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       581}, { 870} }, // string
    { {       259}, { 106} }, // STRING
    { {         0}, {   0} },          
};

SR_ const s_865[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 871} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_866[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -92} }, 
};

SR_ const s_867[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       640}, { 872} }, // gow
    { {       262}, { 873} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_868[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       327}, { 874} }, // GL
    { {         0}, {   0} },      
};

SR_ const s_869[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 875} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_870[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 876} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_871[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -93} }, 
};

SR_ const s_872[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       641}, { 877} }, // gw
    { {       262}, { 878} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_873[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       328}, { 879} }, // GOW
    { {         0}, {   0} },       
};

SR_ const s_874[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 880} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_875[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 881} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_876[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -94} }, 
};

SR_ const s_877[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       642}, { 882} }, // gmm
    { {       262}, { 883} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_878[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       329}, { 884} }, // GW
    { {         0}, {   0} },      
};

SR_ const s_879[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 885} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_880[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 886} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_881[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -95} }, 
};

SR_ const s_882[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       643}, { 887} }, // gg
    { {       262}, { 888} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_883[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       330}, { 889} }, // GMM
    { {         0}, {   0} },       
};

SR_ const s_884[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 890} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_885[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 891} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_886[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -96} }, 
};

SR_ const s_887[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       644}, { 892} }, // ht
    { {       262}, { 893} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_888[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       331}, { 894} }, // GG
    { {         0}, {   0} },      
};

SR_ const s_889[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 895} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_890[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 896} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_891[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -97} }, 
};

SR_ const s_892[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       645}, { 897} }, // hd
    { {       262}, { 898} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_893[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       332}, { 899} }, // HT
    { {         0}, {   0} },      
};

SR_ const s_894[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 900} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_895[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 901} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_896[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -98} }, 
};

SR_ const s_897[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       646}, { 902} }, // hi
    { {       262}, { 903} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_898[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       333}, { 904} }, // HD
    { {         0}, {   0} },      
};

SR_ const s_899[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 905} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_900[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 906} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_901[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -99} }, 
};

SR_ const s_902[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       647}, { 907} }, // hm
    { {       262}, { 908} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_903[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       334}, { 909} }, // HI
    { {         0}, {   0} },      
};

SR_ const s_904[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 910} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_905[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 911} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_906[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -100} }, 
};

SR_ const s_907[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       648}, { 912} }, // im
    { {       262}, { 913} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_908[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       335}, { 914} }, // HM
    { {         0}, {   0} },      
};

SR_ const s_909[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 915} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_910[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 916} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_911[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -101} }, 
};

SR_ const s_912[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       649}, { 917} }, // k 
    { {       262}, { 918} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_913[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       336}, { 919} }, // IM
    { {         0}, {   0} },      
};

SR_ const s_914[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 920} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_915[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 921} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_916[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -102} }, 
};

SR_ const s_917[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       650}, { 922} }, // kl
    { {       262}, { 923} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_918[] =
{
    { { REQ_TOKEN}, {   2} },     
    { {       337}, { 924} }, // K
    { {         0}, {   0} },     
};

SR_ const s_919[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 925} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_920[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 926} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_921[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -103} }, 
};

SR_ const s_922[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       651}, { 927} }, // kld
    { {       262}, { 928} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_923[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       338}, { 929} }, // KL
    { {         0}, {   0} },      
};

SR_ const s_924[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 930} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_925[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 931} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_926[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -104} }, 
};

SR_ const s_927[] =
{
    { { REQ_TOKEN}, {   3} },         
    { {       652}, { 932} }, // kldir
    { {       262}, { 933} }, // LP   
    { {         0}, {   0} },         
};

SR_ const s_928[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       339}, { 934} }, // KLD
    { {         0}, {   0} },       
};

SR_ const s_929[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 935} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_930[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 936} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_931[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -105} }, 
};

SR_ const s_932[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       653}, { 937} }, // lkf
    { {       262}, { 938} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_933[] =
{
    { { REQ_TOKEN}, {   2} },         
    { {       340}, { 939} }, // KLDIR
    { {         0}, {   0} },         
};

SR_ const s_934[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 940} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_935[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 941} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_936[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -106} }, 
};

SR_ const s_937[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       654}, { 942} }, // klfn
    { {       262}, { 943} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_938[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       341}, { 944} }, // LKF
    { {         0}, {   0} },       
};

SR_ const s_939[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       581}, { 945} }, // string
    { {       259}, { 106} }, // STRING
    { {         0}, {   0} },          
};

SR_ const s_940[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 946} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_941[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -107} }, 
};

SR_ const s_942[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       655}, { 947} }, // klg
    { {       262}, { 948} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_943[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       342}, { 949} }, // KLFN
    { {         0}, {   0} },        
};

SR_ const s_944[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 950} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_945[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 951} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_946[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -108} }, 
};

SR_ const s_947[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       656}, { 952} }, // ks
    { {       262}, { 953} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_948[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       343}, { 954} }, // KLG
    { {         0}, {   0} },       
};

SR_ const s_949[] =
{
    { { REQ_TOKEN}, {   3} },          
    { {       581}, { 955} }, // string
    { {       259}, { 106} }, // STRING
    { {         0}, {   0} },          
};

SR_ const s_950[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 956} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_951[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -109} }, 
};

SR_ const s_952[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       657}, { 957} }, // kw
    { {       262}, { 958} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_953[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       344}, { 959} }, // KS
    { {         0}, {   0} },      
};

SR_ const s_954[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 960} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_955[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 961} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_956[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -110} }, 
};

SR_ const s_957[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       658}, { 962} }, // kow
    { {       262}, { 963} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_958[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       345}, { 964} }, // KW
    { {         0}, {   0} },      
};

SR_ const s_959[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 965} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_960[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 966} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_961[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -111} }, 
};

SR_ const s_962[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       659}, { 967} }, // kpr
    { {       262}, { 968} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_963[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       346}, { 969} }, // KOW
    { {         0}, {   0} },       
};

SR_ const s_964[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 970} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_965[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 971} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_966[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -112} }, 
};

SR_ const s_967[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       660}, { 972} }, // kr
    { {       262}, { 973} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_968[] =
{
    { { REQ_TOKEN}, {   2} },       
    { {       347}, { 974} }, // KPR
    { {         0}, {   0} },       
};

SR_ const s_969[] =
{
    { { REQ_TOKEN}, {  11} },           
    { {       579}, { 975} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_970[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 976} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_971[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -113} }, 
};

SR_ const s_972[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       661}, { 977} }, // krfl
    { {       262}, { 978} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_973[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       348}, { 979} }, // KR
    { {         0}, {   0} },      
};

SR_ const s_974[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 980} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_975[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 981} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_976[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -114} }, 
};

SR_ const s_977[] =
{
    { { REQ_TOKEN}, {   3} },        
    { {       662}, { 982} }, // krfr
    { {       262}, { 983} }, // LP  
    { {         0}, {   0} },        
};

SR_ const s_978[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       349}, { 984} }, // KRFL
    { {         0}, {   0} },        
};

SR_ const s_979[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 985} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_980[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 986} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_981[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -115} }, 
};

SR_ const s_982[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       663}, { 987} }, // km
    { {       262}, { 988} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_983[] =
{
    { { REQ_TOKEN}, {   2} },        
    { {       350}, { 989} }, // KRFR
    { {         0}, {   0} },        
};

SR_ const s_984[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 990} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_985[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 991} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_986[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -116} }, 
};

SR_ const s_987[] =
{
    { { REQ_TOKEN}, {   3} },      
    { {       664}, { 992} }, // lf
    { {       262}, { 993} }, // LP
    { {         0}, {   0} },      
};

SR_ const s_988[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       351}, { 994} }, // KM
    { {         0}, {   0} },      
};

SR_ const s_989[] =
{
    { { REQ_TOKEN}, {  13} },           
    { {       580}, { 995} }, // double 
    { {       257}, {  39} }, // DOUBLE 
    { {       579}, {  40} }, // int    
    { {       258}, {  27} }, // INTEGER
    { {       578}, {  28} }, // bool   
    { {       266}, {  29} }, // _10    
    { {       267}, {  30} }, // _20    
    { {       268}, {  31} }, // _30    
    { {       269}, {  32} }, // _40    
    { {       270}, {  33} }, // _50    
    { {       264}, {  34} }, // _0     
    { {       265}, {  35} }, // _1     
    { {         0}, {   0} },           
};

SR_ const s_990[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       263}, { 996} }, // RP
    { {         0}, {   0} },      
};

SR_ const s_991[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -117} }, 
};

SR_ const s_992[] =
{
    { { REQ_TOKEN}, {   3} },       
    { {       665}, { 997} }, // ldf
    { {       262}, { 998} }, // LP 
    { {         0}, {   0} },       
};

SR_ const s_993[] =
{
    { { REQ_TOKEN}, {   2} },      
    { {       352}, { 999} }, // LF
    { {         0}, {   0} },      
};

SR_ const s_994[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1000} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_995[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1001} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_996[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -118} }, 
};

SR_ const s_997[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       666}, { 1002} }, // lt
    { {       262}, { 1003} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_998[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       353}, { 1004} }, // LDF
    { {         0}, {    0} },       
};

SR_ const s_999[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       581}, { 1005} }, // string
    { {       259}, {  106} }, // STRING
    { {         0}, {    0} },          
};

SR_ const s_1000[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1006} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1001[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -119} }, 
};

SR_ const s_1002[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       667}, { 1007} }, // mbtp
    { {       262}, { 1008} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1003[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       354}, { 1009} }, // LT
    { {         0}, {    0} },      
};

SR_ const s_1004[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       581}, { 1010} }, // string
    { {       259}, {  106} }, // STRING
    { {         0}, {    0} },          
};

SR_ const s_1005[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1011} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1006[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -120} }, 
};

SR_ const s_1007[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       668}, { 1012} }, // maxda
    { {       262}, { 1013} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1008[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       355}, { 1014} }, // MBTP
    { {         0}, {    0} },        
};

SR_ const s_1009[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1015} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1010[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1016} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1011[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -121} }, 
};

SR_ const s_1012[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       669}, { 1017} }, // mdp
    { {       262}, { 1018} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1013[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       356}, { 1019} }, // MAXDA
    { {         0}, {    0} },         
};

SR_ const s_1014[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1020} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1015[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1021} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1016[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -122} }, 
};

SR_ const s_1017[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       670}, { 1022} }, // mgk
    { {       262}, { 1023} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1018[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       357}, { 1024} }, // MDP
    { {         0}, {    0} },       
};

SR_ const s_1019[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1025} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1020[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1026} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1021[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -123} }, 
};

SR_ const s_1022[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       671}, { 1027} }, // mtp
    { {       262}, { 1028} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1023[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       358}, { 1029} }, // MGK
    { {         0}, {    0} },       
};

SR_ const s_1024[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1030} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1025[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1031} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1026[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -124} }, 
};

SR_ const s_1027[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       672}, { 1032} }, // maxm
    { {       262}, { 1033} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1028[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       359}, { 1034} }, // MTP
    { {         0}, {    0} },       
};

SR_ const s_1029[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1035} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1030[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1036} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1031[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -125} }, 
};

SR_ const s_1032[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       673}, { 1037} }, // maxna
    { {       262}, { 1038} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1033[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       360}, { 1039} }, // MAXM
    { {         0}, {    0} },        
};

SR_ const s_1034[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1040} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1035[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1041} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1036[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -126} }, 
};

SR_ const s_1037[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       674}, { 1042} }, // maxnm
    { {       262}, { 1043} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1038[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       361}, { 1044} }, // MAXNA
    { {         0}, {    0} },         
};

SR_ const s_1039[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1045} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1040[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1046} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1041[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -127} }, 
};

SR_ const s_1042[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       675}, { 1047} }, // maxp
    { {       262}, { 1048} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1043[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       362}, { 1049} }, // MAXNM
    { {         0}, {    0} },         
};

SR_ const s_1044[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1050} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1045[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1051} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1046[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -128} }, 
};

SR_ const s_1047[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       676}, { 1052} }, // minda
    { {       262}, { 1053} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1048[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       363}, { 1054} }, // MAXP
    { {         0}, {    0} },        
};

SR_ const s_1049[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1055} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1050[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1056} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1051[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -129} }, 
};

SR_ const s_1052[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       677}, { 1057} }, // mindp
    { {       262}, { 1058} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1053[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       364}, { 1059} }, // MINDA
    { {         0}, {    0} },         
};

SR_ const s_1054[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1060} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1055[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1061} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1056[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -130} }, 
};

SR_ const s_1057[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       678}, { 1062} }, // minm
    { {       262}, { 1063} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1058[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       365}, { 1064} }, // MINDP
    { {         0}, {    0} },         
};

SR_ const s_1059[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1065} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1060[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1066} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1061[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -131} }, 
};

SR_ const s_1062[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       679}, { 1067} }, // minna
    { {       262}, { 1068} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1063[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       366}, { 1069} }, // MINM
    { {         0}, {    0} },        
};

SR_ const s_1064[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1070} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1065[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1071} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1066[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -132} }, 
};

SR_ const s_1067[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       680}, { 1072} }, // minnm
    { {       262}, { 1073} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1068[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       367}, { 1074} }, // MINNA
    { {         0}, {    0} },         
};

SR_ const s_1069[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1075} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1070[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1076} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1071[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -133} }, 
};

SR_ const s_1072[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       681}, { 1077} }, // minp
    { {       262}, { 1078} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1073[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       368}, { 1079} }, // MINNM
    { {         0}, {    0} },         
};

SR_ const s_1074[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1080} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1075[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1081} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1076[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -134} }, 
};

SR_ const s_1077[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       682}, { 1082} }, // neh
    { {       262}, { 1083} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1078[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       369}, { 1084} }, // MINP
    { {         0}, {    0} },        
};

SR_ const s_1079[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1085} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1080[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1086} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1081[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -135} }, 
};

SR_ const s_1082[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       683}, { 1087} }, // nnh
    { {       262}, { 1088} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1083[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       370}, { 1089} }, // NEH
    { {         0}, {    0} },       
};

SR_ const s_1084[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1090} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1085[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1091} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1086[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -136} }, 
};

SR_ const s_1087[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       684}, { 1092} }, // oaas
    { {       262}, { 1093} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1088[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       371}, { 1094} }, // NNH
    { {         0}, {    0} },       
};

SR_ const s_1089[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1095} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1090[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1096} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1091[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -137} }, 
};

SR_ const s_1092[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       685}, { 1097} }, // okm
    { {       262}, { 1098} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1093[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       372}, { 1099} }, // OAAS
    { {         0}, {    0} },        
};

SR_ const s_1094[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1100} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1095[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1101} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1096[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -138} }, 
};

SR_ const s_1097[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       686}, { 1102} }, // op
    { {       262}, { 1103} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1098[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       373}, { 1104} }, // OKM
    { {         0}, {    0} },       
};

SR_ const s_1099[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1105} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1100[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1106} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1101[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -139} }, 
};

SR_ const s_1102[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       687}, { 1107} }, // och
    { {       262}, { 1108} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1103[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       374}, { 1109} }, // OP
    { {         0}, {    0} },      
};

SR_ const s_1104[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1110} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1105[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1111} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1106[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -140} }, 
};

SR_ const s_1107[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       688}, { 1112} }, // pamk
    { {       262}, { 1113} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1108[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       375}, { 1114} }, // OCH
    { {         0}, {    0} },       
};

SR_ const s_1109[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1115} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1110[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1116} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1111[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -141} }, 
};

SR_ const s_1112[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       689}, { 1117} }, // pbsw
    { {       262}, { 1118} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1113[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       376}, { 1119} }, // PAMK
    { {         0}, {    0} },        
};

SR_ const s_1114[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1120} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1115[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1121} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1116[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -142} }, 
};

SR_ const s_1117[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       690}, { 1122} }, // pcmp
    { {       262}, { 1123} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1118[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       377}, { 1124} }, // PBSW
    { {         0}, {    0} },        
};

SR_ const s_1119[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1125} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1120[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1126} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1121[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -143} }, 
};

SR_ const s_1122[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       691}, { 1127} }, // pdx
    { {       262}, { 1128} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1123[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       378}, { 1129} }, // PCMP
    { {         0}, {    0} },        
};

SR_ const s_1124[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1130} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1125[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1131} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1126[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -144} }, 
};

SR_ const s_1127[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       692}, { 1132} }, // pmet
    { {       262}, { 1133} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1128[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       379}, { 1134} }, // PDX
    { {         0}, {    0} },       
};

SR_ const s_1129[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1135} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1130[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1136} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1131[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -145} }, 
};

SR_ const s_1132[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       693}, { 1137} }, // pmgdx
    { {       262}, { 1138} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1133[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       380}, { 1139} }, // PMET
    { {         0}, {    0} },        
};

SR_ const s_1134[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1140} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1135[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1141} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1136[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -146} }, 
};

SR_ const s_1137[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       694}, { 1142} }, // pnk
    { {       262}, { 1143} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1138[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       381}, { 1144} }, // PMGDX
    { {         0}, {    0} },         
};

SR_ const s_1139[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1145} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1140[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1146} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1141[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -147} }, 
};

SR_ const s_1142[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       695}, { 1147} }, // prw
    { {       262}, { 1148} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1143[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       382}, { 1149} }, // PNK
    { {         0}, {    0} },       
};

SR_ const s_1144[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1150} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1145[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1151} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1146[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -148} }, 
};

SR_ const s_1147[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       696}, { 1152} }, // prwa
    { {       262}, { 1153} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1148[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       383}, { 1154} }, // PRW
    { {         0}, {    0} },       
};

SR_ const s_1149[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1155} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1150[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1156} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1151[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -149} }, 
};

SR_ const s_1152[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       697}, { 1157} }, // psw
    { {       262}, { 1158} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1153[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       384}, { 1159} }, // PRWA
    { {         0}, {    0} },        
};

SR_ const s_1154[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1160} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1155[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1161} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1156[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -150} }, 
};

SR_ const s_1157[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       698}, { 1162} }, // ptw
    { {       262}, { 1163} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1158[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       385}, { 1164} }, // PSW
    { {         0}, {    0} },       
};

SR_ const s_1159[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1165} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1160[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1166} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1161[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -151} }, 
};

SR_ const s_1162[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       699}, { 1167} }, // pso
    { {       262}, { 1168} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1163[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       386}, { 1169} }, // PTW
    { {         0}, {    0} },       
};

SR_ const s_1164[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1170} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1165[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1171} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1166[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -152} }, 
};

SR_ const s_1167[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       700}, { 1172} }, // pam
    { {       262}, { 1173} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1168[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       387}, { 1174} }, // PSO
    { {         0}, {    0} },       
};

SR_ const s_1169[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1175} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1170[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1176} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1171[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -153} }, 
};

SR_ const s_1172[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       701}, { 1177} }, // pd
    { {       262}, { 1178} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1173[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       388}, { 1179} }, // PAM
    { {         0}, {    0} },       
};

SR_ const s_1174[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1180} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1175[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1181} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1176[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -154} }, 
};

SR_ const s_1177[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       702}, { 1182} }, // pr
    { {       262}, { 1183} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1178[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       389}, { 1184} }, // PD
    { {         0}, {    0} },      
};

SR_ const s_1179[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1185} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1180[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1186} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1181[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -155} }, 
};

SR_ const s_1182[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       703}, { 1187} }, // ps
    { {       262}, { 1188} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1183[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       390}, { 1189} }, // PR
    { {         0}, {    0} },      
};

SR_ const s_1184[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1190} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1185[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1191} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1186[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -156} }, 
};

SR_ const s_1187[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       704}, { 1192} }, // psm
    { {       262}, { 1193} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1188[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       391}, { 1194} }, // PS
    { {         0}, {    0} },      
};

SR_ const s_1189[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1195} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1190[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1196} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1191[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -157} }, 
};

SR_ const s_1192[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       705}, { 1197} }, // psmm
    { {       262}, { 1198} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1193[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       392}, { 1199} }, // PSM
    { {         0}, {    0} },       
};

SR_ const s_1194[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1200} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1195[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1201} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1196[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -158} }, 
};

SR_ const s_1197[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       706}, { 1202} }, // pw
    { {       262}, { 1203} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1198[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       393}, { 1204} }, // PSMM
    { {         0}, {    0} },        
};

SR_ const s_1199[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1205} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1200[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1206} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1201[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -159} }, 
};

SR_ const s_1202[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       707}, { 1207} }, // ptb
    { {       262}, { 1208} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1203[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       394}, { 1209} }, // PW
    { {         0}, {    0} },      
};

SR_ const s_1204[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1210} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1205[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1211} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1206[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -160} }, 
};

SR_ const s_1207[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       708}, { 1212} }, // ptd
    { {       262}, { 1213} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1208[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       395}, { 1214} }, // PTB
    { {         0}, {    0} },       
};

SR_ const s_1209[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1215} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1210[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1216} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1211[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -161} }, 
};

SR_ const s_1212[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       709}, { 1217} }, // p 
    { {       262}, { 1218} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1213[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       396}, { 1219} }, // PTD
    { {         0}, {    0} },       
};

SR_ const s_1214[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1220} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1215[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1221} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1216[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -162} }, 
};

SR_ const s_1217[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       710}, { 1222} }, // pfl
    { {       262}, { 1223} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1218[] =
{
    { { REQ_TOKEN}, {    2} },     
    { {       397}, { 1224} }, // P
    { {         0}, {    0} },     
};

SR_ const s_1219[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1225} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1220[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1226} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1221[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -163} }, 
};

SR_ const s_1222[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       711}, { 1227} }, // pfr
    { {       262}, { 1228} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1223[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       398}, { 1229} }, // PFL
    { {         0}, {    0} },       
};

SR_ const s_1224[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1230} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1225[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1231} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1226[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -164} }, 
};

SR_ const s_1227[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       712}, { 1232} }, // prof
    { {       262}, { 1233} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1228[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       399}, { 1234} }, // PFR
    { {         0}, {    0} },       
};

SR_ const s_1229[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1235} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1230[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1236} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1231[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -165} }, 
};

SR_ const s_1232[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       713}, { 1237} }, // pgk
    { {       262}, { 1238} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1233[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       400}, { 1239} }, // PROF
    { {         0}, {    0} },        
};

SR_ const s_1234[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1240} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1235[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1241} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1236[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -166} }, 
};

SR_ const s_1237[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       714}, { 1242} }, // qs
    { {       262}, { 1243} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1238[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       401}, { 1244} }, // PGK
    { {         0}, {    0} },       
};

SR_ const s_1239[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1245} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1240[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1246} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1241[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -167} }, 
};

SR_ const s_1242[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       715}, { 1247} }, // qsl
    { {       262}, { 1248} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1243[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       402}, { 1249} }, // QS
    { {         0}, {    0} },      
};

SR_ const s_1244[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1250} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1245[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1251} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1246[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -168} }, 
};

SR_ const s_1247[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       716}, { 1252} }, // rm
    { {       262}, { 1253} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1248[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       403}, { 1254} }, // QSL
    { {         0}, {    0} },       
};

SR_ const s_1249[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1255} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1250[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1256} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1251[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -169} }, 
};

SR_ const s_1252[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       717}, { 1257} }, // rd
    { {       262}, { 1258} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1253[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       404}, { 1259} }, // RM
    { {         0}, {    0} },      
};

SR_ const s_1254[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1260} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1255[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1261} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1256[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -170} }, 
};

SR_ const s_1257[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       718}, { 1262} }, // rdt
    { {       262}, { 1263} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1258[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       405}, { 1264} }, // RD
    { {         0}, {    0} },      
};

SR_ const s_1259[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1265} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1260[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1266} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1261[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -171} }, 
};

SR_ const s_1262[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       719}, { 1267} }, // ri
    { {       262}, { 1268} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1263[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       406}, { 1269} }, // RDT
    { {         0}, {    0} },       
};

SR_ const s_1264[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1270} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1265[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1271} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1266[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -172} }, 
};

SR_ const s_1267[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       720}, { 1272} }, // rmin
    { {       262}, { 1273} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1268[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       407}, { 1274} }, // RI
    { {         0}, {    0} },      
};

SR_ const s_1269[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1275} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1270[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1276} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1271[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -173} }, 
};

SR_ const s_1272[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       721}, { 1277} }, // rs
    { {       262}, { 1278} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1273[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       408}, { 1279} }, // RMIN
    { {         0}, {    0} },        
};

SR_ const s_1274[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1280} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1275[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1281} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1276[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -174} }, 
};

SR_ const s_1277[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       722}, { 1282} }, // rcp
    { {       262}, { 1283} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1278[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       409}, { 1284} }, // RS
    { {         0}, {    0} },      
};

SR_ const s_1279[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1285} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1280[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1286} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1281[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -175} }, 
};

SR_ const s_1282[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       723}, { 1287} }, // sccm
    { {       262}, { 1288} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1283[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       410}, { 1289} }, // RCP
    { {         0}, {    0} },       
};

SR_ const s_1284[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1290} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1285[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1291} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1286[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -176} }, 
};

SR_ const s_1287[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       724}, { 1292} }, // scms
    { {       262}, { 1293} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1288[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       411}, { 1294} }, // SCCM
    { {         0}, {    0} },        
};

SR_ const s_1289[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1295} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1290[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1296} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1291[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -177} }, 
};

SR_ const s_1292[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       725}, { 1297} }, // sms
    { {       262}, { 1298} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1293[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       412}, { 1299} }, // SCMS
    { {         0}, {    0} },        
};

SR_ const s_1294[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1300} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1295[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1301} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1296[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -178} }, 
};

SR_ const s_1297[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       726}, { 1302} }, // sm
    { {       262}, { 1303} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1298[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       413}, { 1304} }, // SMS
    { {         0}, {    0} },       
};

SR_ const s_1299[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1305} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1300[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1306} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1301[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -179} }, 
};

SR_ const s_1302[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       727}, { 1307} }, // ss
    { {       262}, { 1308} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1303[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       414}, { 1309} }, // SM
    { {         0}, {    0} },      
};

SR_ const s_1304[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1310} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1305[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1311} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1306[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -180} }, 
};

SR_ const s_1307[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       728}, { 1312} }, // svs
    { {       262}, { 1313} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1308[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       415}, { 1314} }, // SS
    { {         0}, {    0} },      
};

SR_ const s_1309[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1315} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1310[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1316} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1311[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -181} }, 
};

SR_ const s_1312[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       729}, { 1317} }, // sbs
    { {       262}, { 1318} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1313[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       416}, { 1319} }, // SVS
    { {         0}, {    0} },       
};

SR_ const s_1314[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1320} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1315[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1321} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1316[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -182} }, 
};

SR_ const s_1317[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       730}, { 1322} }, // sdr
    { {       262}, { 1323} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1318[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       417}, { 1324} }, // SBS
    { {         0}, {    0} },       
};

SR_ const s_1319[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1325} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1320[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1326} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1321[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -183} }, 
};

SR_ const s_1322[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       731}, { 1327} }, // sims
    { {       262}, { 1328} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1323[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       418}, { 1329} }, // SDR
    { {         0}, {    0} },       
};

SR_ const s_1324[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1330} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1325[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1331} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1326[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -184} }, 
};

SR_ const s_1327[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       732}, { 1332} }, // sdf
    { {       262}, { 1333} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1328[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       419}, { 1334} }, // SIMS
    { {         0}, {    0} },        
};

SR_ const s_1329[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1335} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1330[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1336} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1331[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -185} }, 
};

SR_ const s_1332[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       733}, { 1337} }, // sotflt
    { {       262}, { 1338} }, // LP    
    { {         0}, {    0} },          
};

SR_ const s_1333[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       420}, { 1339} }, // SDF
    { {         0}, {    0} },       
};

SR_ const s_1334[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1340} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1335[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1341} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1336[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -186} }, 
};

SR_ const s_1337[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       734}, { 1342} }, // sotfrt
    { {       262}, { 1343} }, // LP    
    { {         0}, {    0} },          
};

SR_ const s_1338[] =
{
    { { REQ_TOKEN}, {    2} },          
    { {       421}, { 1344} }, // SOTFLT
    { {         0}, {    0} },          
};

SR_ const s_1339[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1345} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1340[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1346} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1341[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -187} }, 
};

SR_ const s_1342[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       735}, { 1347} }, // sc
    { {       262}, { 1348} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1343[] =
{
    { { REQ_TOKEN}, {    2} },          
    { {       422}, { 1349} }, // SOTFRT
    { {         0}, {    0} },          
};

SR_ const s_1344[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1350} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1345[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1351} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1346[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -188} }, 
};

SR_ const s_1347[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       736}, { 1352} }, // sim
    { {       262}, { 1353} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1348[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       423}, { 1354} }, // SC
    { {         0}, {    0} },      
};

SR_ const s_1349[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1355} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1350[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1356} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1351[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -189} }, 
};

SR_ const s_1352[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       737}, { 1357} }, // smax
    { {       262}, { 1358} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1353[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       424}, { 1359} }, // SIM
    { {         0}, {    0} },       
};

SR_ const s_1354[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1360} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1355[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1361} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1356[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -190} }, 
};

SR_ const s_1357[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       738}, { 1362} }, // sgl
    { {       262}, { 1363} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1358[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       425}, { 1364} }, // SMAX
    { {         0}, {    0} },        
};

SR_ const s_1359[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1365} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1360[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1366} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1361[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -191} }, 
};

SR_ const s_1362[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       739}, { 1367} }, // sgr
    { {       262}, { 1368} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1363[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       426}, { 1369} }, // SGL
    { {         0}, {    0} },       
};

SR_ const s_1364[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1370} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1365[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1371} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1366[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -192} }, 
};

SR_ const s_1367[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       740}, { 1372} }, // sbv
    { {       262}, { 1373} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1368[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       427}, { 1374} }, // SGR
    { {         0}, {    0} },       
};

SR_ const s_1369[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1375} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1370[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1376} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1371[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -193} }, 
};

SR_ const s_1372[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       741}, { 1377} }, // smics
    { {       262}, { 1378} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1373[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       428}, { 1379} }, // SBV
    { {         0}, {    0} },       
};

SR_ const s_1374[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1380} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1375[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1381} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1376[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -194} }, 
};

SR_ const s_1377[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       742}, { 1382} }, // smod
    { {       262}, { 1383} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1378[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       429}, { 1384} }, // SMICS
    { {         0}, {    0} },         
};

SR_ const s_1379[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1385} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1380[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1386} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1381[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -195} }, 
};

SR_ const s_1382[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       743}, { 1387} }, // so
    { {       262}, { 1388} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1383[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       430}, { 1389} }, // SMOD
    { {         0}, {    0} },        
};

SR_ const s_1384[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1390} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1385[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1391} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1386[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -196} }, 
};

SR_ const s_1387[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       744}, { 1392} }, // sso
    { {       262}, { 1393} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1388[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       431}, { 1394} }, // SO
    { {         0}, {    0} },      
};

SR_ const s_1389[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1395} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1390[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1396} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1391[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -197} }, 
};

SR_ const s_1392[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       745}, { 1397} }, // tbd
    { {       262}, { 1398} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1393[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       432}, { 1399} }, // SSO
    { {         0}, {    0} },       
};

SR_ const s_1394[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1400} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1395[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1401} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1396[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -198} }, 
};

SR_ const s_1397[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       746}, { 1402} }, // tc
    { {       262}, { 1403} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1398[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       433}, { 1404} }, // TBD
    { {         0}, {    0} },       
};

SR_ const s_1399[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1405} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1400[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1406} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1401[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -199} }, 
};

SR_ const s_1402[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       747}, { 1407} }, // td
    { {       262}, { 1408} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1403[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       434}, { 1409} }, // TC
    { {         0}, {    0} },      
};

SR_ const s_1404[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1410} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1405[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1411} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1406[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -200} }, 
};

SR_ const s_1407[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       748}, { 1412} }, // te
    { {       262}, { 1413} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1408[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       435}, { 1414} }, // TD
    { {         0}, {    0} },      
};

SR_ const s_1409[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1415} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1410[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1416} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1411[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -201} }, 
};

SR_ const s_1412[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       749}, { 1417} }, // tpr
    { {       262}, { 1418} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1413[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       436}, { 1419} }, // TE
    { {         0}, {    0} },      
};

SR_ const s_1414[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1420} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1415[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1421} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1416[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -202} }, 
};

SR_ const s_1417[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       750}, { 1422} }, // trf
    { {       262}, { 1423} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1418[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       437}, { 1424} }, // TPR
    { {         0}, {    0} },       
};

SR_ const s_1419[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1425} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1420[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1426} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1421[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -203} }, 
};

SR_ const s_1422[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       751}, { 1427} }, // tw
    { {       262}, { 1428} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1423[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       438}, { 1429} }, // TRF
    { {         0}, {    0} },       
};

SR_ const s_1424[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1430} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1425[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1431} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1426[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -204} }, 
};

SR_ const s_1427[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       752}, { 1432} }, // tan
    { {       262}, { 1433} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1428[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       439}, { 1434} }, // TW
    { {         0}, {    0} },      
};

SR_ const s_1429[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1435} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1430[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1436} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1431[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -205} }, 
};

SR_ const s_1432[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       753}, { 1437} }, // tls
    { {       262}, { 1438} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1433[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       440}, { 1439} }, // TAN
    { {         0}, {    0} },       
};

SR_ const s_1434[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1440} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1435[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1441} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1436[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -206} }, 
};

SR_ const s_1437[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       754}, { 1442} }, // trs
    { {       262}, { 1443} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1438[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       441}, { 1444} }, // TLS
    { {         0}, {    0} },       
};

SR_ const s_1439[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1445} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1440[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1446} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1441[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -207} }, 
};

SR_ const s_1442[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       755}, { 1447} }, // tlc
    { {       262}, { 1448} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1443[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       442}, { 1449} }, // TRS
    { {         0}, {    0} },       
};

SR_ const s_1444[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       581}, { 1450} }, // string
    { {       259}, {  106} }, // STRING
    { {         0}, {    0} },          
};

SR_ const s_1445[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1451} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1446[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -208} }, 
};

SR_ const s_1447[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       756}, { 1452} }, // tld
    { {       262}, { 1453} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1448[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       443}, { 1454} }, // TLC
    { {         0}, {    0} },       
};

SR_ const s_1449[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       581}, { 1455} }, // string
    { {       259}, {  106} }, // STRING
    { {         0}, {    0} },          
};

SR_ const s_1450[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1456} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1451[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -209} }, 
};

SR_ const s_1452[] =
{
    { { REQ_TOKEN}, {    3} },         
    { {       757}, { 1457} }, // tldir
    { {       262}, { 1458} }, // LP   
    { {         0}, {    0} },         
};

SR_ const s_1453[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       444}, { 1459} }, // TLD
    { {         0}, {    0} },       
};

SR_ const s_1454[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1460} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1455[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1461} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1456[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -210} }, 
};

SR_ const s_1457[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       758}, { 1462} }, // tlf
    { {       262}, { 1463} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1458[] =
{
    { { REQ_TOKEN}, {    2} },         
    { {       445}, { 1464} }, // TLDIR
    { {         0}, {    0} },         
};

SR_ const s_1459[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1465} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1460[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1466} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1461[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -211} }, 
};

SR_ const s_1462[] =
{
    { { REQ_TOKEN}, {    3} },        
    { {       759}, { 1467} }, // tlfn
    { {       262}, { 1468} }, // LP  
    { {         0}, {    0} },        
};

SR_ const s_1463[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       446}, { 1469} }, // TLF
    { {         0}, {    0} },       
};

SR_ const s_1464[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       581}, { 1470} }, // string
    { {       259}, {  106} }, // STRING
    { {         0}, {    0} },          
};

SR_ const s_1465[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1471} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1466[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -212} }, 
};

SR_ const s_1467[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       760}, { 1472} }, // tl
    { {       262}, { 1473} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1468[] =
{
    { { REQ_TOKEN}, {    2} },        
    { {       447}, { 1474} }, // TLFN
    { {         0}, {    0} },        
};

SR_ const s_1469[] =
{
    { { REQ_TOKEN}, {   11} },           
    { {       579}, { 1475} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1470[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1476} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1471[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -213} }, 
};

SR_ const s_1472[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       761}, { 1477} }, // uo
    { {       262}, { 1478} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1473[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       448}, { 1479} }, // TL
    { {         0}, {    0} },      
};

SR_ const s_1474[] =
{
    { { REQ_TOKEN}, {    3} },          
    { {       581}, { 1480} }, // string
    { {       259}, {  106} }, // STRING
    { {         0}, {    0} },          
};

SR_ const s_1475[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1481} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1476[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -214} }, 
};

SR_ const s_1477[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       762}, { 1482} }, // v 
    { {       262}, { 1483} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1478[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       449}, { 1484} }, // UO
    { {         0}, {    0} },      
};

SR_ const s_1479[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1485} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1480[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1486} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1481[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -215} }, 
};

SR_ const s_1482[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       763}, { 1487} }, // va
    { {       262}, { 1488} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1483[] =
{
    { { REQ_TOKEN}, {    2} },     
    { {       450}, { 1489} }, // V
    { {         0}, {    0} },     
};

SR_ const s_1484[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1490} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1485[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1491} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1486[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -216} }, 
};

SR_ const s_1487[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       764}, { 1492} }, // vd
    { {       262}, { 1493} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1488[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       451}, { 1494} }, // VA
    { {         0}, {    0} },      
};

SR_ const s_1489[] =
{
    { { REQ_TOKEN}, {    4} },        
    { {       578}, { 1495} }, // bool
    { {       264}, {   34} }, // _0  
    { {       265}, {   35} }, // _1  
    { {         0}, {    0} },        
};

SR_ const s_1490[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1496} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1491[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -217} }, 
};

SR_ const s_1492[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       765}, { 1497} }, // wa
    { {       262}, { 1498} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1493[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       452}, { 1499} }, // VD
    { {         0}, {    0} },      
};

SR_ const s_1494[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1500} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1495[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1501} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1496[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -218} }, 
};

SR_ const s_1497[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       766}, { 1502} }, // wd
    { {       262}, { 1503} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1498[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       453}, { 1504} }, // WA
    { {         0}, {    0} },      
};

SR_ const s_1499[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1505} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1500[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1506} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1501[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -219} }, 
};

SR_ const s_1502[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       767}, { 1507} }, // wf
    { {       262}, { 1508} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1503[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       454}, { 1509} }, // WD
    { {         0}, {    0} },      
};

SR_ const s_1504[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1510} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1505[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1511} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1506[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -220} }, 
};

SR_ const s_1507[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       768}, { 1512} }, // wn
    { {       262}, { 1513} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1508[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       455}, { 1514} }, // WF
    { {         0}, {    0} },      
};

SR_ const s_1509[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1515} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1510[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1516} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1511[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -221} }, 
};

SR_ const s_1512[] =
{
    { { REQ_TOKEN}, {    3} },      
    { {       769}, { 1517} }, // wr
    { {       262}, { 1518} }, // LP
    { {         0}, {    0} },      
};

SR_ const s_1513[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       456}, { 1519} }, // WN
    { {         0}, {    0} },      
};

SR_ const s_1514[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1520} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1515[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1521} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1516[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -222} }, 
};

SR_ const s_1517[] =
{
    { { REQ_TOKEN}, {    3} },       
    { {       770}, { 1522} }, // wra
    { {       262}, { 1523} }, // LP 
    { {         0}, {    0} },       
};

SR_ const s_1518[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       457}, { 1524} }, // WR
    { {         0}, {    0} },      
};

SR_ const s_1519[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1525} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1520[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1526} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1521[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -223} }, 
};

SR_ const s_1522[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1527} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1523[] =
{
    { { REQ_TOKEN}, {    2} },       
    { {       458}, { 1528} }, // WRA
    { {         0}, {    0} },       
};

SR_ const s_1524[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1529} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1525[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1530} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1526[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -224} }, 
};

SR_ const s_1527[] =
{
    { { DEF_RED}, {   1} }, 
    { {       0}, { -39} }, 
};

SR_ const s_1528[] =
{
    { { REQ_TOKEN}, {   13} },           
    { {       580}, { 1531} }, // double 
    { {       257}, {   39} }, // DOUBLE 
    { {       579}, {   40} }, // int    
    { {       258}, {   27} }, // INTEGER
    { {       578}, {   28} }, // bool   
    { {       266}, {   29} }, // _10    
    { {       267}, {   30} }, // _20    
    { {       268}, {   31} }, // _30    
    { {       269}, {   32} }, // _40    
    { {       270}, {   33} }, // _50    
    { {       264}, {   34} }, // _0     
    { {       265}, {   35} }, // _1     
    { {         0}, {    0} },           
};

SR_ const s_1529[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1532} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1530[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -225} }, 
};

SR_ const s_1531[] =
{
    { { REQ_TOKEN}, {    2} },      
    { {       263}, { 1533} }, // RP
    { {         0}, {    0} },      
};

SR_ const s_1532[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -226} }, 
};

SR_ const s_1533[] =
{
    { { DEF_RED}, {    1} }, 
    { {       0}, { -227} }, 
};


// State array:
SR_ const *s_state[] =
{
  s_0,  s_1,  s_2,  s_3,  s_4,  s_5,  s_6,  s_7,  s_8,  s_9,
  s_10,  s_11,  s_12,  s_13,  s_14,  s_15,  s_16,  s_17,  s_18,  s_19,
  s_20,  s_21,  s_22,  s_23,  s_24,  s_25,  s_26,  s_27,  s_28,  s_29,
  s_30,  s_31,  s_32,  s_33,  s_34,  s_35,  s_36,  s_37,  s_38,  s_39,
  s_40,  s_41,  s_42,  s_43,  s_44,  s_45,  s_46,  s_47,  s_48,  s_49,
  s_50,  s_51,  s_52,  s_53,  s_54,  s_55,  s_56,  s_57,  s_58,  s_59,
  s_60,  s_61,  s_62,  s_63,  s_64,  s_65,  s_66,  s_67,  s_68,  s_69,
  s_70,  s_71,  s_72,  s_73,  s_74,  s_75,  s_76,  s_77,  s_78,  s_79,
  s_80,  s_81,  s_82,  s_83,  s_84,  s_85,  s_86,  s_87,  s_88,  s_89,
  s_90,  s_91,  s_92,  s_93,  s_94,  s_95,  s_96,  s_97,  s_98,  s_99,
  s_100,  s_101,  s_102,  s_103,  s_104,  s_105,  s_106,  s_107,  s_108,  s_109,
  s_110,  s_111,  s_112,  s_113,  s_114,  s_115,  s_116,  s_117,  s_118,  s_119,
  s_120,  s_121,  s_122,  s_123,  s_124,  s_125,  s_126,  s_127,  s_128,  s_129,
  s_130,  s_131,  s_132,  s_133,  s_134,  s_135,  s_136,  s_137,  s_138,  s_139,
  s_140,  s_141,  s_142,  s_143,  s_144,  s_145,  s_146,  s_147,  s_148,  s_149,
  s_150,  s_151,  s_152,  s_153,  s_154,  s_155,  s_156,  s_157,  s_158,  s_159,
  s_160,  s_161,  s_162,  s_163,  s_164,  s_165,  s_166,  s_167,  s_168,  s_169,
  s_170,  s_171,  s_172,  s_173,  s_174,  s_175,  s_176,  s_177,  s_178,  s_179,
  s_180,  s_181,  s_182,  s_183,  s_184,  s_185,  s_186,  s_187,  s_188,  s_189,
  s_190,  s_191,  s_192,  s_193,  s_194,  s_195,  s_196,  s_197,  s_198,  s_199,
  s_200,  s_201,  s_202,  s_203,  s_204,  s_205,  s_206,  s_207,  s_208,  s_209,
  s_210,  s_211,  s_212,  s_213,  s_214,  s_215,  s_216,  s_217,  s_218,  s_219,
  s_220,  s_221,  s_222,  s_223,  s_224,  s_225,  s_226,  s_227,  s_228,  s_229,
  s_230,  s_231,  s_232,  s_233,  s_234,  s_235,  s_236,  s_237,  s_238,  s_239,
  s_240,  s_241,  s_242,  s_243,  s_244,  s_245,  s_246,  s_247,  s_248,  s_249,
  s_250,  s_251,  s_252,  s_253,  s_254,  s_255,  s_256,  s_257,  s_258,  s_259,
  s_260,  s_261,  s_262,  s_263,  s_264,  s_265,  s_266,  s_267,  s_268,  s_269,
  s_270,  s_271,  s_272,  s_273,  s_274,  s_275,  s_276,  s_277,  s_278,  s_279,
  s_280,  s_281,  s_282,  s_283,  s_284,  s_285,  s_286,  s_287,  s_288,  s_289,
  s_290,  s_291,  s_292,  s_293,  s_294,  s_295,  s_296,  s_297,  s_298,  s_299,
  s_300,  s_301,  s_302,  s_303,  s_304,  s_305,  s_306,  s_307,  s_308,  s_309,
  s_310,  s_311,  s_312,  s_313,  s_314,  s_315,  s_316,  s_317,  s_318,  s_319,
  s_320,  s_321,  s_322,  s_323,  s_324,  s_325,  s_326,  s_327,  s_328,  s_329,
  s_330,  s_331,  s_332,  s_333,  s_334,  s_335,  s_336,  s_337,  s_338,  s_339,
  s_340,  s_341,  s_342,  s_343,  s_344,  s_345,  s_346,  s_347,  s_348,  s_349,
  s_350,  s_351,  s_352,  s_353,  s_354,  s_355,  s_356,  s_357,  s_358,  s_359,
  s_360,  s_361,  s_362,  s_363,  s_364,  s_365,  s_366,  s_367,  s_368,  s_369,
  s_370,  s_371,  s_372,  s_373,  s_374,  s_375,  s_376,  s_377,  s_378,  s_379,
  s_380,  s_381,  s_382,  s_383,  s_384,  s_385,  s_386,  s_387,  s_388,  s_389,
  s_390,  s_391,  s_392,  s_393,  s_394,  s_395,  s_396,  s_397,  s_398,  s_399,
  s_400,  s_401,  s_402,  s_403,  s_404,  s_405,  s_406,  s_407,  s_408,  s_409,
  s_410,  s_411,  s_412,  s_413,  s_414,  s_415,  s_416,  s_417,  s_418,  s_419,
  s_420,  s_421,  s_422,  s_423,  s_424,  s_425,  s_426,  s_427,  s_428,  s_429,
  s_430,  s_431,  s_432,  s_433,  s_434,  s_435,  s_436,  s_437,  s_438,  s_439,
  s_440,  s_441,  s_442,  s_443,  s_444,  s_445,  s_446,  s_447,  s_448,  s_449,
  s_450,  s_451,  s_452,  s_453,  s_454,  s_455,  s_456,  s_457,  s_458,  s_459,
  s_460,  s_461,  s_462,  s_463,  s_464,  s_465,  s_466,  s_467,  s_468,  s_469,
  s_470,  s_471,  s_472,  s_473,  s_474,  s_475,  s_476,  s_477,  s_478,  s_479,
  s_480,  s_481,  s_482,  s_483,  s_484,  s_485,  s_486,  s_487,  s_488,  s_489,
  s_490,  s_491,  s_492,  s_493,  s_494,  s_495,  s_496,  s_497,  s_498,  s_499,
  s_500,  s_501,  s_502,  s_503,  s_504,  s_505,  s_506,  s_507,  s_508,  s_509,
  s_510,  s_511,  s_512,  s_513,  s_514,  s_515,  s_516,  s_517,  s_518,  s_519,
  s_520,  s_521,  s_522,  s_523,  s_524,  s_525,  s_526,  s_527,  s_528,  s_529,
  s_530,  s_531,  s_532,  s_533,  s_534,  s_535,  s_536,  s_537,  s_538,  s_539,
  s_540,  s_541,  s_542,  s_543,  s_544,  s_545,  s_546,  s_547,  s_548,  s_549,
  s_550,  s_551,  s_552,  s_553,  s_554,  s_555,  s_556,  s_557,  s_558,  s_559,
  s_560,  s_561,  s_562,  s_563,  s_564,  s_565,  s_566,  s_567,  s_568,  s_569,
  s_570,  s_571,  s_572,  s_573,  s_574,  s_575,  s_576,  s_577,  s_578,  s_579,
  s_580,  s_581,  s_582,  s_583,  s_584,  s_585,  s_586,  s_587,  s_588,  s_589,
  s_590,  s_591,  s_592,  s_593,  s_594,  s_595,  s_596,  s_597,  s_598,  s_599,
  s_600,  s_601,  s_602,  s_603,  s_604,  s_605,  s_606,  s_607,  s_608,  s_609,
  s_610,  s_611,  s_612,  s_613,  s_614,  s_615,  s_616,  s_617,  s_618,  s_619,
  s_620,  s_621,  s_622,  s_623,  s_624,  s_625,  s_626,  s_627,  s_628,  s_629,
  s_630,  s_631,  s_632,  s_633,  s_634,  s_635,  s_636,  s_637,  s_638,  s_639,
  s_640,  s_641,  s_642,  s_643,  s_644,  s_645,  s_646,  s_647,  s_648,  s_649,
  s_650,  s_651,  s_652,  s_653,  s_654,  s_655,  s_656,  s_657,  s_658,  s_659,
  s_660,  s_661,  s_662,  s_663,  s_664,  s_665,  s_666,  s_667,  s_668,  s_669,
  s_670,  s_671,  s_672,  s_673,  s_674,  s_675,  s_676,  s_677,  s_678,  s_679,
  s_680,  s_681,  s_682,  s_683,  s_684,  s_685,  s_686,  s_687,  s_688,  s_689,
  s_690,  s_691,  s_692,  s_693,  s_694,  s_695,  s_696,  s_697,  s_698,  s_699,
  s_700,  s_701,  s_702,  s_703,  s_704,  s_705,  s_706,  s_707,  s_708,  s_709,
  s_710,  s_711,  s_712,  s_713,  s_714,  s_715,  s_716,  s_717,  s_718,  s_719,
  s_720,  s_721,  s_722,  s_723,  s_724,  s_725,  s_726,  s_727,  s_728,  s_729,
  s_730,  s_731,  s_732,  s_733,  s_734,  s_735,  s_736,  s_737,  s_738,  s_739,
  s_740,  s_741,  s_742,  s_743,  s_744,  s_745,  s_746,  s_747,  s_748,  s_749,
  s_750,  s_751,  s_752,  s_753,  s_754,  s_755,  s_756,  s_757,  s_758,  s_759,
  s_760,  s_761,  s_762,  s_763,  s_764,  s_765,  s_766,  s_767,  s_768,  s_769,
  s_770,  s_771,  s_772,  s_773,  s_774,  s_775,  s_776,  s_777,  s_778,  s_779,
  s_780,  s_781,  s_782,  s_783,  s_784,  s_785,  s_786,  s_787,  s_788,  s_789,
  s_790,  s_791,  s_792,  s_793,  s_794,  s_795,  s_796,  s_797,  s_798,  s_799,
  s_800,  s_801,  s_802,  s_803,  s_804,  s_805,  s_806,  s_807,  s_808,  s_809,
  s_810,  s_811,  s_812,  s_813,  s_814,  s_815,  s_816,  s_817,  s_818,  s_819,
  s_820,  s_821,  s_822,  s_823,  s_824,  s_825,  s_826,  s_827,  s_828,  s_829,
  s_830,  s_831,  s_832,  s_833,  s_834,  s_835,  s_836,  s_837,  s_838,  s_839,
  s_840,  s_841,  s_842,  s_843,  s_844,  s_845,  s_846,  s_847,  s_848,  s_849,
  s_850,  s_851,  s_852,  s_853,  s_854,  s_855,  s_856,  s_857,  s_858,  s_859,
  s_860,  s_861,  s_862,  s_863,  s_864,  s_865,  s_866,  s_867,  s_868,  s_869,
  s_870,  s_871,  s_872,  s_873,  s_874,  s_875,  s_876,  s_877,  s_878,  s_879,
  s_880,  s_881,  s_882,  s_883,  s_884,  s_885,  s_886,  s_887,  s_888,  s_889,
  s_890,  s_891,  s_892,  s_893,  s_894,  s_895,  s_896,  s_897,  s_898,  s_899,
  s_900,  s_901,  s_902,  s_903,  s_904,  s_905,  s_906,  s_907,  s_908,  s_909,
  s_910,  s_911,  s_912,  s_913,  s_914,  s_915,  s_916,  s_917,  s_918,  s_919,
  s_920,  s_921,  s_922,  s_923,  s_924,  s_925,  s_926,  s_927,  s_928,  s_929,
  s_930,  s_931,  s_932,  s_933,  s_934,  s_935,  s_936,  s_937,  s_938,  s_939,
  s_940,  s_941,  s_942,  s_943,  s_944,  s_945,  s_946,  s_947,  s_948,  s_949,
  s_950,  s_951,  s_952,  s_953,  s_954,  s_955,  s_956,  s_957,  s_958,  s_959,
  s_960,  s_961,  s_962,  s_963,  s_964,  s_965,  s_966,  s_967,  s_968,  s_969,
  s_970,  s_971,  s_972,  s_973,  s_974,  s_975,  s_976,  s_977,  s_978,  s_979,
  s_980,  s_981,  s_982,  s_983,  s_984,  s_985,  s_986,  s_987,  s_988,  s_989,
  s_990,  s_991,  s_992,  s_993,  s_994,  s_995,  s_996,  s_997,  s_998,  s_999,
  s_1000,  s_1001,  s_1002,  s_1003,  s_1004,  s_1005,  s_1006,  s_1007,  s_1008,  s_1009,
  s_1010,  s_1011,  s_1012,  s_1013,  s_1014,  s_1015,  s_1016,  s_1017,  s_1018,  s_1019,
  s_1020,  s_1021,  s_1022,  s_1023,  s_1024,  s_1025,  s_1026,  s_1027,  s_1028,  s_1029,
  s_1030,  s_1031,  s_1032,  s_1033,  s_1034,  s_1035,  s_1036,  s_1037,  s_1038,  s_1039,
  s_1040,  s_1041,  s_1042,  s_1043,  s_1044,  s_1045,  s_1046,  s_1047,  s_1048,  s_1049,
  s_1050,  s_1051,  s_1052,  s_1053,  s_1054,  s_1055,  s_1056,  s_1057,  s_1058,  s_1059,
  s_1060,  s_1061,  s_1062,  s_1063,  s_1064,  s_1065,  s_1066,  s_1067,  s_1068,  s_1069,
  s_1070,  s_1071,  s_1072,  s_1073,  s_1074,  s_1075,  s_1076,  s_1077,  s_1078,  s_1079,
  s_1080,  s_1081,  s_1082,  s_1083,  s_1084,  s_1085,  s_1086,  s_1087,  s_1088,  s_1089,
  s_1090,  s_1091,  s_1092,  s_1093,  s_1094,  s_1095,  s_1096,  s_1097,  s_1098,  s_1099,
  s_1100,  s_1101,  s_1102,  s_1103,  s_1104,  s_1105,  s_1106,  s_1107,  s_1108,  s_1109,
  s_1110,  s_1111,  s_1112,  s_1113,  s_1114,  s_1115,  s_1116,  s_1117,  s_1118,  s_1119,
  s_1120,  s_1121,  s_1122,  s_1123,  s_1124,  s_1125,  s_1126,  s_1127,  s_1128,  s_1129,
  s_1130,  s_1131,  s_1132,  s_1133,  s_1134,  s_1135,  s_1136,  s_1137,  s_1138,  s_1139,
  s_1140,  s_1141,  s_1142,  s_1143,  s_1144,  s_1145,  s_1146,  s_1147,  s_1148,  s_1149,
  s_1150,  s_1151,  s_1152,  s_1153,  s_1154,  s_1155,  s_1156,  s_1157,  s_1158,  s_1159,
  s_1160,  s_1161,  s_1162,  s_1163,  s_1164,  s_1165,  s_1166,  s_1167,  s_1168,  s_1169,
  s_1170,  s_1171,  s_1172,  s_1173,  s_1174,  s_1175,  s_1176,  s_1177,  s_1178,  s_1179,
  s_1180,  s_1181,  s_1182,  s_1183,  s_1184,  s_1185,  s_1186,  s_1187,  s_1188,  s_1189,
  s_1190,  s_1191,  s_1192,  s_1193,  s_1194,  s_1195,  s_1196,  s_1197,  s_1198,  s_1199,
  s_1200,  s_1201,  s_1202,  s_1203,  s_1204,  s_1205,  s_1206,  s_1207,  s_1208,  s_1209,
  s_1210,  s_1211,  s_1212,  s_1213,  s_1214,  s_1215,  s_1216,  s_1217,  s_1218,  s_1219,
  s_1220,  s_1221,  s_1222,  s_1223,  s_1224,  s_1225,  s_1226,  s_1227,  s_1228,  s_1229,
  s_1230,  s_1231,  s_1232,  s_1233,  s_1234,  s_1235,  s_1236,  s_1237,  s_1238,  s_1239,
  s_1240,  s_1241,  s_1242,  s_1243,  s_1244,  s_1245,  s_1246,  s_1247,  s_1248,  s_1249,
  s_1250,  s_1251,  s_1252,  s_1253,  s_1254,  s_1255,  s_1256,  s_1257,  s_1258,  s_1259,
  s_1260,  s_1261,  s_1262,  s_1263,  s_1264,  s_1265,  s_1266,  s_1267,  s_1268,  s_1269,
  s_1270,  s_1271,  s_1272,  s_1273,  s_1274,  s_1275,  s_1276,  s_1277,  s_1278,  s_1279,
  s_1280,  s_1281,  s_1282,  s_1283,  s_1284,  s_1285,  s_1286,  s_1287,  s_1288,  s_1289,
  s_1290,  s_1291,  s_1292,  s_1293,  s_1294,  s_1295,  s_1296,  s_1297,  s_1298,  s_1299,
  s_1300,  s_1301,  s_1302,  s_1303,  s_1304,  s_1305,  s_1306,  s_1307,  s_1308,  s_1309,
  s_1310,  s_1311,  s_1312,  s_1313,  s_1314,  s_1315,  s_1316,  s_1317,  s_1318,  s_1319,
  s_1320,  s_1321,  s_1322,  s_1323,  s_1324,  s_1325,  s_1326,  s_1327,  s_1328,  s_1329,
  s_1330,  s_1331,  s_1332,  s_1333,  s_1334,  s_1335,  s_1336,  s_1337,  s_1338,  s_1339,
  s_1340,  s_1341,  s_1342,  s_1343,  s_1344,  s_1345,  s_1346,  s_1347,  s_1348,  s_1349,
  s_1350,  s_1351,  s_1352,  s_1353,  s_1354,  s_1355,  s_1356,  s_1357,  s_1358,  s_1359,
  s_1360,  s_1361,  s_1362,  s_1363,  s_1364,  s_1365,  s_1366,  s_1367,  s_1368,  s_1369,
  s_1370,  s_1371,  s_1372,  s_1373,  s_1374,  s_1375,  s_1376,  s_1377,  s_1378,  s_1379,
  s_1380,  s_1381,  s_1382,  s_1383,  s_1384,  s_1385,  s_1386,  s_1387,  s_1388,  s_1389,
  s_1390,  s_1391,  s_1392,  s_1393,  s_1394,  s_1395,  s_1396,  s_1397,  s_1398,  s_1399,
  s_1400,  s_1401,  s_1402,  s_1403,  s_1404,  s_1405,  s_1406,  s_1407,  s_1408,  s_1409,
  s_1410,  s_1411,  s_1412,  s_1413,  s_1414,  s_1415,  s_1416,  s_1417,  s_1418,  s_1419,
  s_1420,  s_1421,  s_1422,  s_1423,  s_1424,  s_1425,  s_1426,  s_1427,  s_1428,  s_1429,
  s_1430,  s_1431,  s_1432,  s_1433,  s_1434,  s_1435,  s_1436,  s_1437,  s_1438,  s_1439,
  s_1440,  s_1441,  s_1442,  s_1443,  s_1444,  s_1445,  s_1446,  s_1447,  s_1448,  s_1449,
  s_1450,  s_1451,  s_1452,  s_1453,  s_1454,  s_1455,  s_1456,  s_1457,  s_1458,  s_1459,
  s_1460,  s_1461,  s_1462,  s_1463,  s_1464,  s_1465,  s_1466,  s_1467,  s_1468,  s_1469,
  s_1470,  s_1471,  s_1472,  s_1473,  s_1474,  s_1475,  s_1476,  s_1477,  s_1478,  s_1479,
  s_1480,  s_1481,  s_1482,  s_1483,  s_1484,  s_1485,  s_1486,  s_1487,  s_1488,  s_1489,
  s_1490,  s_1491,  s_1492,  s_1493,  s_1494,  s_1495,  s_1496,  s_1497,  s_1498,  s_1499,
  s_1500,  s_1501,  s_1502,  s_1503,  s_1504,  s_1505,  s_1506,  s_1507,  s_1508,  s_1509,
  s_1510,  s_1511,  s_1512,  s_1513,  s_1514,  s_1515,  s_1516,  s_1517,  s_1518,  s_1519,
  s_1520,  s_1521,  s_1522,  s_1523,  s_1524,  s_1525,  s_1526,  s_1527,  s_1528,  s_1529,
  s_1530,  s_1531,  s_1532,  s_1533,
};

} // anonymous namespace ends


// $insert namespace-open
namespace u2d
{


// If the parsing function call (i.e., parse()' needs arguments, then provide
// an overloaded function.  The code below doesn't rely on parameters, so no
// arguments are required.  Furthermore, parse uses a function try block to
// allow us to do ACCEPT and ABORT from anywhere, even from within members
// called by actions, simply throwing the appropriate exceptions.


// base/base1
parserBase::parserBase()
:
    d_token(Reserved_::UNDETERMINED_),
    // $insert baseclasscode
    d_requiredTokens_(0)
{
}

// base/clearin
void parserBase::clearin_()
{
    d_nErrors_ = 0;
    d_stackIdx = -1;
    d_stateStack.clear();
    d_token = Reserved_::UNDETERMINED_;
    d_next = TokenPair{ Reserved_::UNDETERMINED_, STYPE_{} };
    d_recovery = false;
    d_acceptedTokens_ = d_requiredTokens_;
    d_val_ = STYPE_{};

    push_(0);
}

// base/debugfunctions

void parserBase::setDebug(bool mode)
{
    d_actionCases_ = false;
    d_debug_ = mode;
}

void parserBase::setDebug(DebugMode_ mode)
{
    d_actionCases_ = mode & ACTIONCASES;
    d_debug_ =       mode & ON;
}

// base/lex
void parserBase::lex_(int token)
{
    d_token = token;

    if (d_token <= 0)
        d_token = Reserved_::EOF_;

    d_terminalToken = true;
}

// base/lookup
int parserBase::lookup_() const
{
    // if the final transition is negative, then we should reduce by the rule
    // given by its positive value.

    SR_ const *sr = s_state[d_state];
    SR_ const *last = sr + sr->d_lastIdx;

    for ( ; ++sr != last; )           // visit all but the last SR entries
    {
        if (sr->d_token == d_token)
            return sr->d_action;
    }

    if (sr == last)   // reached the last element
    {
        if (sr->d_action < 0)   // default reduction
        {
            return sr->d_action;                
        }

        // No default reduction, so token not found, so error.
        throw UNEXPECTED_TOKEN_;
    }

    // not at the last element: inspect the nature of the action
    // (< 0: reduce, 0: ACCEPT, > 0: shift)

    int action = sr->d_action;


    return action;
}

// base/pop
void parserBase::pop_(size_t count)
{
    if (d_stackIdx < static_cast<int>(count))
    {
        ABORT();
    }

    d_stackIdx -= count;
    d_state = d_stateStack[d_stackIdx].first;
    d_vsp = &d_stateStack[d_stackIdx];

}

// base/poptoken
void parserBase::popToken_()
{
    d_token = d_next.first;
    d_val_ = std::move(d_next.second);

    d_next.first = Reserved_::UNDETERMINED_;
}

// base/push
void parserBase::push_(size_t state)
{
    size_t currentSize = d_stateStack.size();
    if (stackSize_() == currentSize)
    {
        size_t newSize = currentSize + STACK_EXPANSION_;
        d_stateStack.resize(newSize);
    }

    ++d_stackIdx;
    d_stateStack[d_stackIdx] = 
                    StatePair{ d_state = state, std::move(d_val_) };

    d_vsp = &d_stateStack[d_stackIdx];

    if (d_stackIdx == 0)
    {
    }
    else
    {
    }
}

// base/pushtoken
void parserBase::pushToken_(int token)
{
    d_next = TokenPair{ d_token, std::move(d_val_) };
    d_token = token;
}

// base/redotoken
void parserBase::redoToken_()
{
    if (d_token != Reserved_::UNDETERMINED_)
        pushToken_(d_token);
}

// base/reduce
void parserBase::reduce_(int rule)
{
    PI_ const &pi = s_productionInfo[rule];

    d_token = pi.d_nonTerm;
    pop_(pi.d_size);

    d_terminalToken = false;
}

// base/shift
void parserBase::shift_(int action)
{
    push_(action);
    popToken_();               // token processed

    if (d_recovery and d_terminalToken)
    {
        d_recovery = false;
        d_acceptedTokens_ = 0;
    }
}

// base/startrecovery
void parserBase::startRecovery_()
{
    int lastToken = d_token;                // give the unexpected token a
                                            // chance to be processed
                                            // again.

    pushToken_(Reserved_::errTok_);      // specify errTok_ as next token
    push_(lookup_());                     // push the error state

    d_token = lastToken;                    // reactivate the unexpected
                                            // token (we're now in an
                                            // ERROR state).

    d_recovery = true;
}

// base/top
inline size_t parserBase::top_() const
{
    return d_stateStack[d_stackIdx].first;
}

// derived/errorrecovery
void parser::errorRecovery_()
{
    // When an error has occurred, pop elements off the stack until the top
    // state has an error-item. If none is found, the default recovery
    // mode (which is to abort) is activated. 
    //
    // If EOF is encountered without being appropriate for the current state,
    // then the error recovery will fall back to the default recovery mode.
    // (i.e., parsing terminates)



    if (d_acceptedTokens_ >= d_requiredTokens_)// only generate an error-
    {                                           // message if enough tokens 
        ++d_nErrors_;                          // were accepted. Otherwise
        error();                                // simply skip input
    }

    // get the error state
    while (not (s_state[top_()][0].d_type & ERR_ITEM))
    {
        pop_();
    }

    // In the error state, looking up a token allows us to proceed.
    // Continuation may be require multiple reductions, but eventually a
    // terminal-token shift is used. See nextCycle_ for details.

    startRecovery_();
}

// derived/executeaction
void parser::executeAction_(int production)
try
{
    if (token_() != Reserved_::UNDETERMINED_)
        pushToken_(token_());     // save an already available token
    switch (production)
    {
        // $insert actioncases
        
        case 1:
#line 102 "parser.y"
        {this->_model.last_input = u2d::model_t::input_t::init; this->ACCEPT();}
        break;

        case 2:
#line 103 "parser.y"
        {this->_model.last_input = u2d::model_t::input_t::server_param; this->ACCEPT();}
        break;

        case 3:
#line 104 "parser.y"
        {this->_model.last_input = u2d::model_t::input_t::player_param; this->ACCEPT();}
        break;

        case 4:
#line 105 "parser.y"
        {this->_model.last_input = u2d::model_t::input_t::player_type; this->ACCEPT();}
        break;

        case 5:
#line 106 "parser.y"
        {this->_model.last_input = u2d::model_t::input_t::sense_body; this->ACCEPT();}
        break;

        case 6:
#line 107 "parser.y"
        {this->_model.last_input = u2d::model_t::input_t::see; this->ACCEPT();}
        break;

        case 7:
#line 108 "parser.y"
        {this->_model.last_input = u2d::model_t::input_t::hear; this->ACCEPT();}
        break;

        case 8:
#line 110 "parser.y"
        {d_val_.b = false;}
        break;

        case 9:
#line 110 "parser.y"
        {d_val_.b =true;}
        break;

        case 10:
#line 111 "parser.y"
        {d_val_.i = std::atoi(d_scanner.matched().c_str());}
        break;

        case 11:
#line 112 "parser.y"
        {d_val_.i = vs_(0).b? 1 : 0;}
        break;

        case 12:
#line 113 "parser.y"
        { d_val_.i = 10; }
        break;

        case 13:
#line 114 "parser.y"
        { d_val_.i = 20; }
        break;

        case 14:
#line 115 "parser.y"
        { d_val_.i = 30; }
        break;

        case 15:
#line 116 "parser.y"
        { d_val_.i = 40; }
        break;

        case 16:
#line 117 "parser.y"
        { d_val_.i = 50; }
        break;

        case 17:
#line 118 "parser.y"
        {d_val_.d = std::atof(d_scanner.matched().c_str());}
        break;

        case 18:
#line 119 "parser.y"
        {d_val_.d = static_cast<double>(vs_(0).i);}
        break;

        case 19:
#line 120 "parser.y"
        {d_val_.s = new std::string(d_scanner.matched().c_str());}
        break;

        case 20:
#line 122 "parser.y"
        {this->_model.play_mode = static_cast<u2d::model_t::play_mode_t>(vs_(-1).i);}
        break;

        case 21:
#line 123 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::before_kick_off) ;}
        break;

        case 22:
#line 124 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::play_on) ;}
        break;

        case 23:
#line 125 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::time_over) ;}
        break;

        case 24:
#line 126 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::kick_off_l) ;}
        break;

        case 25:
#line 127 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::kick_off_r) ;}
        break;

        case 26:
#line 128 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::kick_in_l) ;}
        break;

        case 27:
#line 129 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::kick_in_r) ;}
        break;

        case 28:
#line 130 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::free_kick_l) ;}
        break;

        case 29:
#line 131 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::free_kick_r) ;}
        break;

        case 30:
#line 132 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::corner_kick_l) ;}
        break;

        case 31:
#line 133 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::corner_kick_r) ;}
        break;

        case 32:
#line 134 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::goal_kick_l) ;}
        break;

        case 33:
#line 135 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::goal_kick_r) ;}
        break;

        case 34:
#line 136 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::goal_l) ;}
        break;

        case 35:
#line 137 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::goal_r) ;}
        break;

        case 36:
#line 138 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::drop_ball) ;}
        break;

        case 37:
#line 139 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::offside_l) ;}
        break;

        case 38:
#line 140 "parser.y"
        {d_val_.i = static_cast<int>(u2d::model_t::play_mode_t::offside_r) ;}
        break;

        case 39:
#line 152 "parser.y"
        {}
        break;

        case 40:
#line 154 "parser.y"
        {this->_model.server.audio_cut_dist = vs_(-1).d; }
        break;

        case 41:
#line 155 "parser.y"
        {this->_model.server.auto_mode = vs_(-1).b;}
        break;

        case 42:
#line 156 "parser.y"
        {this->_model.server.back_dash_rate = vs_(-1).d;}
        break;

        case 43:
#line 157 "parser.y"
        {this->_model.server.back_passes = static_cast<bool>(vs_(-1).d);}
        break;

        case 44:
#line 158 "parser.y"
        {this->_model.server.ball_accel_max = vs_(-1).d;}
        break;

        case 45:
#line 159 "parser.y"
        {this->_model.server.ball_decay = vs_(-1).d;}
        break;

        case 46:
#line 160 "parser.y"
        {this->_model.server.ball_rand = vs_(-1).d;}
        break;

        case 47:
#line 161 "parser.y"
        {this->_model.server.ball_size = vs_(-1).d;}
        break;

        case 48:
#line 162 "parser.y"
        {this->_model.server.ball_speed_max = vs_(-1).d;}
        break;

        case 49:
#line 163 "parser.y"
        {this->_model.server.ball_stuck_area = vs_(-1).d;}
        break;

        case 50:
#line 164 "parser.y"
        {this->_model.server.ball_weight = vs_(-1).d;}
        break;

        case 51:
#line 165 "parser.y"
        {this->_model.server.catch_ban_cycle = vs_(-1).i; }
        break;

        case 52:
#line 166 "parser.y"
        {this->_model.server.catch_probability = vs_(-1).d;}
        break;

        case 53:
#line 167 "parser.y"
        {this->_model.server.catchable_area_l = vs_(-1).d;}
        break;

        case 54:
#line 168 "parser.y"
        {this->_model.server.catchable_area_w = vs_(-1).d;}
        break;

        case 55:
#line 169 "parser.y"
        {this->_model.server.ckick_margin = vs_(-1).d;}
        break;

        case 56:
#line 170 "parser.y"
        {this->_model.server.clang_advice_win = vs_(-1).i;}
        break;

        case 57:
#line 171 "parser.y"
        {this->_model.server.clang_define_win = vs_(-1).i; }
        break;

        case 58:
#line 172 "parser.y"
        {this->_model.server.clang_del_win = vs_(-1).i; }
        break;

        case 59:
#line 173 "parser.y"
        {this->_model.server.clang_info_win = vs_(-1).i; }
        break;

        case 60:
#line 174 "parser.y"
        {this->_model.server.clang_mess_delay = vs_(-1).i; }
        break;

        case 61:
#line 175 "parser.y"
        {this->_model.server.clang_mess_per_cycle = vs_(-1).i; }
        break;

        case 62:
#line 176 "parser.y"
        {this->_model.server.clang_meta_win = vs_(-1).i; }
        break;

        case 63:
#line 177 "parser.y"
        {this->_model.server.clang_rule_win = vs_(-1).i; }
        break;

        case 64:
#line 178 "parser.y"
        {this->_model.server.clang_win_size = vs_(-1).i; }
        break;

        case 65:
#line 179 "parser.y"
        {this->_model.server.coach = (vs_(-1).d ==0?false:true);}
        break;

        case 66:
#line 180 "parser.y"
        {this->_model.server.coach_port = vs_(-1).i; }
        break;

        case 67:
#line 181 "parser.y"
        {this->_model.server.coach_w_referee = (vs_(-1).d ==0?false:true);}
        break;

        case 68:
#line 182 "parser.y"
        {this->_model.server.connect_wait = vs_(-1).i; }
        break;

        case 69:
#line 183 "parser.y"
        {this->_model.server.control_radius = vs_(-1).d;}
        break;

        case 70:
#line 184 "parser.y"
        {this->_model.server.dash_angle_step = vs_(-1).d;}
        break;

        case 71:
#line 185 "parser.y"
        {this->_model.server.dash_power_rate = vs_(-1).d;}
        break;

        case 72:
#line 186 "parser.y"
        {this->_model.server.drop_ball_time = vs_(-1).i; }
        break;

        case 73:
#line 187 "parser.y"
        {this->_model.server.effort_dec = (vs_(-1).d);}
        break;

        case 74:
#line 188 "parser.y"
        {this->_model.server.effort_dec_thr = (vs_(-1).d);}
        break;

        case 75:
#line 189 "parser.y"
        {this->_model.server.effort_inc = (vs_(-1).d);}
        break;

        case 76:
#line 190 "parser.y"
        {this->_model.server.effort_inc_thr = (vs_(-1).d);}
        break;

        case 77:
#line 191 "parser.y"
        {this->_model.server.effort_init = (vs_(-1).d);}
        break;

        case 78:
#line 192 "parser.y"
        {this->_model.server.effort_min = (vs_(-1).d);}
        break;

        case 79:
#line 193 "parser.y"
        {this->_model.server.extra_half_time = vs_(-1).i; }
        break;

        case 80:
#line 194 "parser.y"
        {this->_model.server.extra_stamina = (vs_(-1).d);}
        break;

        case 81:
#line 195 "parser.y"
        {this->_model.server.forbid_kick_off_offside = static_cast<bool>(vs_(-1).d);}
        break;

        case 82:
#line 196 "parser.y"
        {this->_model.server.foul_cycles = vs_(-1).i; }
        break;

        case 83:
#line 197 "parser.y"
        {this->_model.server.foul_detect_probability = vs_(-1).d;}
        break;

        case 84:
#line 198 "parser.y"
        {this->_model.server.foul_exponent = vs_(-1).d;}
        break;

        case 85:
#line 199 "parser.y"
        {this->_model.server.free_kick_faults = static_cast<bool>(vs_(-1).d);}
        break;

        case 86:
#line 200 "parser.y"
        {this->_model.server.freeform_send_period = static_cast<unsigned int>(vs_(-1).d);}
        break;

        case 87:
#line 201 "parser.y"
        {this->_model.server.freeform_wait_period = static_cast<unsigned int>(vs_(-1).d);}
        break;

        case 88:
#line 202 "parser.y"
        {this->_model.server.fullstate_l = vs_(-1).i; }
        break;

        case 89:
#line 203 "parser.y"
        {this->_model.server.fullstate_r = vs_(-1).i; }
        break;

        case 90:
#line 204 "parser.y"
        {this->_model.server.game_log_compression = vs_(-1).i; }
        break;

        case 91:
#line 205 "parser.y"
        {this->_model.server.game_log_dated = vs_(-1).i; }
        break;

        case 92:
#line 206 "parser.y"
        {this->_model.server.game_log_dir = *(vs_(-1).s);}
        break;

        case 93:
#line 207 "parser.y"
        {this->_model.server.game_log_fixed= static_cast<bool>(vs_(-1).d);}
        break;

        case 94:
#line 208 "parser.y"
        {this->_model.server.game_log_fixed_name = *(vs_(-1).s);}
        break;

        case 95:
#line 209 "parser.y"
        {this->_model.server.game_log_version = vs_(-1).i; }
        break;

        case 96:
#line 210 "parser.y"
        {this->_model.server.game_logging = static_cast<bool>(vs_(-1).d);}
        break;

        case 97:
#line 211 "parser.y"
        {this->_model.server.game_over_wait = vs_(-1).d; }
        break;

        case 98:
#line 212 "parser.y"
        {this->_model.server.goal_width = (vs_(-1).d);}
        break;

        case 99:
#line 213 "parser.y"
        {this->_model.server.goalie_max_moves = vs_(-1).i; }
        break;

        case 100:
#line 214 "parser.y"
        {this->_model.server.golden_goal = static_cast<bool>(vs_(-1).d);}
        break;

        case 101:
#line 215 "parser.y"
        {this->_model.server.half_time = vs_(-1).i; }
        break;

        case 102:
#line 216 "parser.y"
        {this->_model.server.hear_decay = static_cast<unsigned int>(vs_(-1).d);}
        break;

        case 103:
#line 217 "parser.y"
        {this->_model.server.hear_inc = static_cast<unsigned int>(vs_(-1).d);}
        break;

        case 104:
#line 218 "parser.y"
        {this->_model.server.hear_max = static_cast<unsigned int>(vs_(-1).d);}
        break;

        case 105:
#line 219 "parser.y"
        {this->_model.server.inertia_moment = (vs_(-1).d);}
        break;

        case 106:
#line 220 "parser.y"
        {this->_model.server.keepaway = static_cast<bool>(vs_(-1).d);}
        break;

        case 107:
#line 221 "parser.y"
        {this->_model.server.keepaway_length = (vs_(-1).d);}
        break;

        case 108:
#line 222 "parser.y"
        {this->_model.server.keepaway_log_dated = static_cast<bool>(vs_(-1).d);}
        break;

        case 109:
#line 223 "parser.y"
        {this->_model.server.keepaway_log_dir = *(vs_(-1).s);}
        break;

        case 110:
#line 224 "parser.y"
        {this->_model.server.keepaway_log_fixed = static_cast<bool>(vs_(-1).d);}
        break;

        case 111:
#line 225 "parser.y"
        {this->_model.server.keepaway_log_fixed_name = *(vs_(-1).s);}
        break;

        case 112:
#line 226 "parser.y"
        {this->_model.server.keepaway_logging = static_cast<bool>(vs_(-1).d);}
        break;

        case 113:
#line 227 "parser.y"
        {this->_model.server.keepaway_start = vs_(-1).i; }
        break;

        case 114:
#line 228 "parser.y"
        {this->_model.server.keepaway_width = (vs_(-1).d);}
        break;

        case 115:
#line 229 "parser.y"
        {this->_model.server.kick_off_wait = vs_(-1).i; }
        break;

        case 116:
#line 230 "parser.y"
        {this->_model.server.kick_power_rate = (vs_(-1).d);}
        break;

        case 117:
#line 231 "parser.y"
        {this->_model.server.kick_rand = (vs_(-1).d);}
        break;

        case 118:
#line 232 "parser.y"
        {this->_model.server.kick_rand_factor_l = (vs_(-1).d);}
        break;

        case 119:
#line 233 "parser.y"
        {this->_model.server.kick_rand_factor_r = (vs_(-1).d);}
        break;

        case 120:
#line 234 "parser.y"
        {this->_model.server.kickable_margin = (vs_(-1).d);}
        break;

        case 121:
#line 235 "parser.y"
        {this->_model.server.landmark_file = *(vs_(-1).s);}
        break;

        case 122:
#line 236 "parser.y"
        {this->_model.server.log_date_format = *(vs_(-1).s);}
        break;

        case 123:
#line 237 "parser.y"
        {this->_model.server.log_times = vs_(-1).i; }
        break;

        case 124:
#line 238 "parser.y"
        {this->_model.server.max_back_tackle_power = (vs_(-1).d);}
        break;

        case 125:
#line 239 "parser.y"
        {this->_model.server.max_dash_angle = (vs_(-1).d);}
        break;

        case 126:
#line 240 "parser.y"
        {this->_model.server.max_dash_power = (vs_(-1).d);}
        break;

        case 127:
#line 241 "parser.y"
        {this->_model.server.max_goal_kicks = vs_(-1).i; }
        break;

        case 128:
#line 242 "parser.y"
        {this->_model.server.max_tackle_power = (vs_(-1).d);}
        break;

        case 129:
#line 243 "parser.y"
        {this->_model.server.maxmoment = (vs_(-1).d);}
        break;

        case 130:
#line 244 "parser.y"
        {this->_model.server.maxneckang = (vs_(-1).d);}
        break;

        case 131:
#line 245 "parser.y"
        {this->_model.server.maxneckmoment = (vs_(-1).d);}
        break;

        case 132:
#line 246 "parser.y"
        {this->_model.server.maxpower = (vs_(-1).d);}
        break;

        case 133:
#line 247 "parser.y"
        {this->_model.server.min_dash_angle = (vs_(-1).d);}
        break;

        case 134:
#line 248 "parser.y"
        {this->_model.server.min_dash_power = (vs_(-1).d);}
        break;

        case 135:
#line 249 "parser.y"
        {this->_model.server.minmoment = (vs_(-1).d);}
        break;

        case 136:
#line 250 "parser.y"
        {this->_model.server.minneckang = (vs_(-1).d);}
        break;

        case 137:
#line 251 "parser.y"
        {this->_model.server.minneckmoment = (vs_(-1).d);}
        break;

        case 138:
#line 252 "parser.y"
        {this->_model.server.minpower = (vs_(-1).d);}
        break;

        case 139:
#line 253 "parser.y"
        {this->_model.server.nr_extra_halfs = vs_(-1).i; }
        break;

        case 140:
#line 254 "parser.y"
        {this->_model.server.nr_normal_halfs = vs_(-1).i; }
        break;

        case 141:
#line 255 "parser.y"
        {this->_model.server.offside_active_area_size = (vs_(-1).d);}
        break;

        case 142:
#line 256 "parser.y"
        {this->_model.server.offside_kick_margin = (vs_(-1).d);}
        break;

        case 143:
#line 257 "parser.y"
        {this->_model.server.olcoach_port = vs_(-1).i; }
        break;

        case 144:
#line 258 "parser.y"
        {this->_model.server.old_coach_hear = static_cast<bool>(vs_(-1).d);}
        break;

        case 145:
#line 259 "parser.y"
        {this->_model.server.pen_allow_mult_kicks = static_cast<bool>(vs_(-1).d);}
        break;

        case 146:
#line 260 "parser.y"
        {this->_model.server.pen_before_setup_wait = static_cast<bool>(vs_(-1).d);}
        break;

        case 147:
#line 261 "parser.y"
        {this->_model.server.pen_coach_moves_players = static_cast<bool>(vs_(-1).d);}
        break;

        case 148:
#line 262 "parser.y"
        {this->_model.server.pen_dist_x = (vs_(-1).d);}
        break;

        case 149:
#line 263 "parser.y"
        {this->_model.server.pen_max_extra_kicks = vs_(-1).i; }
        break;

        case 150:
#line 264 "parser.y"
        {this->_model.server.pen_max_goalie_dist_x = vs_(-1).i; }
        break;

        case 151:
#line 265 "parser.y"
        {this->_model.server.pen_nr_kicks = vs_(-1).i; }
        break;

        case 152:
#line 266 "parser.y"
        {this->_model.server.pen_random_winner = static_cast<bool>(vs_(-1).d);}
        break;

        case 153:
#line 267 "parser.y"
        {this->_model.server.pen_ready_wait = vs_(-1).i; }
        break;

        case 154:
#line 268 "parser.y"
        {this->_model.server.pen_setup_wait = vs_(-1).i; }
        break;

        case 155:
#line 269 "parser.y"
        {this->_model.server.pen_taken_wait = vs_(-1).i; }
        break;

        case 156:
#line 270 "parser.y"
        {this->_model.server.penalty_shoot_outs = static_cast<bool>(vs_(-1).d);}
        break;

        case 157:
#line 271 "parser.y"
        {this->_model.server.player_accel_max = (vs_(-1).d);}
        break;

        case 158:
#line 272 "parser.y"
        {this->_model.server.player_decay = (vs_(-1).d);}
        break;

        case 159:
#line 273 "parser.y"
        {this->_model.server.player_rand = (vs_(-1).d);}
        break;

        case 160:
#line 274 "parser.y"
        {this->_model.server.player_size = (vs_(-1).d);}
        break;

        case 161:
#line 275 "parser.y"
        {this->_model.server.player_speed_max = (vs_(-1).d);}
        break;

        case 162:
#line 276 "parser.y"
        {this->_model.server.player_speed_max_min = (vs_(-1).d);}
        break;

        case 163:
#line 277 "parser.y"
        {this->_model.server.player_weight = (vs_(-1).d);}
        break;

        case 164:
#line 278 "parser.y"
        {this->_model.server.point_to_ban = vs_(-1).i; }
        break;

        case 165:
#line 279 "parser.y"
        {this->_model.server.point_to_duration = vs_(-1).i; }
        break;

        case 166:
#line 280 "parser.y"
        {this->_model.server.port = vs_(-1).i; }
        break;

        case 167:
#line 281 "parser.y"
        {this->_model.server.prand_factor_l = (vs_(-1).d);}
        break;

        case 168:
#line 282 "parser.y"
        {this->_model.server.prand_factor_r = (vs_(-1).d);}
        break;

        case 169:
#line 283 "parser.y"
        {this->_model.server.profile = static_cast<bool>(vs_(-1).d);}
        break;

        case 170:
#line 284 "parser.y"
        {this->_model.server.proper_goal_kicks = static_cast<bool>(vs_(-1).d);}
        break;

        case 171:
#line 285 "parser.y"
        {this->_model.server.quantize_step = (vs_(-1).d);}
        break;

        case 172:
#line 286 "parser.y"
        {this->_model.server.quantize_step_l = (vs_(-1).d);}
        break;

        case 173:
#line 287 "parser.y"
        {this->_model.server.record_messages = static_cast<bool>(vs_(-1).d);}
        break;

        case 174:
#line 288 "parser.y"
        {this->_model.server.recover_dec = (vs_(-1).d);}
        break;

        case 175:
#line 289 "parser.y"
        {this->_model.server.recover_dec_thr = (vs_(-1).d);}
        break;

        case 176:
#line 290 "parser.y"
        {this->_model.server.recover_init = (vs_(-1).d);}
        break;

        case 177:
#line 291 "parser.y"
        {this->_model.server.recover_min = (vs_(-1).d);}
        break;

        case 178:
#line 292 "parser.y"
        {this->_model.server.recv_step = vs_(-1).i; }
        break;

        case 179:
#line 293 "parser.y"
        {this->_model.server.red_card_probability = (vs_(-1).d);}
        break;

        case 180:
#line 294 "parser.y"
        {this->_model.server.say_coach_cnt_max = vs_(-1).i; }
        break;

        case 181:
#line 295 "parser.y"
        {this->_model.server.say_coach_msg_size = vs_(-1).i; }
        break;

        case 182:
#line 296 "parser.y"
        {this->_model.server.say_msg_size = vs_(-1).i; }
        break;

        case 183:
#line 297 "parser.y"
        {this->_model.server.send_comms = static_cast<bool>(vs_(-1).d);}
        break;

        case 184:
#line 298 "parser.y"
        {this->_model.server.send_step = vs_(-1).i; }
        break;

        case 185:
#line 299 "parser.y"
        {this->_model.server.send_vi_step = vs_(-1).i; }
        break;

        case 186:
#line 300 "parser.y"
        {this->_model.server.sense_body_step = vs_(-1).i; }
        break;

        case 187:
#line 301 "parser.y"
        {this->_model.server.side_dash_rate = (vs_(-1).d);}
        break;

        case 188:
#line 302 "parser.y"
        {this->_model.server.simulator_step = vs_(-1).i; }
        break;

        case 189:
#line 303 "parser.y"
        {this->_model.server.slow_down_factor = vs_(-1).i; }
        break;

        case 190:
#line 304 "parser.y"
        {this->_model.server.slowness_on_top_for_left_team = (vs_(-1).d);}
        break;

        case 191:
#line 305 "parser.y"
        {this->_model.server.slowness_on_top_for_right_team = (vs_(-1).d);}
        break;

        case 192:
#line 306 "parser.y"
        {this->_model.server.stamina_capacity = (vs_(-1).d);}
        break;

        case 193:
#line 307 "parser.y"
        {this->_model.server.stamina_inc_max = (vs_(-1).d);}
        break;

        case 194:
#line 308 "parser.y"
        {this->_model.server.stamina_max = (vs_(-1).d);}
        break;

        case 195:
#line 309 "parser.y"
        {this->_model.server.start_goal_l = vs_(-1).i; }
        break;

        case 196:
#line 310 "parser.y"
        {this->_model.server.start_goal_r = vs_(-1).i; }
        break;

        case 197:
#line 311 "parser.y"
        {this->_model.server.stopped_ball_vel = (vs_(-1).d);}
        break;

        case 198:
#line 312 "parser.y"
        {this->_model.server.synch_micro_sleep = static_cast<unsigned int>(vs_(-1).d);}
        break;

        case 199:
#line 313 "parser.y"
        {this->_model.server.synch_mode = static_cast<bool>(vs_(-1).d);}
        break;

        case 200:
#line 314 "parser.y"
        {this->_model.server.synch_offset = vs_(-1).d; }
        break;

        case 201:
#line 315 "parser.y"
        {this->_model.server.synch_see_offset = vs_(-1).d; }
        break;

        case 202:
#line 316 "parser.y"
        {this->_model.server.tackle_back_dist = (vs_(-1).d);}
        break;

        case 203:
#line 317 "parser.y"
        {this->_model.server.tackle_cycles = static_cast<unsigned int>(vs_(-1).d);}
        break;

        case 204:
#line 318 "parser.y"
        {this->_model.server.tackle_dist = (vs_(-1).d);}
        break;

        case 205:
#line 319 "parser.y"
        {this->_model.server.tackle_exponent = (vs_(-1).d);}
        break;

        case 206:
#line 320 "parser.y"
        {this->_model.server.tackle_power_rate = (vs_(-1).d);}
        break;

        case 207:
#line 321 "parser.y"
        {this->_model.server.tackle_rand_factor = (vs_(-1).d);}
        break;

        case 208:
#line 322 "parser.y"
        {this->_model.server.tackle_width = (vs_(-1).d);}
        break;

        case 209:
#line 323 "parser.y"
        {this->_model.server.team_actuator_noise = static_cast<bool>(vs_(-1).d);}
        break;

        case 210:
#line 324 "parser.y"
        {this->_model.server.team_l_start = *(vs_(-1).s);}
        break;

        case 211:
#line 325 "parser.y"
        {this->_model.server.team_r_start = *(vs_(-1).s);}
        break;

        case 212:
#line 326 "parser.y"
        {this->_model.server.text_log_compression = vs_(-1).i; }
        break;

        case 213:
#line 327 "parser.y"
        {this->_model.server.text_log_dated = vs_(-1).i; }
        break;

        case 214:
#line 328 "parser.y"
        {this->_model.server.text_log_dir = *(vs_(-1).s);}
        break;

        case 215:
#line 329 "parser.y"
        {this->_model.server.text_log_fixed = vs_(-1).i; }
        break;

        case 216:
#line 330 "parser.y"
        {this->_model.server.text_log_fixed_name = *(vs_(-1).s);}
        break;

        case 217:
#line 331 "parser.y"
        {this->_model.server.text_logging = static_cast<bool>(vs_(-1).d);}
        break;

        case 218:
#line 332 "parser.y"
        {this->_model.server.use_offside = static_cast<bool>(vs_(-1).d);}
        break;

        case 219:
#line 333 "parser.y"
        {this->_model.server.verbose = vs_(-1).b;}
        break;

        case 220:
#line 334 "parser.y"
        {this->_model.server.visible_angle = (vs_(-1).d);}
        break;

        case 221:
#line 335 "parser.y"
        {this->_model.server.visible_distance = (vs_(-1).d);}
        break;

        case 222:
#line 336 "parser.y"
        {this->_model.server.wind_ang = (vs_(-1).d);}
        break;

        case 223:
#line 337 "parser.y"
        {this->_model.server.wind_dir = (vs_(-1).d);}
        break;

        case 224:
#line 338 "parser.y"
        {this->_model.server.wind_force = (vs_(-1).d);}
        break;

        case 225:
#line 339 "parser.y"
        {this->_model.server.wind_none = static_cast<bool>(vs_(-1).d);}
        break;

        case 226:
#line 340 "parser.y"
        {this->_model.server.wind_rand = (vs_(-1).d);}
        break;

        case 227:
#line 341 "parser.y"
        {this->_model.server.wind_random = (vs_(-1).d);}
        break;

        case 228:
#line 345 "parser.y"
        {}
        break;

        case 229:
#line 347 "parser.y"
        {this->_model.player.allow_mult_default_type = (vs_(-1).d);}
        break;

        case 230:
#line 348 "parser.y"
        {this->_model.player.catchable_area_l_stretch_max = (vs_(-1).d);}
        break;

        case 231:
#line 349 "parser.y"
        {this->_model.player.catchable_area_l_stretch_min = (vs_(-1).d);}
        break;

        case 232:
#line 350 "parser.y"
        {this->_model.player.dash_power_rate_delta_max = (vs_(-1).d);}
        break;

        case 233:
#line 351 "parser.y"
        {this->_model.player.dash_power_rate_delta_min = (vs_(-1).d);}
        break;

        case 234:
#line 352 "parser.y"
        {this->_model.player.effort_max_delta_factor = (vs_(-1).d);}
        break;

        case 235:
#line 353 "parser.y"
        {this->_model.player.effort_min_delta_factor = (vs_(-1).d);}
        break;

        case 236:
#line 354 "parser.y"
        {this->_model.player.extra_stamina_delta_max = (vs_(-1).d);}
        break;

        case 237:
#line 355 "parser.y"
        {this->_model.player.extra_stamina_delta_min = (vs_(-1).d);}
        break;

        case 238:
#line 356 "parser.y"
        {this->_model.player.foul_detect_probability_delta_factor = (vs_(-1).d);}
        break;

        case 239:
#line 357 "parser.y"
        {this->_model.player.inertia_moment_delta_factor = (vs_(-1).d);}
        break;

        case 240:
#line 358 "parser.y"
        {this->_model.player.kick_power_rate_delta_max = (vs_(-1).d);}
        break;

        case 241:
#line 359 "parser.y"
        {this->_model.player.kick_power_rate_delta_min = (vs_(-1).d);}
        break;

        case 242:
#line 360 "parser.y"
        {this->_model.player.kick_rand_delta_factor = (vs_(-1).d);}
        break;

        case 243:
#line 361 "parser.y"
        {this->_model.player.kickable_margin_delta_max = (vs_(-1).d);}
        break;

        case 244:
#line 362 "parser.y"
        {this->_model.player.kickable_margin_delta_min = (vs_(-1).d);}
        break;

        case 245:
#line 363 "parser.y"
        {this->_model.player.new_dash_power_rate_delta_max = (vs_(-1).d);}
        break;

        case 246:
#line 364 "parser.y"
        {this->_model.player.new_dash_power_rate_delta_min = (vs_(-1).d);}
        break;

        case 247:
#line 365 "parser.y"
        {this->_model.player.new_stamina_inc_max_delta_factor = (vs_(-1).d);}
        break;

        case 248:
#line 366 "parser.y"
        {this->_model.player.player_decay_delta_max = (vs_(-1).d);}
        break;

        case 249:
#line 367 "parser.y"
        {this->_model.player.player_decay_delta_min = (vs_(-1).d);}
        break;

        case 250:
#line 368 "parser.y"
        {this->_model.player.player_size_delta_factor = (vs_(-1).d);}
        break;

        case 251:
#line 369 "parser.y"
        {this->_model.player.player_speed_max_delta_max = (vs_(-1).d);}
        break;

        case 252:
#line 370 "parser.y"
        {this->_model.player.player_speed_max_delta_min = (vs_(-1).d);}
        break;

        case 253:
#line 371 "parser.y"
        {this->_model.player.player_types = vs_(-1).i; }
        break;

        case 254:
#line 372 "parser.y"
        {this->_model.player.pt_max = vs_(-1).i; }
        break;

        case 255:
#line 373 "parser.y"
        {this->_model.player.random_seed = vs_(-1).i; }
        break;

        case 256:
#line 374 "parser.y"
        {this->_model.player.stamina_inc_max_delta_factor = (vs_(-1).d);}
        break;

        case 257:
#line 375 "parser.y"
        {this->_model.player.subs_max = vs_(-1).i; }
        break;

        case 258:
#line 378 "parser.y"
        {}
        break;

        case 259:
#line 380 "parser.y"
        {
        }
        break;

        case 260:
#line 386 "parser.y"
        { }
        break;

        case 261:
#line 387 "parser.y"
        { }
        break;

        case 262:
#line 388 "parser.y"
        { }
        break;

        case 263:
#line 389 "parser.y"
        { }
        break;

        case 264:
#line 390 "parser.y"
        { }
        break;

        case 265:
#line 391 "parser.y"
        { }
        break;

        case 266:
#line 392 "parser.y"
        { }
        break;

        case 267:
#line 393 "parser.y"
        { }
        break;

        case 268:
#line 394 "parser.y"
        { }
        break;

        case 269:
#line 395 "parser.y"
        { }
        break;

        case 270:
#line 396 "parser.y"
        { }
        break;

        case 271:
#line 397 "parser.y"
        { }
        break;

        case 272:
#line 398 "parser.y"
        { }
        break;

        case 273:
#line 399 "parser.y"
        { }
        break;

        case 274:
#line 402 "parser.y"
        {}
        break;

        case 275:
#line 403 "parser.y"
        {}
        break;

        case 276:
#line 404 "parser.y"
        {this->_model.body.view_mode.quality = u2d::body_t::view_mode_t::quality_t::high;}
        break;

        case 277:
#line 405 "parser.y"
        {this->_model.body.view_mode.quality = u2d::body_t::view_mode_t::quality_t::low;}
        break;

        case 278:
#line 406 "parser.y"
        {this->_model.body.view_mode.width = u2d::body_t::view_mode_t::width_t::normal;}
        break;

        case 279:
#line 407 "parser.y"
        {this->_model.body.view_mode.width = u2d::body_t::view_mode_t::width_t::narrow;}
        break;

        case 280:
#line 408 "parser.y"
        {this->_model.body.view_mode.width = u2d::body_t::view_mode_t::width_t::wide;}
        break;

        case 281:
#line 410 "parser.y"
        {
         this->_model.body.stamina.stamina = vs_(-3).d;
         this->_model.body.stamina.effort = vs_(-2).d;
         this->_model.body.stamina.capacity = vs_(-1).d;
         }
        break;

        case 282:
#line 415 "parser.y"
        {this->_model.body.speed.x = vs_(-2).d; this->_model.body.speed.y = vs_(-1).d;}
        break;

        case 283:
#line 416 "parser.y"
        {this->_model.body.head_angle = vs_(-1).d;}
        break;

        case 284:
#line 417 "parser.y"
        {this->_model.body.kick = vs_(-1).i;}
        break;

        case 285:
#line 418 "parser.y"
        {this->_model.body.dash = vs_(-1).i;}
        break;

        case 286:
#line 419 "parser.y"
        {this->_model.body.turn = vs_(-1).i;}
        break;

        case 287:
#line 420 "parser.y"
        {this->_model.body.say = vs_(-1).i;}
        break;

        case 288:
#line 421 "parser.y"
        {this->_model.body.turn_neck = vs_(-1).i;}
        break;

        case 289:
#line 422 "parser.y"
        {this->_model.body.catch_ = vs_(-1).i;}
        break;

        case 290:
#line 423 "parser.y"
        {this->_model.body.move = vs_(-1).i;}
        break;

        case 291:
#line 424 "parser.y"
        {this->_model.body.change_view = vs_(-1).i;}
        break;

        case 292:
#line 425 "parser.y"
        {
            d_val_ = vs_(-6);
        }
        break;

        case 293:
#line 426 "parser.y"
        {this->_model.body.arm.movable = vs_(-1).i;}
        break;

        case 294:
#line 427 "parser.y"
        {this->_model.body.arm.expires = vs_(-1).i;}
        break;

        case 295:
#line 428 "parser.y"
        {this->_model.body.arm.target = u2d::vector(vs_(-2).d,vs_(-1).d);}
        break;

        case 296:
#line 429 "parser.y"
        {this->_model.body.arm.count = vs_(-1).i;}
        break;

        case 297:
#line 430 "parser.y"
        {
            d_val_ = vs_(-4);
        }
        break;

        case 298:
#line 431 "parser.y"
        {
            d_val_ = vs_(-3);
        }
        break;

        case 299:
#line 432 "parser.y"
        {this->_model.body.focus.count = vs_(-1).i;}
        break;

        case 300:
#line 433 "parser.y"
        {this->_model.body.focus.type = body_t::focus_t::target_t::left;}
        break;

        case 301:
#line 434 "parser.y"
        {this->_model.body.focus.type = body_t::focus_t::target_t::right;}
        break;

        case 302:
#line 435 "parser.y"
        {this->_model.body.focus.type = body_t::focus_t::target_t::none;}
        break;

        case 303:
#line 436 "parser.y"
        {
            d_val_ = vs_(-4);
        }
        break;

        case 304:
#line 437 "parser.y"
        {this->_model.body.tackle.expires = vs_(-1).i;}
        break;

        case 305:
#line 438 "parser.y"
        {this->_model.body.tackle.count = vs_(-1).i;}
        break;

        case 306:
#line 439 "parser.y"
        {
            d_val_ = vs_(-3);
        }
        break;

        case 307:
#line 440 "parser.y"
        {this->_model.body.collision = u2d::body_t::collision_t::none;}
        break;

        case 308:
#line 441 "parser.y"
        {this->_model.body.collision = u2d::body_t::collision_t::ball;}
        break;

        case 309:
#line 442 "parser.y"
        {this->_model.body.collision = u2d::body_t::collision_t::player;}
        break;

        case 310:
#line 443 "parser.y"
        {this->_model.body.collision = body_t::collision_t::post;}
        break;

        case 311:
#line 444 "parser.y"
        {
            d_val_ = vs_(-4);
        }
        break;

        case 312:
#line 445 "parser.y"
        {this->_model.body.foul.charged = vs_(-1).i;}
        break;

        case 313:
#line 446 "parser.y"
        {
            d_val_ = vs_(-3);
        }
        break;

        case 314:
#line 447 "parser.y"
        {this->_model.body.foul.card = body_t::foul_t::card_t::none;}
        break;

        case 315:
#line 448 "parser.y"
        {this->_model.body.foul.card = body_t::foul_t::card_t::yellow;}
        break;

        case 316:
#line 450 "parser.y"
        { }
        break;

        case 317:
#line 451 "parser.y"
        {
            d_val_ = vs_(-1);
        }
        break;

        case 318:
#line 452 "parser.y"
        {
            d_val_ = vs_(0);
        }
        break;

        case 319:
#line 453 "parser.y"
        {
            d_val_ = vs_(0);
        }
        break;

        case 320:
#line 454 "parser.y"
        {
            d_val_ = vs_(0);
        }
        break;

        case 321:
#line 455 "parser.y"
        {
            d_val_ = vs_(0);
        }
        break;

        case 322:
#line 456 "parser.y"
        {
            d_val_ = vs_(0);
        }
        break;

        case 323:
#line 457 "parser.y"
        {
            d_val_ = vs_(0);
        }
        break;

        case 324:
#line 458 "parser.y"
        {
            d_val_ = vs_(0);
        }
        break;

        case 325:
#line 461 "parser.y"
        {
        }
        break;

        case 326:
#line 465 "parser.y"
        {
        }
        break;

        case 327:
#line 469 "parser.y"
        {
        }
        break;

        case 328:
#line 473 "parser.y"
        {
        }
        break;

        case 329:
#line 476 "parser.y"
        { }
        break;

        case 330:
#line 477 "parser.y"
        { }
        break;

        case 331:
#line 478 "parser.y"
        { }
        break;

        case 332:
#line 479 "parser.y"
        { }
        break;

        case 333:
#line 481 "parser.y"
        {
        }
        break;

        case 334:
#line 485 "parser.y"
        {
        }
        break;

        case 335:
#line 489 "parser.y"
        {
        }
        break;

        case 336:
#line 492 "parser.y"
        {
        }
        break;

        case 337:
#line 494 "parser.y"
        { }
        break;

        case 338:
#line 495 "parser.y"
        { }
        break;

        case 339:
#line 496 "parser.y"
        { }
        break;

        case 340:
#line 497 "parser.y"
        { }
        break;

        case 341:
#line 498 "parser.y"
        { }
        break;

        case 342:
#line 499 "parser.y"
        { }
        break;

        case 343:
#line 500 "parser.y"
        { }
        break;

        case 344:
#line 501 "parser.y"
        { }
        break;

        case 345:
#line 502 "parser.y"
        { }
        break;

        case 346:
#line 503 "parser.y"
        { }
        break;

        case 347:
#line 504 "parser.y"
        { }
        break;

        case 348:
#line 505 "parser.y"
        { }
        break;

        case 349:
#line 506 "parser.y"
        { }
        break;

        case 350:
#line 507 "parser.y"
        { }
        break;

        case 351:
#line 508 "parser.y"
        { }
        break;

        case 352:
#line 509 "parser.y"
        { }
        break;

        case 353:
#line 510 "parser.y"
        { }
        break;

        case 354:
#line 511 "parser.y"
        { }
        break;

        case 355:
#line 512 "parser.y"
        { }
        break;

        case 356:
#line 513 "parser.y"
        { }
        break;

        case 357:
#line 514 "parser.y"
        { }
        break;

        case 358:
#line 515 "parser.y"
        { }
        break;

        case 359:
#line 516 "parser.y"
        { }
        break;

        case 360:
#line 517 "parser.y"
        { }
        break;

        case 361:
#line 518 "parser.y"
        { }
        break;

        case 362:
#line 519 "parser.y"
        { }
        break;

        case 363:
#line 520 "parser.y"
        { }
        break;

        case 364:
#line 521 "parser.y"
        { }
        break;

        case 365:
#line 522 "parser.y"
        { }
        break;

        case 366:
#line 523 "parser.y"
        { }
        break;

        case 367:
#line 524 "parser.y"
        { }
        break;

        case 368:
#line 525 "parser.y"
        { }
        break;

        case 369:
#line 526 "parser.y"
        { }
        break;

        case 370:
#line 527 "parser.y"
        { }
        break;

        case 371:
#line 528 "parser.y"
        { }
        break;

        case 372:
#line 529 "parser.y"
        { }
        break;

        case 373:
#line 530 "parser.y"
        { }
        break;

        case 374:
#line 531 "parser.y"
        { }
        break;

        case 375:
#line 532 "parser.y"
        { }
        break;

        case 376:
#line 533 "parser.y"
        { }
        break;

        case 377:
#line 534 "parser.y"
        { }
        break;

        case 378:
#line 535 "parser.y"
        { }
        break;

        case 379:
#line 536 "parser.y"
        { }
        break;

        case 380:
#line 537 "parser.y"
        { }
        break;

        case 381:
#line 538 "parser.y"
        { }
        break;

        case 382:
#line 539 "parser.y"
        { }
        break;

        case 383:
#line 540 "parser.y"
        { }
        break;

        case 384:
#line 541 "parser.y"
        { }
        break;

        case 385:
#line 542 "parser.y"
        { }
        break;

        case 386:
#line 543 "parser.y"
        { }
        break;

        case 387:
#line 544 "parser.y"
        { }
        break;

        case 388:
#line 545 "parser.y"
        { }
        break;

        case 389:
#line 546 "parser.y"
        { }
        break;

        case 390:
#line 547 "parser.y"
        { }
        break;

        case 391:
#line 548 "parser.y"
        { }
        break;

        case 392:
#line 549 "parser.y"
        { }
        break;

        case 393:
#line 550 "parser.y"
        { }
        break;

        case 394:
#line 551 "parser.y"
        { }
        break;

        case 395:
#line 552 "parser.y"
        {d_val_.i = 0;}
        break;

        case 396:
#line 553 "parser.y"
        {d_val_.i = 1;}
        break;

        case 397:
#line 554 "parser.y"
        { }
        break;

        case 398:
#line 555 "parser.y"
        { }
        break;

        case 399:
#line 556 "parser.y"
        { }
        break;

        case 400:
#line 557 "parser.y"
        { }
        break;

        case 401:
#line 559 "parser.y"
        { std::cerr << "seen hear" << std::endl;}
        break;

        case 402:
#line 560 "parser.y"
        {}
        break;

        case 403:
#line 561 "parser.y"
        {}
        break;

        case 404:
#line 562 "parser.y"
        {}
        break;

        case 405:
#line 563 "parser.y"
        {}
        break;

        case 406:
#line 564 "parser.y"
        {}
        break;

        case 407:
#line 565 "parser.y"
        {}
        break;

    }
}
catch (std::exception const &exc)
{
    exceptionHandler(exc);
}

// derived/nextcycle
void parser::nextCycle_()
try
{
    if (s_state[state_()]->d_type & REQ_TOKEN)
        nextToken_();              // obtain next token


    int action = lookup_();        // lookup d_token in d_state

    if (action > 0)                 // SHIFT: push a new state
    {
        shift_(action);
        return;
    }

    if (action < 0)            // REDUCE: execute and pop.
    {

        if (recovery_())
            redoToken_();
        else
            executeAction_(-action);
                                            // next token is the rule's LHS
        reduce_(-action); 
        return;
    }

    if (recovery_())
        ABORT();
    else 
        ACCEPT();
}
catch (ErrorRecovery_)
{
    if (not recovery_())
        errorRecovery_();
    else
    {
        if (token_() == Reserved_::EOF_)
            ABORT();
        popToken_();               // skip the failing token
    }
}


// derived/nexttoken
void parser::nextToken_()
{ 
    // If d_token is Reserved_::UNDETERMINED_ then if savedToken_() is
    // Reserved_::UNDETERMINED_ another token is obtained from lex(). Then
    // savedToken_() is assigned to d_token.

                                    // no need for a token: got one already
    if (token_() != Reserved_::UNDETERMINED_) 
    {
        return;                             
    }

    if (savedToken_() != Reserved_::UNDETERMINED_)
    {
        popToken_();               // consume pending token
    }
    else
    {
        ++d_acceptedTokens_;       // accept another token (see
                                    // errorRecover())
        lex_(lex());
        print_();
    }
    print();
}

// derived/print
void parser::print_()
{
// $insert print
}

// derived/parse
int parser::parse()
try 
{
    // The parsing algorithm:
    // Initially, state 0 is pushed on the stack, and all relevant variables
    // are initialized by Base::clearin_.
    //
    // Then, in an eternal loop:
    //
    //  1. If a state is a REQ_TOKEN type, then the next token is obtained
    //     from nextToken().  This may very well be the currently available
    //     token. When retrieving a terminal token d_terminal is set to true.
    //
    //  2. lookup() is called, d_token is looked up in the current state's
    //     SR_ array.
    //
    //  4. Depending on the result of the lookup() function the next state is
    //     shifted on the parser's stack, a reduction by some rule is applied,
    //     or the parsing function returns ACCEPT(). When a reduction is
    //     called for, any action that may have been defined for that
    //     reduction is executed.
    //
    //  5. An error occurs if d_token is not found, and the state has no
    //     default reduction.

    clearin_();                            // initialize, push(0)

    while (true)
    {
// $insert prompt
        nextCycle_();
    }
}
catch (Return_ retValue)
{
    return retValue or d_nErrors_;
}


// derived/tail

// $insert namespace-close
}

