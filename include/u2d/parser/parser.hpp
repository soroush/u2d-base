// Generated by Bisonc++ V6.04.01 on Fri, 18 Feb 2022 00:26:39 +0100

#ifndef u2dparser_h_included
#define u2dparser_h_included

// $insert baseclass
#include "parser-base.hpp"
// $insert scanner.h
#include <u2d/perception/model.hpp>
#include "scanner.hpp"

// $insert namespace-open
namespace u2d
{

// $insert undefparser
#undef parser
// CAVEAT: between the baseclass-include directive and the
// #undef directive in the previous line references to parser
// are read as parserBase.
// If you need to include additional headers in this file
// you should do so after these comment-lines.

class parser : public parserBase
{
    // $insert scannerobject
    scanner d_scanner;
    u2d::model_t& _model;

public:
    parser(std::istream& in, std::ostream& out, u2d::model_t& model);
    int parse();

private:
    void error(); // called on (syntax) errors
    int lex();    // returns the next token from the
                  // lexical scanner.
    void print(); // use, e.g., d_token, d_loc
    void exceptionHandler(std::exception const& exc);

    // support functions for parse():
    void executeAction_(int ruleNr);
    void errorRecovery_();
    void nextCycle_();
    void nextToken_();
    void print_();
};

// $insert namespace-close
} // namespace u2d

#endif
